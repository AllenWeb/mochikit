/***

    MochiKit.MochiKit 1.5 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

var MochiKit=MochiKit||{};
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=true;
}
MochiKit.NAME="MochiKit";
MochiKit.VERSION="1.5";
MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.Base=MochiKit.Base||{};
MochiKit.Base.module=function(_1,_2,_3,_4){
var _5=_1[_2]=_1[_2]||{};
var _6=(_1.NAME?_1.NAME+".":"");
_5.NAME=_6+_2;
_5.VERSION=_3;
_5.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
_5.toString=function(){
return this.__repr__();
};
for(var i=0;_4!=null&&i<_4.length;i++){
if(!(_4[i] in _1)){
throw _5.NAME+" depends on "+_6+_4[i]+"!";
}
}
return _5;
};
MochiKit.Base.module(MochiKit,"Base","1.5",[]);
MochiKit.Base.update=function(_8,_9){
if(_8===null||_8===undefined){
_8={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_8[k]=o[k];
}
}
}
return _8;
};
MochiKit.Base.update(MochiKit.Base,{camelize:function(_d){
var _e=_d.split("-");
var cc=_e[0];
for(var i=1;i<_e.length;i++){
cc+=_e[i].charAt(0).toUpperCase()+_e[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _1c=m.extend(null,arguments);
while(_1c.length){
var o=_1c.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_1c.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_1f,obj,_21){
if(!_21){
_21=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_1f){
_1f=[];
}
for(var i=_21;i<l;i++){
_1f.push(obj[i]);
}
}
return _1f;
},updatetree:function(_24,obj){
if(_24===null||_24===undefined){
_24={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_24[k])=="object"&&typeof (v)=="object"){
arguments.callee(_24[k],v);
}else{
_24[k]=v;
}
}
}
}
return _24;
},setdefault:function(_2a,obj){
if(_2a===null||_2a===undefined){
_2a={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _2a)){
_2a[k]=o[k];
}
}
}
return _2a;
},keys:function(obj){
var _30=[];
for(var _31 in obj){
_30.push(_31);
}
return _30;
},values:function(obj){
var _33=[];
for(var _34 in obj){
_33.push(obj[_34]);
}
return _33;
},items:function(obj){
var _36=[];
var e;
for(var _38 in obj){
var v;
try{
v=obj[_38];
}
catch(e){
continue;
}
_36.push([_38,v]);
}
return _36;
},_newNamedError:function(_3a,_3b,_3c){
_3c.prototype=new MochiKit.Base.NamedError(_3a.NAME+"."+_3b);
_3a[_3b]=_3c;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_7a){
return function(){
return this[_7a].apply(this,arguments);
};
},itemgetter:function(_7b){
return function(arg){
return arg[_7b];
};
},bool:function(_7d){
if(typeof (_7d)==="boolean"||_7d instanceof Boolean){
return _7d.valueOf();
}else{
if(typeof (_7d)==="string"||_7d instanceof String){
return _7d.length>0&&_7d!="false"&&_7d!="null"&&_7d!="undefined"&&_7d!="0";
}else{
if(typeof (_7d)==="number"||_7d instanceof Number){
return !isNaN(_7d)&&_7d!=0;
}else{
if(_7d!=null&&typeof (_7d.length)==="number"){
return _7d.length!==0;
}else{
return _7d!=null;
}
}
}
}
},typeMatcher:function(){
var _7e={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_7e[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _7e)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _8f=[];
for(var i=1;i<arguments.length;i++){
_8f.push(fn(arguments[i]));
}
return _8f;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _95=m.isArrayLike;
if(arguments.length<=2){
if(!_95(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _96=[];
for(var i=0;i<lst.length;i++){
_96.push(fn(lst[i]));
}
return _96;
}else{
if(fn===null){
fn=Array;
}
var _98=null;
for(var i=1;i<arguments.length;i++){
if(!_95(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_98===null||_98>l){
_98=l;
}
}
_96=[];
for(var i=0;i<_98;i++){
var _9a=[];
for(var j=1;j<arguments.length;j++){
_9a.push(arguments[j][i]);
}
_96.push(fn.apply(this,_9a));
}
return _96;
}
},xfilter:function(fn){
var _9d=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_9d.push(o);
}
}
return _9d;
},filter:function(fn,lst,_a2){
var _a3=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_a2);
}else{
if(typeof (_a2)=="undefined"||_a2===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_a3.push(o);
}
}
}else{
for(var i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_a2,o)){
_a3.push(o);
}
}
}
}
return _a3;
},_wrapDumbFunction:function(_a7){
return function(){
switch(arguments.length){
case 0:
return _a7();
case 1:
return _a7(arguments[0]);
case 2:
return _a7(arguments[0],arguments[1]);
case 3:
return _a7(arguments[0],arguments[1],arguments[2]);
}
var _a8=[];
for(var i=0;i<arguments.length;i++){
_a8.push("arguments["+i+"]");
}
return eval("(func("+_a8.join(",")+"))");
};
},methodcaller:function(_aa){
var _ab=MochiKit.Base.extend(null,arguments,1);
if(typeof (_aa)=="function"){
return function(obj){
return _aa.apply(obj,_ab);
};
}else{
return function(obj){
return obj[_aa].apply(obj,_ab);
};
}
},method:function(_ae,_af){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_af,_ae],arguments,2));
},compose:function(f1,f2){
var _b3=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_b3.push(fn);
}
return function(){
var _b7=arguments;
for(var i=_b3.length-1;i>=0;i--){
_b7=[_b3[i].apply(this,_b7)];
}
return _b7[0];
};
},bind:function(_b9,_ba){
if(typeof (_b9)=="string"){
_b9=_ba[_b9];
}
var _bb=_b9.im_func;
var _bc=_b9.im_preargs;
var _bd=_b9.im_self;
var m=MochiKit.Base;
if(typeof (_b9)=="function"&&typeof (_b9.apply)=="undefined"){
_b9=m._wrapDumbFunction(_b9);
}
if(typeof (_bb)!="function"){
_bb=_b9;
}
if(typeof (_ba)!="undefined"){
_bd=_ba;
}
if(typeof (_bc)=="undefined"){
_bc=[];
}else{
_bc=_bc.slice();
}
m.extend(_bc,arguments,2);
var _bf=function(){
var _c0=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_c0=m.concat(me.im_preargs,_c0);
}
var _c2=me.im_self;
if(!_c2){
_c2=this;
}
return me.im_func.apply(_c2,_c0);
};
_bf.im_self=_bd;
_bf.im_func=_bb;
_bf.im_preargs=_bc;
if(typeof (_bb.NAME)=="string"){
_bf.NAME="bind("+_bb.NAME+",...)";
}
return _bf;
},bindLate:function(_c3,_c4){
var m=MochiKit.Base;
var _c6=arguments;
if(typeof (_c3)==="string"){
_c6=m.extend([m.forwardCall(_c3)],arguments,1);
return m.bind.apply(this,_c6);
}
return m.bind.apply(this,_c6);
},bindMethods:function(_c7){
var _c8=MochiKit.Base.bind;
for(var k in _c7){
var _ca=_c7[k];
if(typeof (_ca)=="function"){
_c7[k]=_c8(_ca,_c7);
}
}
},registerComparator:function(_cb,_cc,_cd,_ce){
MochiKit.Base.comparatorRegistry.register(_cb,_cc,_cd,_ce);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _d1=(typeof (a)=="undefined"||a===null);
var _d2=(typeof (b)=="undefined"||b===null);
if(_d1&&_d2){
return 0;
}else{
if(_d1){
return -1;
}else{
if(_d2){
return 1;
}
}
}
var m=MochiKit.Base;
var _d4=m._primitives;
if(!(typeof (a) in _d4&&typeof (b) in _d4)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _d5=m.repr;
throw new TypeError(_d5(a)+" and "+_d5(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _da=MochiKit.Base.compare;
var _db=a.length;
var _dc=0;
if(_db>b.length){
_dc=1;
_db=b.length;
}else{
if(_db<b.length){
_dc=-1;
}
}
for(var i=0;i<_db;i++){
var cmp=_da(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _dc;
},registerRepr:function(_df,_e0,_e1,_e2){
MochiKit.Base.reprRegistry.register(_df,_e0,_e1,_e2);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
try{
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
catch(ignore){
}
}
try{
var _e4=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_e4=_e4.replace(/^\s+/,"").replace(/\s+/g," ");
_e4=_e4.replace(/,(\S)/,", $1");
var idx=_e4.indexOf("{");
if(idx!=-1){
_e4=_e4.substr(0,idx)+"{...}";
}
}
return _e4;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_ea,_eb,_ec,_ed){
MochiKit.Base.jsonRegistry.register(_ea,_eb,_ec,_ed);
},evalJSON:function(_ee){
return eval("("+MochiKit.Base._filterJSON(_ee)+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
return (m)?m[1]:s;
},serializeJSON:function(o){
var _f2=typeof (o);
if(_f2=="number"||_f2=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_f2=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _f8;
if(typeof (o.toJSON)=="function"){
_f8=o.toJSON();
if(o!==_f8){
return me(_f8);
}
}
if(typeof (o.__json__)=="function"){
_f8=o.__json__();
if(o!==_f8){
return me(_f8);
}
}
if(typeof (o.json)=="function"){
_f8=o.json();
if(o!==_f8){
return me(_f8);
}
}
if(_f2!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_f8=m.jsonRegistry.match(o);
if(o!==_f8){
return me(_f8);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_f2=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_f2=="function"){
return null;
}
res=[];
for(var k in o){
var _fc;
if(typeof (k)=="number"){
_fc="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_fc=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_fc+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_ff,arr){
if(_ff.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_ff,arr)===0);
},concat:function(){
var rval=[];
var _102=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_102(rval,arguments[i]);
}
return rval;
},keyComparator:function(key){
var m=MochiKit.Base;
var _106=m.compare;
if(arguments.length==1){
return function(a,b){
return _106(a[key],b[key]);
};
}
var _109=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_109.length);i++){
var key=_109[i];
rval=_106(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _110=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _110(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_115,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _118=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_118(o,cur)==_115){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_11c,_11d,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_11d)=="undefined"||_11d===null){
_11d=0;
}
for(var i=_11d;i<end;i++){
if(lst[i]===_11c){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _123=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_123+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_123<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_123;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(MochiKit.Base.compare);
if(data.length%2==0){
var _127=data.length/2;
return (data[_127]+data[_127-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_129,_12a,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_12a)=="undefined"||_12a===null){
_12a=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_12a;i<end;i++){
if(cmp(lst[i],_129)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_12f){
var _130=[node];
var _131=MochiKit.Base.extend;
while(_130.length){
var res=_12f(_130.shift());
if(res){
_131(_130,res);
}
}
},nameFunctions:function(_133){
var base=_133.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _133){
var o=_133[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_137,_138){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_137)=="string"||(typeof (_137.nodeType)!="undefined"&&_137.nodeType>0))){
var kv=MochiKit.DOM.formContents(_137);
_137=kv[0];
_138=kv[1];
}else{
if(arguments.length==1){
if(typeof (_137.length)=="number"&&_137.length==2){
return arguments.callee(_137[0],_137[1]);
}
var o=_137;
_137=[];
_138=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_137.push(k);
_138.push(v[i]);
}
}else{
_137.push(k);
_138.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_137.length,_138.length);
var _140=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_138[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_140(_137[i])+"="+_140(v));
}
}
return rval.join("&");
},parseQueryString:function(_141,_142){
var qstr=(_141.charAt(0)=="?")?_141.substring(1):_141;
var _144=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _146;
if(typeof (decodeURIComponent)!="undefined"){
_146=decodeURIComponent;
}else{
_146=unescape;
}
if(_142){
for(var i=0;i<_144.length;i++){
var pair=_144[i].split("=");
var name=_146(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_146(pair.join("=")));
}
}else{
for(var i=0;i<_144.length;i++){
pair=_144[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_146(name)]=_146(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_14c,wrap,_14e){
if(_14e){
this.pairs.unshift([name,_14c,wrap]);
}else{
this.pairs.push([name,_14c,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.moduleExport=function(_154,_155){
var SKIP={toString:true,NAME:true,VERSION:true};
var mods=MochiKit.Base.extend([],arguments,1);
while((_155=mods.shift())!=null){
for(var k in _155){
var v=_155[k];
if(v!=null){
var _15a=(typeof (v.__export__)=="boolean");
var _15b=(k[0]!=="_"&&!SKIP[k]);
if(_15a?v.__export__:_15b){
if(typeof (v)=="object"&&v.NAME&&v.VERSION){
mods.push(v);
}else{
_154[k]=_155[k];
}
}
}
}
}
return _154;
};
MochiKit.Base._exportSymbols=function(_15c,_15d){
if(MochiKit.__export__!==false&&_15d.__export__!==false){
MochiKit.Base.moduleExport(_15c,_15d);
}
};
MochiKit.Base._deprecated=function(_15e,name,_160,_161,_162){
if(typeof (_15e)==="string"){
if(_15e.indexOf("MochiKit.")===0){
_15e=_15e.substring(9);
}
_15e=MochiKit[_15e];
}
var _163=_160.split(".")[1];
var _164=_160.split(".")[2];
var func=function(){
var self=arguments.callee;
var msg=_15e.NAME+"."+name+" is deprecated since version "+_161+". Use "+_160+" instead.";
if(self.logged!==true){
self.logged=true;
if(MochiKit.Logging){
MochiKit.Logging.logDebug(msg);
}else{
if(console&&console.log){
console.log(msg);
}
}
}
if(!MochiKit[_163]){
throw new Error(msg);
}
return MochiKit[_163][_164].apply(this,arguments);
};
func.__export__=(_162===true);
_15e[name]=func;
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m._deprecated(m,"forward","MochiKit.Base.forwardCall","1.3");
m._deprecated(m,"find","MochiKit.Base.findValue","1.3");
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_169){
return encodeURIComponent(_169).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_16a){
return escape(_16a).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.isValue=m.typeMatcher("boolean","number","string");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
mean=MochiKit.Base.mean;
median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
MochiKit.Base.module(MochiKit,"Iter","1.5",["Base"]);
MochiKit.Base.update(MochiKit.Iter,{registerIteratorFactory:function(name,_16d,_16e,_16f){
MochiKit.Iter.iteratorRegistry.register(name,_16d,_16e,_16f);
},isIterable:function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
},iter:function(_171,_172){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_172;
},_171);
}
if(typeof (_171.next)=="function"){
return _171;
}else{
if(typeof (_171.iter)=="function"){
return _171.iter();
}
}
try{
return self.iteratorRegistry.match(_171);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_171)+": "+m.repr(_171)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _17c=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_17c.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_182){
return _182.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _188=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_188);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _194=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_194=arguments[1];
stop=arguments[2];
}else{
_194=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_194,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_194){
rval=seq.next();
i++;
}
if(_194>=stop){
throw self.StopIteration;
}
_194+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _19e=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_19e));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _1a9=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_1a9.length>1){
try{
return _1a9[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_1a9.shift();
}
}
if(_1a9.length==1){
var arg=_1a9.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_1b4,sync,_1b6){
sync.pos[_1b4]=-1;
var m=MochiKit.Base;
var _1b8=m.listMin;
return {repr:function(){
return "tee("+_1b4+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1b4];
if(i==sync.max){
rval=_1b6.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1b4]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1b4]+=1;
if(i==sync.min&&_1b8(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_1bb,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1bb=self.iter(_1bb);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1bb));
}
return rval;
},list:function(_1c2){
var rval;
if(_1c2 instanceof Array){
return _1c2.slice();
}
if(typeof (_1c2)=="function"&&!(_1c2 instanceof Function)&&typeof (_1c2.length)=="number"){
rval=[];
for(var i=0;i<_1c2.length;i++){
rval.push(_1c2[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1c2=self.iter(_1c2);
var rval=[];
var _1c6;
try{
while(true){
_1c6=_1c2.next();
rval.push(_1c6);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1c8,_1c9){
var i=0;
var x=_1c9;
var self=MochiKit.Iter;
_1c8=self.iter(_1c8);
if(arguments.length<3){
try{
x=_1c8.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1c8.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1cd=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1cd=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1cd=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1cd>=stop)||(step<0&&_1cd<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1cd;
_1cd+=step;
return rval;
},repr:function(){
return "range("+[_1cd,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1d1,_1d2){
if(typeof (_1d2)=="undefined"||_1d2===null){
_1d2=0;
}
var x=_1d2;
var self=MochiKit.Iter;
_1d1=self.iter(_1d1);
try{
while(true){
x+=_1d1.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1d5){
var self=MochiKit.Iter;
_1d5=self.iter(_1d5);
try{
while(true){
_1d5.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1d7,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_1d7)&&!self.isIterable(_1d7)){
try{
for(var i=0;i<_1d7.length;i++){
func(_1d7[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_1d7));
}
},every:function(_1dd,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_1dd).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_1e0,cmp){
var rval=MochiKit.Iter.list(_1e0);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_1e3){
var rval=MochiKit.Iter.list(_1e3);
rval.reverse();
return rval;
},some:function(_1e5,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_1e5).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_1e9){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_1e9)&&!self.isIterable(_1e9)){
for(var i=0;i<_1e9.length;i++){
lst.push(_1e9[i]);
}
}else{
_1e9=self.iter(_1e9);
try{
while(true){
lst.push(_1e9.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_1ed,_1ee){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1ee=m.operator.identity;
}
_1ed=self.iter(_1ed);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_1ed.next();
k=_1ee(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _1f5=true;
var _1f6=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_1f6(k,pk)===0){
fetch();
if(_1f5){
_1f5=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_1f6(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_1f7,_1f8){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1f8=m.operator.identity;
}
_1f7=self.iter(_1f7);
var _1fb=[];
var _1fc=true;
var _1fd;
var _1fe=m.compare;
while(true){
try{
var _1ff=_1f7.next();
var key=_1f8(_1ff);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_1fc||_1fe(key,_1fd)!==0){
var _201=[];
_1fb.push([key,_201]);
}
_201.push(_1ff);
_1fc=false;
_1fd=key;
}
return _1fb;
},arrayLikeIter:function(_202){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_202.length){
throw MochiKit.Iter.StopIteration;
}
return _202[i++];
}};
},hasIterateNext:function(_204){
return (_204&&typeof (_204.iterateNext)=="function");
},iterateNextIter:function(_205){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_205.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
MochiKit.Base.module(MochiKit,"Logging","1.5",["Base"]);
MochiKit.Logging.LogMessage=function(num,_209,info){
this.num=num;
this.level=_209;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_20c){
var self=MochiKit.Logging;
if(typeof (_20c)=="string"){
_20c=self.LogLevel[_20c];
}
return function(msg){
var _20f=msg.level;
if(typeof (_20f)=="string"){
_20f=self.LogLevel[_20f];
}
return _20f>=_20c;
};
},isLogMessage:function(){
var _210=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _210)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_215){
this.counter=0;
if(typeof (_215)=="undefined"||_215===null){
_215=-1;
}
this.maxSize=_215;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_21a,_21b,_21c){
if(typeof (_21b)=="string"){
_21b=MochiKit.Logging.logLevelAtLeast(_21b);
}
var _21d=[_21b,_21c];
_21d.ident=_21a;
this.listeners[_21a]=_21d;
},removeListener:function(_21e){
delete this.listeners[_21e];
},baseLog:function(_21f,_220){
if(typeof (_21f)=="number"){
if(_21f>=MochiKit.Logging.LogLevel.FATAL){
_21f="FATAL";
}else{
if(_21f>=MochiKit.Logging.LogLevel.ERROR){
_21f="ERROR";
}else{
if(_21f>=MochiKit.Logging.LogLevel.WARNING){
_21f="WARNING";
}else{
if(_21f>=MochiKit.Logging.LogLevel.INFO){
_21f="INFO";
}else{
_21f="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_21f,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_222){
var _223=0;
if(!(typeof (_222)=="undefined"||_222===null)){
_223=Math.max(0,this._messages.length-_222);
}
return this._messages.slice(_223);
},getMessageText:function(_224){
if(typeof (_224)=="undefined"||_224===null){
_224=30;
}
var _225=this.getMessages(_224);
if(_225.length){
var lst=MochiKit.Base.map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_225);
lst.unshift("LAST "+_225.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_228){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_228||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _22a=m.partial;
var _22b=this.Logger;
var _22c=_22b.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_22a(_22c,"DEBUG"),log:_22a(_22c,"INFO"),error:_22a(_22c,"ERROR"),fatal:_22a(_22c,"FATAL"),warning:_22a(_22c,"WARNING")});
var self=this;
var _22e=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_22e("log");
this.logError=_22e("error");
this.logDebug=_22e("debug");
this.logFatal=_22e("fatal");
this.logWarning=_22e("warning");
this.logger=new _22b();
this.logger.useNativeConsole=true;
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
MochiKit.Base.module(MochiKit,"DateTime","1.5",["Base"]);
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var date=new Date(iso[0],iso[1]-1,iso[2]);
date.setFullYear(iso[0]);
date.setMonth(iso[1]-1);
date.setDate(iso[2]);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_236,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_236=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_236,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_236,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_236,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_23e){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _23f=MochiKit.DateTime._padTwo;
if(_23e){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
var lst=[(_23e?_23f(date.getHours()):date.getHours()),_23f(date.getMinutes()),_23f(date.getSeconds())];
return lst.join(":")+(_23e?"Z":"");
};
MochiKit.DateTime.toISOTimestamp=function(date,_242){
if(typeof (date)=="undefined"||date===null){
return null;
}
var time=MochiKit.DateTime.toISOTime(date,_242);
var sep=_242?"T":" ";
if(_242){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+time;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _246=MochiKit.DateTime._padTwo;
var _247=MochiKit.DateTime._padFour;
return [_247(date.getFullYear()),_246(date.getMonth()+1),_246(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _24d=MochiKit.DateTime._padTwo;
return [_24d(d.getMonth()+1),_24d(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
MochiKit.Base.module(MochiKit,"Format","1.5",["Base"]);
MochiKit.Format._numberFormatter=function(_24f,_250,_251,_252,_253,_254,_255,_256,_257){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _24f;
}
var _259=_250;
var _25a=_251;
if(num<0){
num=-num;
}else{
_259=_259.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_252);
if(_253){
num=num*100;
_25a=fmt.percent+_25a;
}
num=MochiKit.Format.roundToFixed(num,_254);
var _25d=num.split(/\./);
var _25e=_25d[0];
var frac=(_25d.length==1)?"":_25d[1];
var res="";
while(_25e.length<_255){
_25e="0"+_25e;
}
if(_256){
while(_25e.length>_256){
var i=_25e.length-_256;
res=fmt.separator+_25e.substring(i,_25e.length)+res;
_25e=_25e.substring(0,i);
}
}
res=_25e+res;
if(_254>0){
while(frac.length<_257){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _259+res+_25a;
};
};
MochiKit.Format.numberFormatter=function(_262,_263,_264){
if(typeof (_263)=="undefined"){
_263="";
}
var _265=_262.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_265){
throw TypeError("Invalid pattern");
}
var _266=_262.substr(0,_265.index);
var _267=_262.substr(_265.index+_265[0].length);
if(_266.search(/-/)==-1){
_266=_266+"-";
}
var _268=_265[1];
var frac=(typeof (_265[2])=="string"&&_265[2]!="")?_265[2]:"";
var _26a=(typeof (_265[3])=="string"&&_265[3]!="");
var tmp=_268.split(/,/);
var _26c;
if(typeof (_264)=="undefined"){
_264="default";
}
if(tmp.length==1){
_26c=null;
}else{
_26c=tmp[1].length;
}
var _26d=_268.length-_268.replace(/0/g,"").length;
var _26e=frac.length-frac.replace(/0/g,"").length;
var _26f=frac.length;
var rval=MochiKit.Format._numberFormatter(_263,_266,_267,_264,_26a,_26f,_26d,_26c,_26e);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",m.map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_274){
if(typeof (_274)=="undefined"||_274===null){
_274="default";
}
if(typeof (_274)=="string"){
var rval=MochiKit.Format.LOCALE[_274];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_274]=rval;
}
return rval;
}else{
return _274;
}
};
MochiKit.Format.twoDigitAverage=function(_276,_277){
if(_277){
var res=_276/_277;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_279){
var res=MochiKit.Format.roundToFixed(_279,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_27c){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_27c){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_27c+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_27e){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_27e){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_27e+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_280){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_280),_280);
};
MochiKit.Format.truncToFixed=function(_282,_283){
var _284=MochiKit.Format._numberToFixed(_282,_283);
var _285=_284.indexOf(".");
if(_285>0&&_285+_283+1<_284.length){
_284=_284.substring(0,_285+_283+1);
_284=MochiKit.Format._shiftNumber(_284,0);
}
return _284;
};
MochiKit.Format.roundToFixed=function(_286,_287){
var _288=MochiKit.Format._numberToFixed(_286,_287);
var _289=_288.indexOf(".");
if(_289>0&&_289+_287+1<_288.length){
var str=MochiKit.Format._shiftNumber(_288,_287);
str=MochiKit.Format._numberToFixed(Math.round(parseFloat(str)),0);
_288=MochiKit.Format._shiftNumber(str,-_287);
}
return _288;
};
MochiKit.Format._numberToFixed=function(_28b,_28c){
var str=_28b.toString();
var _28e=str.split(/[eE]/);
var exp=(_28e.length===1)?0:parseInt(_28e[1],10)||0;
var _290=MochiKit.Format._shiftNumber(_28e[0],exp);
_28e=_290.split(/\./);
var _291=_28e[0];
var frac=(_28e.length===1)?"":_28e[1];
while(frac.length<_28c){
frac+="0";
}
if(frac.length>0){
return _291+"."+frac;
}else{
return _291;
}
};
MochiKit.Format._shiftNumber=function(num,exp){
var pos=num.indexOf(".");
if(pos<0){
pos=num.length;
}else{
num=num.substring(0,pos)+num.substring(pos+1);
}
pos+=exp;
while(pos<=0||(pos<=1&&num.charAt(0)==="-")){
if(num.charAt(0)==="-"){
num="-0"+num.substring(1);
}else{
num="0"+num;
}
pos++;
}
while(pos>num.length){
num+="0";
}
if(pos<num.length){
num=num.substring(0,pos)+"."+num.substring(pos);
}
while(/^0[^.]/.test(num)){
num=num.substring(1);
}
while(/^-0[^.]/.test(num)){
num="-"+num.substring(2);
}
return num;
};
MochiKit.Format.percentFormat=function(_296){
return MochiKit.Format.twoDigitFloat(100*_296)+"%";
};
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US",__export__:false};
MochiKit.Format.__new__=function(){
MochiKit.Base.nameFunctions(this);
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
MochiKit.Base.module(MochiKit,"Text","1.5",["Base","Format"]);
MochiKit.Text.startsWith=function(_29b,str){
return str!=null&&_29b!=null&&str.indexOf(_29b)==0;
};
MochiKit.Text.endsWith=function(_29d,str){
return str!=null&&_29d!=null&&str.lastIndexOf(_29d)==Math.max(str.length-_29d.length,0);
};
MochiKit.Text.contains=function(_29f,str){
return str!=null&&_29f!=null&&str.indexOf(_29f)>=0;
};
MochiKit.Text.padLeft=function(str,_2a2,_2a3){
str=str||"";
_2a3=_2a3||" ";
while(str.length<_2a2){
str=_2a3+str;
}
return str;
};
MochiKit.Text.padRight=function(str,_2a5,_2a6){
str=str||"";
_2a6=_2a6||" ";
while(str.length<_2a5){
str+=_2a6;
}
return str;
};
MochiKit.Text.truncate=function(str,_2a8,tail){
if(str==null||str.length<=_2a8||_2a8<0){
return str;
}else{
if(tail!=null){
str=str.slice(0,Math.max(0,_2a8-tail.length));
if(typeof (str)=="string"){
return str+tail;
}else{
return MochiKit.Base.extend(str,tail);
}
}else{
return str.slice(0,_2a8);
}
}
};
MochiKit.Text.split=function(str,_2ab,max){
if(str==null){
return str;
}
_2ab=_2ab||"\n";
var bits=str.split(_2ab);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(max,bits.length,bits.slice(max,bits.length).join(_2ab));
return bits;
};
MochiKit.Text.rsplit=function(str,_2af,max){
if(str==null){
return str;
}
_2af=_2af||"\n";
var bits=str.split(_2af);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(0,bits.length-max,bits.slice(0,bits.length-max).join(_2af));
return bits;
};
MochiKit.Text.formatter=function(_2b2,_2b3){
if(typeof (_2b3)=="undefined"){
_2b3=MochiKit.Format.formatLocale();
}else{
if(typeof (_2b3)=="string"){
_2b3=MochiKit.Format.formatLocale(_2b3);
}
}
var _2b4=MochiKit.Text._parsePattern(_2b2);
return function(){
var _2b5=MochiKit.Base.extend([],arguments);
var res=[];
for(var i=0;i<_2b4.length;i++){
if(typeof (_2b4[i])=="string"){
res.push(_2b4[i]);
}else{
res.push(MochiKit.Text.formatValue(_2b4[i],_2b5,_2b3));
}
}
return res.join("");
};
};
MochiKit.Text.format=function(_2b8){
var func=MochiKit.Text.formatter(_2b8);
return func.apply(this,MochiKit.Base.extend([],arguments,1));
};
MochiKit.Text.formatValue=function(spec,_2bb,_2bc){
var self=MochiKit.Text;
if(typeof (spec)==="string"){
spec=self._parseFormatFlags(spec,0,spec.length-1);
}
for(var i=0;spec.path!=null&&i<spec.path.length;i++){
if(_2bb!=null){
_2bb=_2bb[spec.path[i]];
}
}
if(typeof (_2bc)=="undefined"){
_2bc=MochiKit.Format.formatLocale();
}else{
if(typeof (_2bc)=="string"){
_2bc=MochiKit.Format.formatLocale(_2bc);
}
}
var str="";
if(spec.numeric){
if(typeof (_2bb)!="number"||isNaN(_2bb)){
str="";
}else{
if(_2bb===Number.POSITIVE_INFINITY){
str="\u221e";
}else{
if(_2bb===Number.NEGATIVE_INFINITY){
str="-\u221e";
}else{
var sign=(spec.sign==="-")?"":spec.sign;
sign=(_2bb<0)?"-":sign;
_2bb=Math.abs(_2bb);
if(spec.format==="%"){
str=self._truncToPercent(_2bb,spec.precision);
}else{
if(spec.format==="d"){
str=MochiKit.Format.roundToFixed(_2bb,0);
}else{
if(spec.radix!=10){
str=Math.floor(_2bb).toString(spec.radix);
if(spec.format==="x"){
str=str.toLowerCase();
}else{
if(spec.format==="X"){
str=str.toUpperCase();
}
}
}else{
if(spec.precision>=0){
str=MochiKit.Format.roundToFixed(_2bb,spec.precision);
}else{
str=_2bb.toString();
}
}
}
}
if(spec.padding==="0"&&spec.format==="%"){
str=self.padLeft(str,spec.width-sign.length-1,"0");
}else{
if(spec.padding=="0"){
str=self.padLeft(str,spec.width-sign.length,"0");
}
}
str=self._localizeNumber(str,_2bc,spec.grouping);
str=sign+str;
}
}
}
if(str!==""&&spec.format==="%"){
str=str+_2bc.percent;
}
}else{
if(spec.format=="r"){
str=MochiKit.Base.repr(_2bb);
}else{
str=(_2bb==null)?"null":_2bb.toString();
}
str=self.truncate(str,spec.precision);
}
if(spec.align=="<"){
str=self.padRight(str,spec.width);
}else{
str=self.padLeft(str,spec.width);
}
return str;
};
MochiKit.Text._localizeNumber=function(num,_2c2,_2c3){
var _2c4=num.split(/\./);
var _2c5=_2c4[0];
var frac=(_2c4.length==1)?"":_2c4[1];
var res=(frac.length>0)?_2c2.decimal:"";
while(_2c3&&frac.length>3){
res=res+frac.substring(0,3)+_2c2.separator;
frac=frac.substring(3);
if(_2c5.charAt(0)=="0"){
_2c5=_2c5.substring(1);
}
}
if(frac.length>0){
res+=frac;
}
while(_2c3&&_2c5.length>3){
var pos=_2c5.length-3;
res=_2c2.separator+_2c5.substring(pos)+res;
_2c5=_2c5.substring((_2c5.charAt(0)=="0")?1:0,pos);
}
return _2c5+res;
};
MochiKit.Text._parsePattern=function(_2c9){
var self=MochiKit.Text;
var _2cb=[];
var _2cc=0;
var pos=0;
for(pos=0;pos<_2c9.length;pos++){
if(_2c9.charAt(pos)=="{"){
if(pos+1>=_2c9.length){
var msg="unescaped { char, should be escaped as {{";
throw new self.FormatPatternError(_2c9,pos,msg);
}else{
if(_2c9.charAt(pos+1)=="{"){
_2cb.push(_2c9.substring(_2cc,pos+1));
_2cc=pos+2;
pos++;
}else{
if(_2cc<pos){
_2cb.push(_2c9.substring(_2cc,pos));
}
_2cc=_2c9.indexOf("}",pos)+1;
if(_2cc<=0){
var msg="unmatched { char, not followed by a } char";
throw new self.FormatPatternError(_2c9,pos,msg);
}
_2cb.push(self._parseFormat(_2c9,pos+1,_2cc-1));
pos=_2cc-1;
}
}
}else{
if(_2c9.charAt(pos)=="}"){
if(pos+1>=_2c9.length||_2c9.charAt(pos+1)!="}"){
var msg="unescaped } char, should be escaped as }}";
throw new self.FormatPatternError(_2c9,pos,msg);
}
_2cb.push(_2c9.substring(_2cc,pos+1));
_2cc=pos+2;
pos++;
}
}
}
if(_2cc<pos){
_2cb.push(_2c9.substring(_2cc,pos));
}
return _2cb;
};
MochiKit.Text._parseFormat=function(_2cf,_2d0,_2d1){
var self=MochiKit.Text;
var text=_2cf.substring(_2d0,_2d1);
var info;
var pos=text.indexOf(":");
if(pos==0){
info=self._parseFormatFlags(_2cf,_2d0+1,_2d1);
info.path=[];
}else{
if(pos>0){
info=self._parseFormatFlags(_2cf,_2d0+pos+1,_2d1);
info.path=text.substring(0,pos).split(".");
}else{
info=self._parseFormatFlags(_2cf,_2d1,_2d1);
info.path=text.split(".");
}
}
var _2d6=/^\d+$/;
for(var i=0;i<info.path.length;i++){
var e=info.path[i];
e=e.replace(/^\s+/,"").replace(/\s+$/,"");
if(e==""&&info.path.length==1){
e=0;
}else{
if(e==""){
var msg="format value path contains blanks";
throw new self.FormatPatternError(_2cf,_2d0,msg);
}else{
if(_2d6.test(e)){
e=parseInt(e,10);
}
}
}
info.path[i]=e;
}
if(info.path.length<0||typeof (info.path[0])!="number"){
info.path.unshift(0);
}
return info;
};
MochiKit.Text._parseFormatFlags=function(_2da,_2db,_2dc){
var _2dd=MochiKit.Base.update;
var info={numeric:false,format:"s",width:0,precision:-1,align:">",sign:"-",padding:" ",grouping:false};
var _2df=_2da.substring(_2db,_2dc).replace(/\s+$/,"");
while(_2df.length>0){
var chr=_2df.charAt(0);
var _2e1=1;
switch(chr){
case ">":
case "<":
_2dd(info,{align:chr});
break;
case "+":
case "-":
case " ":
_2dd(info,{sign:chr});
break;
case ",":
_2dd(info,{grouping:true});
break;
case ".":
var _2e2=/^\d*/.exec(_2df.substring(1))[0];
_2dd(info,{precision:parseInt(_2e2,10)});
_2e1=1+_2e2.length;
break;
case "0":
_2dd(info,{padding:chr});
break;
case "1":
case "2":
case "3":
case "4":
case "5":
case "6":
case "7":
case "8":
case "9":
var _2e2=/^\d*/.exec(_2df)[0];
_2dd(info,{width:parseInt(_2e2,10)});
_2e1=_2e2.length;
break;
case "s":
case "r":
_2dd(info,{format:chr});
break;
case "b":
_2dd(info,{numeric:true,format:chr,radix:2});
break;
case "o":
_2dd(info,{numeric:true,format:chr,radix:8});
break;
case "x":
case "X":
_2dd(info,{numeric:true,format:chr,radix:16});
break;
case "d":
case "f":
case "%":
_2dd(info,{numeric:true,format:chr,radix:10});
break;
default:
var msg="unsupported format flag: "+chr;
throw new MochiKit.Text.FormatPatternError(_2da,_2db,msg);
}
_2df=_2df.substring(_2e1);
}
return info;
};
MochiKit.Text._truncToPercent=function(_2e4,_2e5){
var str;
if(_2e5>=0){
str=MochiKit.Format.roundToFixed(_2e4,_2e5+2);
}else{
str=(_2e4==null)?"0":_2e4.toString();
}
var arr=MochiKit.Text.split(str,".",2);
var frac=MochiKit.Text.padRight(arr[1],2,"0");
var _2e9=arr[0]+frac.substring(0,2);
frac=frac.substring(2);
while(/^0[0-9]/.test(_2e9)){
_2e9=_2e9.substring(1);
}
return (frac.length<=0)?_2e9:_2e9+"."+frac;
};
MochiKit.Text.FormatPatternError=function(_2ea,pos,_2ec){
this.pattern=_2ea;
this.pos=pos;
this.message=_2ec;
};
MochiKit.Text.FormatPatternError.prototype=new MochiKit.Base.NamedError("MochiKit.Text.FormatPatternError");
if(MochiKit.__export__){
formatter=MochiKit.Text.formatter;
format=MochiKit.Text.format;
formatValue=MochiKit.Text.formatValue;
}
MochiKit.Base.nameFunctions(MochiKit.Text);
MochiKit.Base._exportSymbols(this,MochiKit.Text);
MochiKit.Base.module(MochiKit,"Async","1.5",["Base"]);
MochiKit.Async.Deferred=function(_2ed){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_2ed;
this.silentlyCancelled=false;
this.chained=false;
this.finalized=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
return "Deferred("+this.id+", "+this.state()+")";
},toString:MochiKit.Base.forwardCall("repr"),_nextId:MochiKit.Base.counter(),state:function(){
if(this.fired==-1){
return "unfired";
}else{
if(this.fired===0){
return "success";
}else{
return "error";
}
}
},cancel:function(e){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
if(typeof (e)==="string"){
e=new self.GenericError(e);
}else{
if(!(e instanceof Error)){
e=new self.CancelledError(this);
}
}
this.errback(e);
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel(e);
}
}
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
if(this.paused===0){
this._fire();
}
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
},errback:function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},setFinalizer:function(fn){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
this._finalizer=fn;
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _2fa=this.chain;
var _2fb=this.fired;
var res=this.results[_2fb];
var self=this;
var cb=null;
while(_2fa.length>0&&this.paused===0){
var pair=_2fa.shift();
var f=pair[_2fb];
if(f===null){
continue;
}
try{
res=f(res);
_2fb=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self.paused--;
self._resback(res);
};
this.paused++;
}
}
catch(err){
_2fb=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_2fb;
this.results[_2fb]=res;
if(this.chain.length==0&&this.paused===0&&this._finalizer){
this.finalized=true;
this._finalizer(res);
}
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_303){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_305){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _308=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_308.length;i++){
var func=_308[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e){
}
}
var _30d=null;
try{
_30d=this.status;
if(!_30d&&m.isNotEmpty(this.responseText)){
_30d=304;
}
}
catch(e){
}
if(_30d==200||_30d==201||_30d==204||_30d==304||_30d==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_311){
if(typeof (_311)=="undefined"||_311===null){
_311="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_311);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var self=MochiKit.Async;
return self.callLater(0,self._doXHR,url,opts);
},_doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:""},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,true,opts.username,opts.password);
}else{
req.open(opts.method,url,true);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _31e=opts.headers;
if(!m.isArrayLike(_31e)){
_31e=m.items(_31e);
}
for(var i=0;i<_31e.length;i++){
var _320=_31e[i];
var name=_320[0];
var _322=_320[1];
req.setRequestHeader(name,_322);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},loadScript:function(url){
var d=new MochiKit.Async.Deferred();
var _32d=document.createElement("script");
_32d.type="text/javascript";
_32d.src=url;
_32d.onload=function(){
_32d.onload=null;
_32d.onerror=null;
_32d.onreadystatechange=null;
_32d=null;
d.callback();
};
_32d.onerror=function(msg){
_32d.onload=null;
_32d.onerror=null;
_32d.onreadystatechange=null;
_32d=null;
msg="Failed to load script at "+url+": "+msg;
d.errback(new URIError(msg,url));
};
_32d.onreadystatechange=function(){
if(_32d.readyState=="loaded"||_32d.readyState=="complete"){
_32d.onload();
}else{
MochiKit.Async.callLater(10,_32d.onerror,"Script loading timed out");
}
};
document.getElementsByTagName("head")[0].appendChild(_32d);
return d;
},wait:function(_32f,_330){
var d=new MochiKit.Async.Deferred();
var cb=MochiKit.Base.bind("callback",d,_330);
var _333=setTimeout(cb,Math.floor(_32f*1000));
d.canceller=function(){
try{
clearTimeout(_333);
}
catch(e){
}
};
return d;
},callLater:function(_334,func){
var m=MochiKit.Base;
var _337=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_334).addCallback(function(res){
return _337();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _33a;
if(this.locked){
_33a="locked, "+this.waiting.length+" waiting";
}else{
_33a="unlocked";
}
return "DeferredLock("+this.id+", "+_33a+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Async.DeferredList=function(list,_33c,_33d,_33e,_33f){
MochiKit.Async.Deferred.apply(this,[_33f]);
this.list=list;
var _340=[];
this.resultList=_340;
this.finishedCount=0;
this.fireOnOneCallback=_33c;
this.fireOnOneErrback=_33d;
this.consumeErrors=_33e;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_340.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_33c){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_344,_345,_346){
this.resultList[_344]=[_345,_346];
this.finishedCount+=1;
if(this.fired==-1){
if(_345&&this.fireOnOneCallback){
this.callback([_344,_346]);
}else{
if(!_345&&this.fireOnOneErrback){
this.errback(_346);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_345&&this.consumeErrors){
_346=null;
}
return _346;
};
MochiKit.Async.gatherResults=function(_347){
var d=new MochiKit.Async.DeferredList(_347,false,true,false);
d.addCallback(function(_349){
var ret=[];
for(var i=0;i<_349.length;i++){
ret.push(_349[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _34e;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_34e=r;
}else{
if(r instanceof Error){
_34e=self.fail(r);
}else{
_34e=self.succeed(r);
}
}
}
catch(e){
_34e=self.fail(e);
}
return _34e;
};
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_352){
this.deferred=_352;
});
ne("CancelledError",function(_353){
this.deferred=_353;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
MochiKit.Base.module(MochiKit,"DOM","1.5",["Base"]);
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _35b=self._document;
var _35c=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_35c;
self._document=_35b;
throw e;
}
self._window=_35c;
self._document=_35b;
return rval;
},formContents:function(elem){
var _35f=[];
var _360=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _365=elem.tagName.toUpperCase();
if(_365==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_365==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_35f.push(name);
_360.push(v);
return null;
}
_35f.push(name);
_360.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_35f.push(name);
_360.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_35f.push(name);
_360.push(v);
}
return null;
}
}
if(_365==="FORM"||_365==="P"||_365==="SPAN"||_365==="DIV"){
return elem.childNodes;
}
_35f.push(name);
_360.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_35f,_360];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _36e=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_36e;
throw e;
}
self._document=_36e;
return rval;
},registerDOMConverter:function(name,_371,wrap,_373){
MochiKit.DOM.domConverters.register(name,_371,wrap,_373);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _37a=im.repeat;
}
var map=m.map;
var _37c=self.domConverters;
var _37d=arguments.callee;
var _37e=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im?im.list(node):m.extend(null,node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _37f=null;
try{
_37f=iter(node);
}
catch(e){
}
if(_37f){
return map(_37d,_37f,_37a(ctx));
}
}else{
if(m.isArrayLike(node)){
var func=function(n){
return _37d(n,ctx);
};
return map(func,node);
}
}
try{
node=_37c.match(node,ctx);
continue;
}
catch(e){
if(e!=_37e){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_383){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_383)=="string"){
_383=self.getElement(_383);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_383){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_387){
var o={};
o[attr]=_387;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _38c=self.attributeArray.renames[attr];
var _38d=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_38c){
return node[_38c];
}
var _38e=node.getAttribute(attr);
if(_38e!=_38d){
return _38e;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _392=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_392){
return node[_392];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_394){
var elem=node;
var self=MochiKit.DOM;
var base=MochiKit.Base;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_394){
if(self.attributeArray.compliant){
for(var k in _394){
var v=_394[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _39a=self.attributeArray.renames;
for(var k in _394){
v=_394[k];
var _39b=_39a[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_39b)=="string"){
elem[_39b]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _39f=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3a0=MochiKit.Base.concat;
while(_39f.length){
var n=_39f.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_39f=_3a0(n,_39f);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3a5=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3a6=elem.parentNode;
var _3a7=MochiKit.Base.concat;
while(_3a5.length){
var n=_3a5.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_3a6.insertBefore(n,elem);
}else{
_3a5=_3a7(n,_3a5);
}
}
}
return _3a6;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3ac=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_3ac);
}else{
return self.appendChildNodes(elem.parentNode,_3ac);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _3b0;
while((_3b0=elem.firstChild)){
elem.removeChild(_3b0);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_3b2){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_3b2)=="string"||typeof (_3b2)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _3b7=self._xhtml;
if(_3b2&&!self.attributeArray.compliant){
var _3b8="";
if("name" in _3b2){
_3b8+=" name=\""+self.escapeHTML(_3b2.name)+"\"";
}
if(name=="input"&&"type" in _3b2){
_3b8+=" type=\""+self.escapeHTML(_3b2.type)+"\"";
}
if(_3b8){
name="<"+name+_3b8+">";
_3b7=false;
}
}
var d=self._document;
if(_3b7&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_3b2){
self.updateNodeAttributes(elem,_3b2);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
if(typeof (elem)=="string"){
elem=self.getElement(elem);
}
var e=self.coerceToDOM(elem);
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _3c1=dest.parentNode;
if(src){
if(typeof (src)=="string"){
src=self.getElement(src);
}
src=self.coerceToDOM(src,_3c1);
_3c1.replaceChild(src,dest);
}else{
_3c1.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_3c4,_3c5,_3c6){
var self=MochiKit.DOM;
if(typeof (_3c4)=="undefined"||_3c4===null){
_3c4="*";
}
if(typeof (_3c6)=="undefined"||_3c6===null){
_3c6=self._document;
}
_3c6=self.getElement(_3c6);
if(_3c6==null){
return [];
}
var _3c8=(_3c6.getElementsByTagName(_3c4)||self._document.all);
if(typeof (_3c5)=="undefined"||_3c5===null){
return MochiKit.Base.extend(null,_3c8);
}
var _3c9=[];
for(var i=0;i<_3c8.length;i++){
var _3cb=_3c8[i];
var cls=_3cb.className;
if(typeof (cls)!="string"){
cls=_3cb.getAttribute("class");
}
if(typeof (cls)=="string"){
var _3cd=cls.split(" ");
for(var j=0;j<_3cd.length;j++){
if(_3cd[j]==_3c5){
_3c9.push(_3cb);
break;
}
}
}
}
return _3c9;
},_newCallStack:function(path,once){
var rval=function(){
var _3d2=arguments.callee.callStack;
for(var i=0;i<_3d2.length;i++){
if(_3d2[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_3d4,path,func,once){
var self=MochiKit.DOM;
var _3d9=_3d4[path];
var _3da=_3d9;
if(!(typeof (_3d9)=="function"&&typeof (_3d9.callStack)=="object"&&_3d9.callStack!==null)){
_3da=self._newCallStack(path,once);
if(typeof (_3d9)=="function"){
_3da.callStack.push(_3d9);
}
_3d4[path]=_3da;
}
_3da.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_3dd){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_3dd=self.getElement(_3dd);
if(_3dd){
_3dd.focus();
}
});
},setElementClass:function(_3df,_3e0){
var self=MochiKit.DOM;
var obj=self.getElement(_3df);
if(self.attributeArray.compliant){
obj.setAttribute("class",_3e0);
}else{
obj.setAttribute("className",_3e0);
}
},toggleElementClass:function(_3e3){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_3e3)){
self.removeElementClass(obj,_3e3);
}
}
},addElementClass:function(_3e7,_3e8){
var self=MochiKit.DOM;
var obj=self.getElement(_3e7);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_3e8);
return true;
}
if(cls==_3e8){
return false;
}
var _3ec=cls.split(" ");
for(var i=0;i<_3ec.length;i++){
if(_3ec[i]==_3e8){
return false;
}
}
self.setElementClass(obj,cls+" "+_3e8);
return true;
},removeElementClass:function(_3ee,_3ef){
var self=MochiKit.DOM;
var obj=self.getElement(_3ee);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_3ef){
self.setElementClass(obj,"");
return true;
}
var _3f3=cls.split(" ");
for(var i=0;i<_3f3.length;i++){
if(_3f3[i]==_3ef){
_3f3.splice(i,1);
self.setElementClass(obj,_3f3.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_3f5,_3f6,_3f7){
var obj=MochiKit.DOM.getElement(_3f5);
var res=MochiKit.DOM.removeElementClass(obj,_3f6);
if(res){
MochiKit.DOM.addElementClass(obj,_3f7);
}
return res;
},hasElementClass:function(_3fa,_3fb){
var obj=MochiKit.DOM.getElement(_3fa);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"&&typeof (obj.getAttribute)=="function"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _3fe=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_3fe.length;j++){
if(_3fe[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _406=[dom];
var self=MochiKit.DOM;
var _408=self.escapeHTML;
var _409=self.attributeArray;
while(_406.length){
dom=_406.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _40a=[];
var _40b=_409(dom);
for(var i=0;i<_40b.length;i++){
var a=_40b[i];
_40a.push([" ",a.name,"=\"",_408(a.value),"\""]);
}
_40a.sort();
for(i=0;i<_40a.length;i++){
var _40e=_40a[i];
for(var j=0;j<_40e.length;j++){
lst.push(_40e[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_406.push("</"+dom.tagName.toLowerCase()+">");
var _410=dom.childNodes;
for(i=_410.length-1;i>=0;i--){
_406.push(_410[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_408(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_412){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _417=node.nodeValue;
if(typeof (_417)=="string"){
rval.push(_417);
}
})(MochiKit.DOM.getElement(node));
if(_412){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_418){
_418=MochiKit.DOM.getElement(_418);
for(var i=0;i<_418.childNodes.length;i++){
var node=_418.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},getFirstElementByTagAndClassName:function(_41b,_41c,_41d){
var self=MochiKit.DOM;
if(typeof (_41b)=="undefined"||_41b===null){
_41b="*";
}
if(typeof (_41d)=="undefined"||_41d===null){
_41d=self._document;
}
_41d=self.getElement(_41d);
if(_41d==null){
return null;
}
var _41f=(_41d.getElementsByTagName(_41b)||self._document.all);
if(_41f.length<=0){
return null;
}else{
if(typeof (_41c)=="undefined"||_41c===null){
return _41f[0];
}
}
for(var i=0;i<_41f.length;i++){
var _421=_41f[i];
var cls=_421.className;
if(typeof (cls)!="string"){
cls=_421.getAttribute("class");
}
if(typeof (cls)=="string"){
var _423=cls.split(" ");
for(var j=0;j<_423.length;j++){
if(_423[j]==_41c){
return _421;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_426,_427){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_426)=="undefined"||_426===null){
_426="*";
}else{
_426=_426.toUpperCase();
}
if(typeof (_427)=="undefined"||_427===null){
_427=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _429=elem.tagName.toUpperCase();
if((_426==="*"||_426==_429)&&(_427===null||self.hasElementClass(elem,_427))){
return elem;
}
elem=elem.parentNode;
}
return null;
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _42c="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_42c);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _42d=this._document.createElement("span");
var _42e;
if(_42d&&_42d.attributes&&_42d.attributes.length>0){
var _42f=m.filter;
_42e=function(node){
return _42f(_42e.ignoreAttrFilter,node.attributes);
};
_42e.ignoreAttr={};
var _431=_42d.attributes;
var _432=_42e.ignoreAttr;
for(var i=0;i<_431.length;i++){
var a=_431[i];
_432[a.name]=a.value;
}
_42e.ignoreAttrFilter=function(a){
return (_42e.ignoreAttr[a.name]!=a.value);
};
_42e.compliant=false;
_42e.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","rowspan":"rowSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_42e=function(node){
return node.attributes;
};
_42e.compliant=true;
_42e.ignoreAttr={};
_42e.renames={};
}
_42e.__export__=false;
this.attributeArray=_42e;
m._deprecated(this,"computedStyle","MochiKit.Style.getStyle","1.4",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.4");
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.4");
m._deprecated(this,"getViewportDimensions","MochiKit.Style.getViewportDimensions","1.4");
m._deprecated(this,"hideElement","MochiKit.Style.hideElement","1.4");
m._deprecated(this,"makeClipping","MochiKit.Style.makeClipping","1.4.1");
m._deprecated(this,"makePositioned","MochiKit.Style.makePositioned","1.4.1");
m._deprecated(this,"setElementDimensions","MochiKit.Style.setElementDimensions","1.4");
m._deprecated(this,"setElementPosition","MochiKit.Style.setElementPosition","1.4");
m._deprecated(this,"setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4");
m._deprecated(this,"setOpacity","MochiKit.Style.setOpacity","1.4");
m._deprecated(this,"showElement","MochiKit.Style.showElement","1.4");
m._deprecated(this,"undoClipping","MochiKit.Style.undoClipping","1.4.1");
m._deprecated(this,"undoPositioned","MochiKit.Style.undoPositioned","1.4.1");
m._deprecated(this,"Coordinates","MochiKit.Style.Coordinates","1.4");
m._deprecated(this,"Dimensions","MochiKit.Style.Dimensions","1.4");
var _437=this.createDOMFunc;
this.UL=_437("ul");
this.OL=_437("ol");
this.LI=_437("li");
this.DL=_437("dl");
this.DT=_437("dt");
this.DD=_437("dd");
this.TD=_437("td");
this.TR=_437("tr");
this.TBODY=_437("tbody");
this.THEAD=_437("thead");
this.TFOOT=_437("tfoot");
this.TABLE=_437("table");
this.TH=_437("th");
this.INPUT=_437("input");
this.SPAN=_437("span");
this.A=_437("a");
this.DIV=_437("div");
this.IMG=_437("img");
this.BUTTON=_437("button");
this.TT=_437("tt");
this.PRE=_437("pre");
this.H1=_437("h1");
this.H2=_437("h2");
this.H3=_437("h3");
this.H4=_437("h4");
this.H5=_437("h5");
this.H6=_437("h6");
this.BR=_437("br");
this.HR=_437("hr");
this.LABEL=_437("label");
this.TEXTAREA=_437("textarea");
this.FORM=_437("form");
this.P=_437("p");
this.SELECT=_437("select");
this.OPTION=_437("option");
this.OPTGROUP=_437("optgroup");
this.LEGEND=_437("legend");
this.FIELDSET=_437("fieldset");
this.STRONG=_437("strong");
this.CANVAS=_437("canvas");
this.IFRAME=_437("iframe");
this.LINK=_437("link");
this.SCRIPT=_437("script");
this.$=this.getElement;
this.NBSP="\xa0";
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
MochiKit.Base.module(MochiKit,"Selector","1.5",["Base","DOM","Iter"]);
MochiKit.Selector.Selector=function(_438){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_438.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_439){
throw "Parse error in selector: "+_439;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _43b=this.params;
var expr=this.expression;
var _43d,_43e,_43f,rest;
while(_43d=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_43b.attributes=_43b.attributes||[];
_43b.attributes.push({name:_43d[2],operator:_43d[3],value:_43d[4]||_43d[5]||""});
expr=_43d[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_43d=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_43e=_43d[1];
_43f=_43d[2];
rest=_43d[3];
switch(_43e){
case "#":
_43b.id=_43f;
break;
case ".":
_43b.classNames.push(_43f);
break;
case ":":
_43b.pseudoClassNames.push(_43f);
break;
case "":
case undefined:
_43b.tagName=_43f.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _442=this.params;
var _443=[];
var _444,i;
function childElements(_446){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_446+".childNodes)";
}
if(_442.wildcard){
_443.push("true");
}
if(_444=_442.id){
_443.push("element.id == "+repr(_444));
}
if(_444=_442.tagName){
_443.push("element.tagName.toUpperCase() == "+repr(_444));
}
if((_444=_442.classNames).length>0){
for(i=0;i<_444.length;i++){
_443.push("MochiKit.DOM.hasElementClass(element, "+repr(_444[i])+")");
}
}
if((_444=_442.pseudoClassNames).length>0){
for(i=0;i<_444.length;i++){
var _447=_444[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _448=_447[1];
var _449=_447[2];
switch(_448){
case "root":
_443.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_447=_449.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_447){
throw "Invalid argument to pseudo element nth-child: "+_449;
}
var a,b;
if(_447[0]=="odd"){
a=2;
b=1;
}else{
if(_447[0]=="even"){
a=2;
b=0;
}else{
a=_447[2]&&parseInt(_447,10)||null;
b=parseInt(_447[3],10);
}
}
_443.push("this.nthChild(element,"+a+","+b+","+!!_448.match("^nth-last")+","+!!_448.match("of-type$")+")");
break;
case "first-child":
_443.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_443.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_443.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_443.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_443.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_443.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_443.push("element.childNodes.length == 0");
break;
case "enabled":
_443.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_443.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_443.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _44c=new MochiKit.Selector.Selector(_449);
_443.push("!( "+_44c.buildMatchExpression()+")");
break;
}
}
}
if(_444=_442.attributes){
MochiKit.Base.map(function(_44d){
var _44e="MochiKit.DOM.getNodeAttribute(element, "+repr(_44d.name)+")";
var _44f=function(_450){
return _44e+".split("+repr(_450)+")";
};
_443.push(_44e+" != null");
switch(_44d.operator){
case "=":
_443.push(_44e+" == "+repr(_44d.value));
break;
case "~=":
_443.push("MochiKit.Base.findValue("+_44f(" ")+", "+repr(_44d.value)+") > -1");
break;
case "^=":
_443.push(_44e+".substring(0, "+_44d.value.length+") == "+repr(_44d.value));
break;
case "$=":
_443.push(_44e+".substring("+_44e+".length - "+_44d.value.length+") == "+repr(_44d.value));
break;
case "*=":
_443.push(_44e+".match("+repr(_44d.value)+")");
break;
case "|=":
_443.push(_44f("-")+"[0].toUpperCase() == "+repr(_44d.value.toUpperCase()));
break;
case "!=":
_443.push(_44e+" != "+repr(_44d.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_44d.operator+" in selector";
}
},_444);
}
return _443.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_452,a,b,_455,_456){
var _457=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_452.parentNode.childNodes);
if(_456){
_457=MochiKit.Base.filter(function(node){
return node.tagName==_452.tagName;
},_457);
}
if(_455){
_457=MochiKit.Iter.reversed(_457);
}
if(a){
var _45a=MochiKit.Base.findIdentical(_457,_452);
return ((_45a+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_457,_452)+1;
}
},isUIElement:function(_45b){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_45b.tagName.toLowerCase())>-1;
},findElements:function(_45c,axis){
var _45e;
if(axis==undefined){
axis="";
}
function inScope(_45f,_460){
if(axis==""){
return MochiKit.DOM.isChildNode(_45f,_460);
}else{
if(axis==">"){
return _45f.parentNode===_460;
}else{
if(axis=="+"){
return _45f===nextSiblingElement(_460);
}else{
if(axis=="~"){
var _461=_460;
while(_461=nextSiblingElement(_461)){
if(_45f===_461){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_45e=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_45e)){
if(!_45c||inScope(_45e,_45c)){
return [_45e];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_45c=(_45c||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_45c){
throw "> combinator not allowed without preceeding expression";
}
_45c=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_45c.childNodes);
}else{
if(axis=="+"){
if(!_45c){
throw "+ combinator not allowed without preceeding expression";
}
_45c=nextSiblingElement(_45c)&&[nextSiblingElement(_45c)];
}else{
if(axis=="~"){
if(!_45c){
throw "~ combinator not allowed without preceeding expression";
}
var _464=[];
while(nextSiblingElement(_45c)){
_45c=nextSiblingElement(_45c);
_464.push(_45c);
}
_45c=_464;
}
}
}
}
if(!_45c){
return [];
}
var _465=MochiKit.Base.filter(MochiKit.Base.bind(function(_466){
return this.match(_466);
},this),_45c);
return _465;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_467,_468){
_467=MochiKit.DOM.getElement(_467);
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_46d){
try{
var res=_467.querySelectorAll(_46d);
return Array.prototype.slice.call(res,0);
}
catch(ignore){
}
var _46f="";
var _470=function(_471,expr){
var _473=expr.match(/^[>+~]$/);
if(_473){
_46f=_473[0];
return _471;
}else{
var _474=new MochiKit.Selector.Selector(expr);
var _475=MochiKit.Iter.reduce(function(_476,_477){
return MochiKit.Base.extend(_476,_474.findElements(_477||_467,_46f));
},_471,[]);
_46f="";
return _475;
}
};
var _478=_46d.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_470,_478,[null]));
},_468));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
this.$$=this.findDocElements;
MochiKit.Base.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
MochiKit.Base.module(MochiKit,"Style","1.5",["Base","DOM"]);
MochiKit.Style.Dimensions=function(w,h){
if(!(this instanceof MochiKit.Style.Dimensions)){
return new MochiKit.Style.Dimensions(w,h);
}
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
if(!(this instanceof MochiKit.Style.Coordinates)){
return new MochiKit.Style.Coordinates(x,y);
}
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_480){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_480=MochiKit.Base.camelize(_480);
if(!elem||elem==d){
return undefined;
}
if(_480=="opacity"&&typeof (elem.filters)!="undefined"){
var _483=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_483&&_483[1]){
return parseFloat(_483[1])/100;
}
return 1;
}
if(_480=="float"||_480=="cssFloat"||_480=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _484=elem.style?elem.style[_480]:null;
if(!_484){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_480=_480.replace(/([A-Z])/g,"-$1").toLowerCase();
_484=css?css.getPropertyValue(_480):null;
}else{
if(elem.currentStyle){
_484=elem.currentStyle[_480];
if(/^\d/.test(_484)&&!/px$/.test(_484)&&_480!="fontWeight"){
var left=elem.style.left;
var _487=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_484||0;
_484=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_487;
}
}
}
}
if(_480=="opacity"){
_484=parseFloat(_484);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_480)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_484="auto";
}
}
return _484=="auto"?null:_484;
},setStyle:function(elem,_489){
elem=MochiKit.DOM.getElement(elem);
for(var name in _489){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_489[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_489[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_489[name];
}else{
elem.style.styleFloat=_489[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_489[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _48e=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_48e?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_490){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
var _493=function(o){
return o!=null&&o.nodeType==null&&typeof (o.x)=="number"&&typeof (o.y)=="number";
};
if(typeof (elem)=="string"){
elem=dom.getElement(elem);
}
if(elem==null||(!_493(elem)&&self.getStyle(elem,"display")=="none")){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _497=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_497=elem.offsetParent;
if(_497!=elem){
while(_497){
c.x+=parseInt(_497.style.borderLeftWidth,10)||0;
c.y+=parseInt(_497.style.borderTopWidth,10)||0;
c.x+=_497.offsetLeft;
c.y+=_497.offsetTop;
_497=_497.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_497=elem.parentNode;
}else{
_497=null;
}
while(_497){
var _49c=_497.tagName.toUpperCase();
if(_49c==="BODY"||_49c==="HTML"){
break;
}
var disp=self.getStyle(_497,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_497.scrollLeft;
c.y-=_497.scrollTop;
}
if(_497.parentNode){
_497=_497.parentNode;
}else{
_497=null;
}
}
}
}
}
if(_490){
_490=arguments.callee(_490);
if(_490){
c.x-=(_490.x||0);
c.y-=(_490.y||0);
}
}
return c;
},setElementPosition:function(elem,_49f,_4a0){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_4a0)=="undefined"){
_4a0="px";
}
var _4a1={};
var _4a2=MochiKit.Base.isUndefinedOrNull;
if(!_4a2(_49f.x)){
_4a1["left"]=_49f.x+_4a0;
}
if(!_4a2(_49f.y)){
_4a1["top"]=_49f.y+_4a0;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_4a1});
},makePositioned:function(_4a3){
_4a3=MochiKit.DOM.getElement(_4a3);
var pos=MochiKit.Style.getStyle(_4a3,"position");
if(pos=="static"||!pos){
_4a3.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_4a3.style.top=0;
_4a3.style.left=0;
}
}
},undoPositioned:function(_4a5){
_4a5=MochiKit.DOM.getElement(_4a5);
if(_4a5.style.position=="relative"){
_4a5.style.position=_4a5.style.top=_4a5.style.left=_4a5.style.bottom=_4a5.style.right="";
}
},makeClipping:function(_4a6){
_4a6=MochiKit.DOM.getElement(_4a6);
var s=_4a6.style;
var _4a8={"overflow":s.overflow,"overflow-x":s.overflowX,"overflow-y":s.overflowY};
if((MochiKit.Style.getStyle(_4a6,"overflow")||"visible")!="hidden"){
_4a6.style.overflow="hidden";
_4a6.style.overflowX="hidden";
_4a6.style.overflowY="hidden";
}
return _4a8;
},undoClipping:function(_4a9,_4aa){
_4a9=MochiKit.DOM.getElement(_4a9);
if(typeof (_4aa)=="string"){
_4a9.style.overflow=_4aa;
}else{
if(_4aa!=null){
_4a9.style.overflow=_4aa["overflow"];
_4a9.style.overflowX=_4aa["overflow-x"];
_4a9.style.overflowY=_4aa["overflow-y"];
}
}
},getElementDimensions:function(elem,_4ac){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _4b1=s.visibility;
var _4b2=s.position;
var _4b3=s.display;
s.visibility="hidden";
s.position="absolute";
s.display=self._getDefaultDisplay(elem);
var _4b4=elem.offsetWidth;
var _4b5=elem.offsetHeight;
s.display=_4b3;
s.position=_4b2;
s.visibility=_4b1;
}else{
_4b4=elem.offsetWidth||0;
_4b5=elem.offsetHeight||0;
}
if(_4ac){
var _4b6="colSpan" in elem&&"rowSpan" in elem;
var _4b7=(_4b6&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_4b7){
if(/MSIE/.test(navigator.userAgent)){
var _4b8=elem.previousSibling?0.5:1;
var _4b9=elem.nextSibling?0.5:1;
}else{
var _4b8=0.5;
var _4b9=0.5;
}
}else{
var _4b8=1;
var _4b9=1;
}
_4b4-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_4b8*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_4b9*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_4b6){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _4ba=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _4ba=1;
}else{
var _4ba=_4b7?0.5:1;
}
}
}else{
var _4ba=1;
}
_4b5-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_4ba*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_4b4,_4b5);
},setElementDimensions:function(elem,_4bc,_4bd){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_4bd)=="undefined"){
_4bd="px";
}
var _4be={};
var _4bf=MochiKit.Base.isUndefinedOrNull;
if(!_4bf(_4bc.w)){
_4be["width"]=_4bc.w+_4bd;
}
if(!_4bf(_4bc.h)){
_4be["height"]=_4bc.h+_4bd;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_4be});
},_getDefaultDisplay:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var _4c3=elem.tagName.toUpperCase();
return self._defaultDisplay[_4c3]||"block";
},setDisplayForElement:function(_4c4,_4c5){
var _4c6=MochiKit.Base.extend(null,arguments,1);
var _4c7=MochiKit.DOM.getElement;
for(var i=0;i<_4c6.length;i++){
_4c5=_4c7(_4c6[i]);
if(_4c5){
_4c5.style.display=_4c4;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b&&b.parentElement&&b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
var _4d1=["A","ABBR","ACRONYM","B","BASEFONT","BDO","BIG","BR","CITE","CODE","DFN","EM","FONT","I","IMG","KBD","LABEL","Q","S","SAMP","SMALL","SPAN","STRIKE","STRONG","SUB","SUP","TEXTAREA","TT","U","VAR"];
this._defaultDisplay={"TABLE":"table","THEAD":"table-header-group","TBODY":"table-row-group","TFOOT":"table-footer-group","COLGROUP":"table-column-group","COL":"table-column","TR":"table-row","TD":"table-cell","TH":"table-cell","CAPTION":"table-caption","LI":"list-item","INPUT":"inline-block","SELECT":"inline-block"};
if(/MSIE/.test(navigator.userAgent)){
for(var k in this._defaultDisplay){
var v=this._defaultDisplay[k];
if(v.indexOf("table")==0){
this._defaultDisplay[k]="block";
}
}
}
for(var i=0;i<_4d1.length;i++){
this._defaultDisplay[_4d1[i]]="inline";
}
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.3",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.3",true);
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
MochiKit.Base.module(MochiKit,"LoggingPane","1.5",["Base","Logging"]);
MochiKit.LoggingPane.createLoggingPane=function(_4d5){
var m=MochiKit.LoggingPane;
_4d5=!(!_4d5);
if(m._loggingPane&&m._loggingPane.inline!=_4d5){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_4d5,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_4d7,_4d8){
if(typeof (_4d8)=="undefined"||_4d8===null){
_4d8=MochiKit.Logging.logger;
}
this.logger=_4d8;
var _4d9=MochiKit.Base.update;
var _4da=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _4dc=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_4d7){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _4e3=doc.getElementById(uid);
var _4e4=!!_4e3;
if(_4e3&&typeof (_4e3.loggingPane)!="undefined"){
_4e3.loggingPane.logger=this.logger;
_4e3.loggingPane.buildAndApplyFilter();
return _4e3.loggingPane;
}
if(_4e4){
var _4e5;
while((_4e5=_4e3.firstChild)){
_4e3.removeChild(_4e5);
}
}else{
_4e3=doc.createElement("div");
_4e3.id=uid;
}
_4e3.loggingPane=this;
var _4e6=doc.createElement("input");
var _4e7=doc.createElement("input");
var _4e8=doc.createElement("button");
var _4e9=doc.createElement("button");
var _4ea=doc.createElement("button");
var _4eb=doc.createElement("button");
var _4ec=doc.createElement("div");
var _4ed=doc.createElement("div");
var _4ee=uid+"_Listener";
this.colorTable=_4dc(this.colorTable);
var _4ef=[];
var _4f0=null;
var _4f1=function(msg){
var _4f3=msg.level;
if(typeof (_4f3)=="number"){
_4f3=MochiKit.Logging.LogLevel[_4f3];
}
return _4f3;
};
var _4f4=function(msg){
return msg.info.join(" ");
};
var _4f6=bind(function(msg){
var _4f8=_4f1(msg);
var text=_4f4(msg);
var c=this.colorTable[_4f8];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_4f8;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_4f8+": "+text));
_4ed.appendChild(p);
_4ed.appendChild(doc.createElement("br"));
if(_4ec.offsetHeight>_4ec.scrollHeight){
_4ec.scrollTop=0;
}else{
_4ec.scrollTop=_4ec.scrollHeight;
}
},this);
var _4fc=function(msg){
_4ef[_4ef.length]=msg;
_4f6(msg);
};
var _4fe=function(){
var _4ff,_500;
try{
_4ff=new RegExp(_4e6.value);
_500=new RegExp(_4e7.value);
}
catch(e){
MochiKit.Logging.logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_4ff.test(_4f1(msg))&&_500.test(_4f4(msg)));
};
};
var _502=function(){
while(_4ed.firstChild){
_4ed.removeChild(_4ed.firstChild);
}
};
var _503=function(){
_4ef=[];
_502();
};
var _504=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_4ee);
try{
try{
_4e3.loggingPane=null;
}
catch(e){
MochiKit.Logging.logFatal("Bookmarklet was closed incorrectly.");
}
if(_4d7){
_4e3.parentNode.removeChild(_4e3);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _505=function(){
_502();
for(var i=0;i<_4ef.length;i++){
var msg=_4ef[i];
if(_4f0===null||_4f0(msg)){
_4f6(msg);
}
}
};
this.buildAndApplyFilter=function(){
_4f0=_4fe();
_505();
this.logger.removeListener(_4ee);
this.logger.addListener(_4ee,_4f0,_4fc);
};
var _508=bind(function(){
_4ef=this.logger.getMessages();
_505();
},this);
var _509=bind(function(_50a){
_50a=_50a||window.event;
var key=_50a.which||_50a.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _50c="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_4d7){
_50c+="; height: 10em; border-top: 2px solid black";
}else{
_50c+="; height: 100%;";
}
_4e3.style.cssText=_50c;
if(!_4e4){
doc.body.appendChild(_4e3);
}
_50c={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_4da(_4e6,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_509,"style":_50c});
_4e3.appendChild(_4e6);
_4da(_4e7,{"value":".*","onkeypress":_509,"style":_50c});
_4e3.appendChild(_4e7);
_50c="width: 8%; display:inline; font: "+this.logFont;
_4e8.appendChild(doc.createTextNode("Filter"));
_4e8.onclick=bind("buildAndApplyFilter",this);
_4e8.style.cssText=_50c;
_4e3.appendChild(_4e8);
_4e9.appendChild(doc.createTextNode("Load"));
_4e9.onclick=_508;
_4e9.style.cssText=_50c;
_4e3.appendChild(_4e9);
_4ea.appendChild(doc.createTextNode("Clear"));
_4ea.onclick=_503;
_4ea.style.cssText=_50c;
_4e3.appendChild(_4ea);
_4eb.appendChild(doc.createTextNode("Close"));
_4eb.onclick=_504;
_4eb.style.cssText=_50c;
_4e3.appendChild(_4eb);
_4ec.style.cssText="overflow: auto; width: 100%";
_4ed.style.cssText="width: 100%; height: "+(_4d7?"8em":"100%");
_4ec.appendChild(_4ed);
_4e3.appendChild(_4ec);
this.buildAndApplyFilter();
_508();
if(_4d7){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_4d7;
this.closePane=_504;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.__new__=function(){
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
MochiKit.Base.module(MochiKit,"Color","1.5",["Base","DOM","Style"]);
MochiKit.Color.Color=function(red,_50e,blue,_510){
if(typeof (_510)=="undefined"||_510===null){
_510=1;
}
this.rgb={r:red,g:_50e,b:blue,a:_510};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_511){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_511);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_517){
var hsl=this.asHSL();
hsl.s=_517;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_51a){
var hsl=this.asHSL();
hsl.l=_51a;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_51d){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_51d,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_520){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_520,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_523,_524){
if(typeof (_524)=="undefined"||_524===null){
_524=0.5;
}
var sf=1-_524;
var s=this.rgb;
var d=_523.rgb;
var df=_524;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_529){
var a=this.asRGB();
var b=_529.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().l>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_540,blue,_542){
var _543=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_540=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_542=undefined;
}else{
_542=rgb.a;
}
}
return new _543(red,_540,blue,_542);
},fromHSL:function(hue,_546,_547,_548){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_54b,_54c,_54d){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _550=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _551=_550._namedColors[name.toLowerCase()];
if(typeof (_551)=="string"){
return _550.fromHexString(_551);
}else{
if(name=="transparent"){
return _550.transparentColor();
}
}
return null;
},fromString:function(_552){
var self=MochiKit.Color.Color;
var _554=_552.substr(0,3);
if(_554=="rgb"){
return self.fromRGBString(_552);
}else{
if(_554=="hsl"){
return self.fromHSLString(_552);
}else{
if(_552.charAt(0)=="#"){
return self.fromHexString(_552);
}
}
}
return self.fromName(_552);
},fromHexString:function(_555){
if(_555.charAt(0)=="#"){
_555=_555.substring(1);
}
var _556=[];
var i,hex;
if(_555.length==3){
for(i=0;i<3;i++){
hex=_555.substr(i,1);
_556.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_555.substr(i,2);
_556.push(parseInt(hex,16)/255);
}
}
var _559=MochiKit.Color.Color;
return _559.fromRGB.apply(_559,_556);
},_fromColorString:function(pre,_55b,_55c,_55d){
if(_55d.indexOf(pre)===0){
_55d=_55d.substring(_55d.indexOf("(",3)+1,_55d.length-1);
}
var _55e=_55d.split(/\s*,\s*/);
var _55f=[];
for(var i=0;i<_55e.length;i++){
var c=_55e[i];
var val;
var _563=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_563=="deg"){
val=parseFloat(c)/360;
}else{
if(_563=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_55c[i]*parseFloat(c);
}
}
}
_55f.push(val);
}
return this[_55b].apply(this,_55f);
},fromComputedStyle:function(elem,_565){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _568=MochiKit.Style.getStyle.apply(d,arguments);
if(!_568){
continue;
}
var _569=cls.fromString(_568);
if(!_569){
break;
}
if(_569.asRGB().a>0){
return _569;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_56f){
v*=_56f;
if(v<0){
return 0;
}else{
if(v>_56f){
return _56f;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_575,_576,_577){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_575=hsv.s;
_576=hsv.v;
_577=hsv.a;
}
var red;
var _57a;
var blue;
if(_575===0){
red=_576;
_57a=_576;
blue=_576;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_576*(1-_575);
var q=_576*(1-(_575*f));
var t=_576*(1-(_575*(1-f)));
switch(i){
case 1:
red=q;
_57a=_576;
blue=p;
break;
case 2:
red=p;
_57a=_576;
blue=t;
break;
case 3:
red=p;
_57a=q;
blue=_576;
break;
case 4:
red=t;
_57a=p;
blue=_576;
break;
case 5:
red=_576;
_57a=p;
blue=q;
break;
case 6:
case 0:
red=_576;
_57a=t;
blue=p;
break;
}
}
return {r:red,g:_57a,b:blue,a:_577};
},hslToRGB:function(hue,_582,_583,_584){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_582=hsl.s;
_583=hsl.l;
_584=hsl.a;
}
var red;
var _587;
var blue;
if(_582===0){
red=_583;
_587=_583;
blue=_583;
}else{
var m2;
if(_583<=0.5){
m2=_583*(1+_582);
}else{
m2=_583+_582-(_583*_582);
}
var m1=(2*_583)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_587=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_587,b:blue,a:_584};
},rgbToHSV:function(red,_58e,blue,_590){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_58e=rgb.g;
blue=rgb.b;
_590=rgb.a;
}
var max=Math.max(Math.max(red,_58e),blue);
var min=Math.min(Math.min(red,_58e),blue);
var hue;
var _595;
var _596=max;
if(min==max){
hue=0;
_595=0;
}else{
var _597=(max-min);
_595=_597/max;
if(red==max){
hue=(_58e-blue)/_597;
}else{
if(_58e==max){
hue=2+((blue-red)/_597);
}else{
hue=4+((red-_58e)/_597);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_595,v:_596,a:_590};
},rgbToHSL:function(red,_599,blue,_59b){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_599=rgb.g;
blue=rgb.b;
_59b=rgb.a;
}
var max=Math.max(red,Math.max(_599,blue));
var min=Math.min(red,Math.min(_599,blue));
var hue;
var _5a0;
var _5a1=(max+min)/2;
var _5a2=max-min;
if(_5a2===0){
hue=0;
_5a0=0;
}else{
if(_5a1<=0.5){
_5a0=_5a2/(max+min);
}else{
_5a0=_5a2/(2-max-min);
}
if(red==max){
hue=(_599-blue)/_5a2;
}else{
if(_599==max){
hue=2+((blue-red)/_5a2);
}else{
hue=4+((red-_599)/_5a2);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_5a0,l:_5a1,a:_59b};
},toColorPart:function(num){
num=Math.round(num);
var _5a4=num.toString(16);
if(num<16){
return "0"+_5a4;
}
return _5a4;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _5a6=1/3;
var _5a7={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_5a6,_5a6,_5a6],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_5a6,2*_5a6,2*_5a6],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
for(var k in _5a7){
var name=k+"Color";
var _5aa=this.Color.fromRGB.apply(this.Color,_5a7[k]);
this.Color[name]=m.partial(m.operator.identity,_5aa);
}
var _5ab=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _5ad=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_5ab,_5ad);
}});
MochiKit.Color.__new__();
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Base.module(MochiKit,"Signal","1.5",["Base","DOM"]);
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Signal.Event.__export__=false;
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
try{
if(elem!==null&&elem.nodeType!==null){
this._relatedTarget=elem;
return elem;
}
}
catch(ignore){
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("drag")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client={x:0,y:0};
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page={x:0,y:0};
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel={x:0,y:0};
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _5bc=MochiKit.Signal._specialMacKeys;
for(var i=63236;i<=63242;i++){
_5bc[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _5be=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_5be[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_5be[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_5be[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_5be[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_5c0){
this.source=_5c0.source;
this.signal=_5c0.signal;
this.listener=_5c0.listener;
this.isDOM=_5c0.isDOM;
this.objOrFunc=_5c0.objOrFunc;
this.funcOrStr=_5c0.funcOrStr;
this.connected=_5c0.connected;
};
MochiKit.Signal.Ident.__export__=false;
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{_unloadCache:function(){
var self=MochiKit.Signal;
var _5c2=self._observers;
for(var i=0;i<_5c2.length;i++){
if(_5c2[i].signal!=="onload"&&_5c2[i].signal!=="onunload"){
self._disconnect(_5c2[i]);
}
}
},_listener:function(src,sig,func,obj,_5c8){
var self=MochiKit.Signal;
var E=self.Event;
if(!_5c8){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_5cb){
obj[func].apply(obj,[new E(src,_5cb)]);
var _5cc=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_5cc);
};
}else{
return function(_5cd){
obj[func].apply(obj,[new E(src,_5cd)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_5ce){
func.apply(obj,[new E(src,_5ce)]);
var _5cf=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_5cf);
};
}else{
return function(_5d0){
func.apply(obj,[new E(src,_5d0)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_5d6){
var e=new E(src,_5d6);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_5d8,_5d9){
var obj=null;
var func=null;
if(typeof (_5d9)!="undefined"){
obj=_5d8;
func=_5d9;
if(typeof (_5d9)=="string"){
if(typeof (_5d8[_5d9])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_5d9)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_5d8)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_5d8;
}
}
return [obj,func];
},connect:function(src,sig,_5de,_5df){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _5e1=self._getDestPair(_5de,_5df);
var obj=_5e1[0];
var func=_5e1[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _5e4=!!(src.addEventListener||src.attachEvent);
if(_5e4&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _5e5=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_5e4&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _5e5=self._listener(src,sig,func,obj,_5e4);
sig="onDOMMouseScroll";
}else{
var _5e5=self._listener(src,sig,func,obj,_5e4);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_5e5,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_5e5);
}
}
var _5e6=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_5e5,isDOM:_5e4,objOrFunc:_5de,funcOrStr:_5df,connected:true});
self._observers.push(_5e6);
if(!_5e4&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_5e6],arguments,1);
src.__connect__.apply(src,args);
}
return _5e6;
},connectOnce:function(src,sig,_5ea,_5eb){
var self=MochiKit.Signal;
var _5ed=self.connect(src,sig,_5ea,_5eb);
var _5ee;
_5ee=self.connect(src,sig,function(){
self.disconnect(_5ed);
self.disconnect(_5ee);
});
return _5ed;
},_disconnect:function(_5ef){
if(!_5ef.connected){
return;
}
_5ef.connected=false;
var src=_5ef.source;
var sig=_5ef.signal;
var _5f2=_5ef.listener;
if(!_5ef.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_5ef,sig,_5ef.objOrFunc,_5ef.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_5f2,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_5f2);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_5f3){
var self=MochiKit.Signal;
var _5f5=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=arguments[0];
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_5f5.length-1;i>=0;i--){
var o=_5f5[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(self._lock===0){
_5f5.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_5f5,_5f3);
if(idx>=0){
self._disconnect(_5f3);
if(self._lock===0){
_5f5.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_5fe,_5ff){
var self=MochiKit.Signal;
var _601=self._observers;
var _602=self._disconnect;
var lock=self._lock;
var _604=self._dirty;
if(typeof (_5ff)==="undefined"){
_5ff=null;
}
for(var i=_601.length-1;i>=0;i--){
var _606=_601[i];
if(_606.objOrFunc===_5fe&&(_5ff===null||_606.funcOrStr===_5ff)){
_602(_606);
if(lock===0){
_601.splice(i,1);
}else{
_604=true;
}
}
}
self._dirty=_604;
},disconnectAll:function(src,sig){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var m=MochiKit.Base;
var _60a=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _60c=self._disconnect;
var _60d=self._observers;
var i,_60f;
var lock=self._lock;
var _611=self._dirty;
if(_60a.length===0){
for(i=_60d.length-1;i>=0;i--){
_60f=_60d[i];
if(_60f.source===src){
_60c(_60f);
if(lock===0){
_60d.splice(i,1);
}else{
_611=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_60a.length;i++){
sigs[_60a[i]]=true;
}
for(i=_60d.length-1;i>=0;i--){
_60f=_60d[i];
if(_60f.source===src&&_60f.signal in sigs){
_60c(_60f);
if(lock===0){
_60d.splice(i,1);
}else{
_611=true;
}
}
}
}
self._dirty=_611;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _616=self._observers;
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var args=MochiKit.Base.extend(null,arguments,2);
var _618=[];
self._lock++;
for(var i=0;i<_616.length;i++){
var _61a=_616[i];
if(_61a.source===src&&_61a.signal===sig&&_61a.connected){
try{
if(_61a.isDOM&&_61a.funcOrStr!=null){
var obj=_61a.objOrFunc;
obj[_61a.funcOrStr].apply(obj,args);
}else{
if(_61a.isDOM){
_61a.objOrFunc.apply(src,args);
}else{
_61a.listener.apply(src,args);
}
}
}
catch(e){
_618.push(e);
}
}
}
self._lock--;
if(self._lock===0&&self._dirty){
self._dirty=false;
for(var i=_616.length-1;i>=0;i--){
if(!_616[i].connected){
_616.splice(i,1);
}
}
}
if(_618.length==1){
throw _618[0];
}else{
if(_618.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_618;
throw e;
}
}
}});
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=0;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
MochiKit.Base.module(MochiKit,"Position","1.5",["Base","DOM","Style"]);
MochiKit.Base.update(MochiKit.Position,{__export__:false,includeScrollOffsets:false,prepare:function(){
var _61f=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _620=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_61f,_620);
},cumulativeOffset:function(_621){
var _622=0;
var _623=0;
do{
_622+=_621.offsetTop||0;
_623+=_621.offsetLeft||0;
_621=_621.offsetParent;
}while(_621);
return new MochiKit.Style.Coordinates(_623,_622);
},realOffset:function(_624){
var _625=0;
var _626=0;
do{
_625+=_624.scrollTop||0;
_626+=_624.scrollLeft||0;
_624=_624.parentNode;
}while(_624);
return new MochiKit.Style.Coordinates(_626,_625);
},within:function(_627,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_627,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_627);
if(_627.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_627.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_627.offsetWidth);
},withinIncludingScrolloffsets:function(_62a,x,y){
var _62d=this.realOffset(_62a);
this.xcomp=x+_62d.x-this.windowOffset.x;
this.ycomp=y+_62d.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_62a);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_62a.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_62a.offsetWidth);
},overlap:function(mode,_62f){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_62f.offsetHeight)-this.ycomp)/_62f.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_62f.offsetWidth)-this.xcomp)/_62f.offsetWidth;
}
},absolutize:function(_630){
_630=MochiKit.DOM.getElement(_630);
if(_630.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _631=MochiKit.Position.positionedOffset(_630);
var _632=_630.clientWidth;
var _633=_630.clientHeight;
var _634={"position":_630.style.position,"left":_631.x-parseFloat(_630.style.left||0),"top":_631.y-parseFloat(_630.style.top||0),"width":_630.style.width,"height":_630.style.height};
_630.style.position="absolute";
_630.style.top=_631.y+"px";
_630.style.left=_631.x+"px";
_630.style.width=_632+"px";
_630.style.height=_633+"px";
return _634;
},positionedOffset:function(_635){
var _636=0,_637=0;
do{
_636+=_635.offsetTop||0;
_637+=_635.offsetLeft||0;
_635=_635.offsetParent;
if(_635){
var p=MochiKit.Style.getStyle(_635,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_635);
return new MochiKit.Style.Coordinates(_637,_636);
},relativize:function(_639,_63a){
_639=MochiKit.DOM.getElement(_639);
if(_639.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_639.style.top||0)-(_63a["top"]||0);
var left=parseFloat(_639.style.left||0)-(_63a["left"]||0);
_639.style.position=_63a["position"];
_639.style.top=top+"px";
_639.style.left=left+"px";
_639.style.width=_63a["width"];
_639.style.height=_63a["height"];
},clone:function(_63d,_63e){
_63d=MochiKit.DOM.getElement(_63d);
_63e=MochiKit.DOM.getElement(_63e);
_63e.style.position="absolute";
var _63f=this.cumulativeOffset(_63d);
_63e.style.top=_63f.y+"px";
_63e.style.left=_63f.x+"px";
_63e.style.width=_63d.offsetWidth+"px";
_63e.style.height=_63d.offsetHeight+"px";
},page:function(_640){
var _641=0;
var _642=0;
var _643=_640;
do{
_641+=_643.offsetTop||0;
_642+=_643.offsetLeft||0;
if(_643.offsetParent==document.body&&MochiKit.Style.getStyle(_643,"position")=="absolute"){
break;
}
}while(_643=_643.offsetParent);
_643=_640;
do{
_641-=_643.scrollTop||0;
_642-=_643.scrollLeft||0;
}while(_643=_643.parentNode);
return new MochiKit.Style.Coordinates(_642,_641);
}});
MochiKit.Position.__new__=function(win){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Position);
MochiKit.Base.module(MochiKit,"Visual","1.5",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual._RoundCorners=function(e,_646){
e=MochiKit.DOM.getElement(e);
this._setOptions(_646);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _647=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_647=C.fromBackground(e);
}else{
if(!(_647 instanceof C)){
_647=C.fromString(_647);
}
}
this.isTransparent=(_647.asRGB().a<=0);
var _649=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_649=C.fromBackground(e.offsetParent);
}else{
if(!(_649 instanceof C)){
_649=C.fromString(_649);
}
}
this._roundCornersImpl(e,_647,_649);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _64b=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _64d=doc.defaultView.getComputedStyle(e,null);
if(typeof (_64d)==="undefined"||_64d===null){
return e;
}
var _64e=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_64d.getPropertyValue("padding-top"),marginRight:_64d.getPropertyValue("padding-right"),marginBottom:_64d.getPropertyValue("padding-bottom"),marginLeft:_64d.getPropertyValue("padding-left"),padding:"0px"}});
_64e.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_64e);
return e;
},_roundCornersImpl:function(e,_650,_651){
if(this.options.border){
this._renderBorder(e,_651);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_650,_651);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_650,_651);
}
},_renderBorder:function(el,_653){
var _654="1px solid "+this._borderColor(_653);
var _655="border-left: "+_654;
var _656="border-right: "+_654;
var _657="style='"+_655+";"+_656+"'";
el.innerHTML="<div "+_657+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_659,_65a){
var _65b=this._createCorner(_65a);
for(var i=0;i<this.options.numSlices;i++){
_65b.appendChild(this._createCornerSlice(_659,_65a,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_65b,el.firstChild);
},_roundBottomCorners:function(el,_65e,_65f){
var _660=this._createCorner(_65f);
for(var i=(this.options.numSlices-1);i>=0;i--){
_660.appendChild(this._createCornerSlice(_65e,_65f,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_660);
},_createCorner:function(_662){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_662.toString()}});
},_createCornerSlice:function(_664,_665,n,_667){
var _668=MochiKit.DOM.SPAN();
var _669=_668.style;
_669.backgroundColor=_664.toString();
_669.display="block";
_669.height="1px";
_669.overflow="hidden";
_669.fontSize="1px";
var _66a=this._borderColor(_664,_665);
if(this.options.border&&n===0){
_669.borderTopStyle="solid";
_669.borderTopWidth="1px";
_669.borderLeftWidth="0px";
_669.borderRightWidth="0px";
_669.borderBottomWidth="0px";
_669.height="0px";
_669.borderColor=_66a.toString();
}else{
if(_66a){
_669.borderColor=_66a.toString();
_669.borderStyle="solid";
_669.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_669.height="2px";
}
this._setMargin(_668,n,_667);
this._setBorder(_668,n,_667);
return _668;
},_setOptions:function(_66b){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_66b);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _66c=this.options.corners;
if(this._hasString(_66c,"all","top")){
return "";
}
var _66d=(_66c.indexOf("tl")!=-1);
var _66e=(_66c.indexOf("tr")!=-1);
if(_66d&&_66e){
return "";
}
if(_66d){
return "left";
}
if(_66e){
return "right";
}
return "";
},_whichSideBottom:function(){
var _66f=this.options.corners;
if(this._hasString(_66f,"all","bottom")){
return "";
}
var _670=(_66f.indexOf("bl")!=-1);
var _671=(_66f.indexOf("br")!=-1);
if(_670&&_671){
return "";
}
if(_670){
return "left";
}
if(_671){
return "right";
}
return "";
},_borderColor:function(_672,_673){
if(_672=="transparent"){
return _673;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _673.blendedColor(_672);
}
}
}
return "";
},_setMargin:function(el,n,_676){
var _677=this._marginSize(n)+"px";
var _678=(_676=="top"?this._whichSideTop():this._whichSideBottom());
var _679=el.style;
if(_678=="left"){
_679.marginLeft=_677;
_679.marginRight="0px";
}else{
if(_678=="right"){
_679.marginRight=_677;
_679.marginLeft="0px";
}else{
_679.marginLeft=_677;
_679.marginRight=_677;
}
}
},_setBorder:function(el,n,_67c){
var _67d=this._borderSize(n)+"px";
var _67e=(_67c=="top"?this._whichSideTop():this._whichSideBottom());
var _67f=el.style;
if(_67e=="left"){
_67f.borderLeftWidth=_67d;
_67f.borderRightWidth="0px";
}else{
if(_67e=="right"){
_67f.borderRightWidth=_67d;
_67f.borderLeftWidth="0px";
}else{
_67f.borderLeftWidth=_67d;
_67f.borderRightWidth=_67d;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _682=[1,0];
return _682[n];
}else{
if(o.compact){
var _683=[2,1];
return _683[n];
}else{
if(o.blend){
var _684=[3,2,1,0];
return _684[n];
}else{
var _685=[5,3,2,1];
return _685[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _688;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_688=[1,0];
}else{
if(o.blend){
_688=[2,1,1,1];
}else{
if(o.border){
_688=[0,2,0,0];
}else{
if(this.isTransparent){
_688=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _688[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_68d){
new MochiKit.Visual._RoundCorners(e,_68d);
};
MochiKit.Visual.roundClass=function(_68e,_68f,_690){
var _691=MochiKit.DOM.getElementsByTagAndClassName(_68e,_68f);
for(var i=0;i<_691.length;i++){
MochiKit.Visual.roundElement(_691[i],_690);
}
};
MochiKit.Visual.tagifyText=function(_693,_694){
_694=_694||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_694+=";zoom:1";
}
_693=MochiKit.DOM.getElement(_693);
var ma=MochiKit.Base.map;
ma(function(_696){
if(_696.nodeType==3){
ma(function(_697){
_693.insertBefore(MochiKit.DOM.SPAN({style:_694},_697==" "?String.fromCharCode(160):_697),_696);
},_696.nodeValue.split(""));
MochiKit.DOM.removeElement(_696);
}
},_693.childNodes);
};
MochiKit.Visual._forceRerendering=function(_698){
try{
_698=MochiKit.DOM.getElement(_698);
var n=document.createTextNode(" ");
_698.appendChild(n);
_698.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_69a,_69b,_69c){
_69c=MochiKit.Base.update({speed:0.1,delay:0},_69c);
var _69d=_69c.delay;
var _69e=0;
MochiKit.Base.map(function(_69f){
_69c.delay=_69e*_69c.speed+_69d;
new _69b(_69f,_69c);
_69e+=1;
},_69a);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_6a0,_6a1,_6a2){
_6a0=MochiKit.DOM.getElement(_6a0);
_6a1=(_6a1||"appear").toLowerCase();
_6a2=MochiKit.Base.update({queue:{position:"end",scope:(_6a0.id||"global"),limit:1}},_6a2);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_6a0,"display")!="none"?v.PAIRS[_6a1][1]:v.PAIRS[_6a1][0]](_6a0,_6a2);
};
MochiKit.Visual.Transitions={__export__:false};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_6aa){
if(_6aa){
pos*=2*_6aa;
}else{
pos*=10;
}
var _6ab=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_6ab:1-_6ab;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.spring=function(pos){
return 1-(Math.cos(pos*2.5*Math.PI)*Math.exp(-pos*6));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Visual.ScopedQueue.__export__=false;
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_6b1){
var _6b2=new Date().getTime();
var _6b3=(typeof (_6b1.options.queue)=="string")?_6b1.options.queue:_6b1.options.queue.position;
var ma=MochiKit.Base.map;
switch(_6b3){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_6b1.finishOn;
e.finishOn+=_6b1.finishOn;
}
},this.effects);
break;
case "end":
var _6b6;
ma(function(e){
var i=e.finishOn;
if(i>=(_6b6||i)){
_6b6=i;
}
},this.effects);
_6b2=_6b6||_6b2;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
case "replace":
ma(function(e){
e.cancel();
},this.effects);
break;
}
_6b1.startOn+=_6b2;
_6b1.finishOn+=_6b2;
if(!_6b1.options.queue.limit||this.effects.length<_6b1.options.queue.limit){
this.effects.push(_6b1);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_6bc){
return setInterval(func,_6bc);
},remove:function(_6bd){
this.effects=MochiKit.Base.filter(function(e){
return e!=_6bd;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_6bf){
clearInterval(_6bf);
},loop:function(){
var _6c0=new Date().getTime();
MochiKit.Base.map(function(_6c1){
_6c1.loop(_6c0);
},this.effects);
}});
MochiKit.Visual.Queues={__export__:false,instances:{},get:function(_6c2){
if(typeof (_6c2)!="string"){
return _6c2;
}
if(!this.instances[_6c2]){
this.instances[_6c2]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_6c2];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.Queue.__export__=false;
MochiKit.Visual.DefaultOptions={__export__:false,transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_6c3){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_6c3,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_6c5){
if(_6c5>=this.startOn){
if(_6c5>=this.finishOn){
return this.finalize();
}
var pos=(_6c5-this.startOn)/(this.finishOn-this.startOn);
var _6c7=Math.round(pos*this.options.fps*this.options.duration);
if(_6c7>this.currentFrame){
this.render(pos);
this.currentFrame=_6c7;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
var _6c9=this.options.transition;
if(typeof (_6c9)=="string"){
_6c9=MochiKit.Visual.Transitions[_6c9];
}
if(typeof (_6c9)=="function"){
pos=_6c9(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_6ca){
},event:function(_6cb){
if(this.options[_6cb+"Internal"]){
this.options[_6cb+"Internal"](this);
}
if(this.options[_6cb]){
this.options[_6cb](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_6cc,_6cd){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6cc,_6cd);
}
this.__init__(_6cc,_6cd);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_6cf,_6d0){
this.effects=_6cf||[];
this.start(_6d0);
},update:function(_6d1){
MochiKit.Base.map(function(_6d2){
_6d2.render(_6d1);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_6d3){
_6d3.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_6d4,_6d5){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6d4,_6d5);
}
this.__init__(_6d4,_6d5);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_6d7,_6d8){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_6d7||[];
MochiKit.Base.map(function(_6da){
defs.duration+=_6da.options.duration;
},this.effects);
MochiKit.Base.setdefault(_6d8,defs);
this.start(_6d8);
},update:function(_6db){
var time=_6db*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _6de=this.effects[i];
if(time<=_6de.options.duration){
_6de.render(time/_6de.options.duration);
break;
}else{
time-=_6de.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_6df){
_6df.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_6e0,_6e1){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6e0,_6e1);
}
this.__init__(_6e0,_6e1);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_6e3,_6e4){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_6e3);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_6e4=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_6e4);
this.start(_6e4);
},update:function(_6e7){
MochiKit.Style.setStyle(this.element,{"opacity":_6e7});
}});
MochiKit.Visual.Move=function(_6e8,_6e9){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6e8,_6e9);
}
this.__init__(_6e8,_6e9);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_6eb,_6ec){
this.element=MochiKit.DOM.getElement(_6eb);
_6ec=MochiKit.Base.update({x:0,y:0,mode:"relative"},_6ec);
this.start(_6ec);
},setup:function(){
MochiKit.Style.makePositioned(this.element);
var s=this.element.style;
var _6ee=s.visibility;
var _6ef=s.display;
if(_6ef=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_6ef=="none"){
s.visibility=_6ee;
s.display=_6ef;
}
},update:function(_6f0){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_6f0+this.originalLeft)+"px",top:Math.round(this.options.y*_6f0+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_6f1,_6f2,_6f3){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6f1,_6f2,_6f3);
}
this.__init__(_6f1,_6f2,_6f3);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_6f5,_6f6,_6f7){
this.element=MochiKit.DOM.getElement(_6f5);
_6f7=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_6f6},_6f7);
this.start(_6f7);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _6fb=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_6fc){
if(_6fb.indexOf(_6fc)>0){
this.fontSize=parseFloat(_6fb);
this.fontSizeType=_6fc;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_6fd){
var _6fe=(this.options.scaleFrom/100)+(this.factor*_6fd);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_6fe+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_6fe,this.dims[1]*_6fe);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_6ff,_700){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_700)+"px";
}
if(this.options.scaleY){
d.height=r(_6ff)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_6ff-this.dims[0])/2;
var _704=(_700-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_704+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_704+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_705,_706){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_705,_706);
}
this.__init__(_705,_706);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_708,_709){
this.element=MochiKit.DOM.getElement(_708);
_709=MochiKit.Base.update({startcolor:"#ffff99"},_709);
this.start(_709);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_70e){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_70e));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_711,_712){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_711,_712);
}
this.__init__(_711,_712);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_714,_715){
this.element=MochiKit.DOM.getElement(_714);
this.start(_715);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _717=p.cumulativeOffset(this.element);
if(this.options.offset){
_717.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_717.y>max?max:_717.y)-this.scrollStart;
},update:function(_719){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_719*this.delta));
}});
MochiKit.Visual._CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_71b,_71c){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_71b,_71c);
}
this.__init__(_71b,_71c);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_71e,_71f){
this.element=MochiKit.DOM.getElement(_71e);
this.start(_71f);
},setup:function(){
var b=MochiKit.Base;
var _721=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _722,unit;
for(var s in _721){
_722=_721[s];
s=b.camelize(s);
if(MochiKit.Visual._CSS_LENGTH.test(_722)){
var _725=_722.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_722=parseFloat(_725[1]);
unit=(_725.length==3)?_725[2]:null;
this.styleEnd[s]=_722;
this.units[s]=unit;
_722=MochiKit.Style.getStyle(this.element,s);
_725=_722.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_722=parseFloat(_725[1]);
this.styleStart[s]=_722;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_722=c.fromString(_722);
if(_722){
this.units[s]="color";
this.styleEnd[s]=_722.toHexString();
_722=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_722).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_722;
}
}
}
},update:function(_729){
var _72a;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _72d=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_72d[i]+(end[i]-_72d[i])*_729));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_72a=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_729*1000)/1000+this.units[s];
this.element.style[s]=_72a;
}
}
}});
MochiKit.Visual.fade=function(_730,_731){
var s=MochiKit.Style;
var _733=s.getStyle(_730,"opacity");
_731=MochiKit.Base.update({from:s.getStyle(_730,"opacity")||1,to:0,afterFinishInternal:function(_734){
if(_734.options.to!==0){
return;
}
s.hideElement(_734.element);
s.setStyle(_734.element,{"opacity":_733});
}},_731);
return new MochiKit.Visual.Opacity(_730,_731);
};
MochiKit.Visual.appear=function(_735,_736){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_736=MochiKit.Base.update({from:(s.getStyle(_735,"display")=="none"?0:s.getStyle(_735,"opacity")||0),to:1,afterFinishInternal:function(_739){
v._forceRerendering(_739.element);
},beforeSetupInternal:function(_73a){
s.setStyle(_73a.element,{"opacity":_73a.options.from});
s.showElement(_73a.element);
}},_736);
return new v.Opacity(_735,_736);
};
MochiKit.Visual.puff=function(_73b,_73c){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_73b=MochiKit.DOM.getElement(_73b);
var _73f=MochiKit.Style.getElementDimensions(_73b,true);
var _740={position:s.getStyle(_73b,"position"),top:_73b.style.top,left:_73b.style.left,width:_73b.style.width,height:_73b.style.height,opacity:s.getStyle(_73b,"opacity")};
_73c=MochiKit.Base.update({beforeSetupInternal:function(_741){
MochiKit.Position.absolutize(_741.effects[0].element);
},afterFinishInternal:function(_742){
s.hideElement(_742.effects[0].element);
s.setStyle(_742.effects[0].element,_740);
},scaleContent:true,scaleFromCenter:true},_73c);
return new v.Parallel([new v.Scale(_73b,200,{sync:true,scaleFromCenter:_73c.scaleFromCenter,scaleMode:{originalHeight:_73f.h,originalWidth:_73f.w},scaleContent:_73c.scaleContent,restoreAfterFinish:true}),new v.Opacity(_73b,{sync:true,to:0})],_73c);
};
MochiKit.Visual.blindUp=function(_743,_744){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_743=d.getElement(_743);
var _747=s.getElementDimensions(_743,true);
var _748=s.makeClipping(_743);
_744=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_747.h,originalWidth:_747.w},restoreAfterFinish:true,afterFinishInternal:function(_749){
s.hideElement(_749.element);
s.undoClipping(_749.element,_748);
}},_744);
return new MochiKit.Visual.Scale(_743,0,_744);
};
MochiKit.Visual.blindDown=function(_74a,_74b){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_74a=d.getElement(_74a);
var _74e=s.getElementDimensions(_74a,true);
var _74f;
_74b=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_74e.h,originalWidth:_74e.w},restoreAfterFinish:true,afterSetupInternal:function(_750){
_74f=s.makeClipping(_750.element);
s.setStyle(_750.element,{height:"0px"});
s.showElement(_750.element);
},afterFinishInternal:function(_751){
s.undoClipping(_751.element,_74f);
}},_74b);
return new MochiKit.Visual.Scale(_74a,100,_74b);
};
MochiKit.Visual.switchOff=function(_752,_753){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_752=d.getElement(_752);
var _756=s.getElementDimensions(_752,true);
var _757=s.getStyle(_752,"opacity");
var _758;
_753=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_759){
s.makePositioned(_752);
_758=s.makeClipping(_752);
},afterFinishInternal:function(_75a){
s.hideElement(_752);
s.undoClipping(_752,_758);
s.undoPositioned(_752);
s.setStyle(_752,{"opacity":_757});
}},_753);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_752,{sync:true,duration:0.57*_753.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_752,1,{sync:true,duration:0.43*_753.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_756.h,originalWidth:_756.w},scaleContent:false,restoreAfterFinish:true})],_753);
};
MochiKit.Visual.dropOut=function(_75c,_75d){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_75c=d.getElement(_75c);
var _760={top:s.getStyle(_75c,"top"),left:s.getStyle(_75c,"left"),opacity:s.getStyle(_75c,"opacity")};
_75d=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_761){
s.makePositioned(_761.effects[0].element);
},afterFinishInternal:function(_762){
s.hideElement(_762.effects[0].element);
s.undoPositioned(_762.effects[0].element);
s.setStyle(_762.effects[0].element,_760);
}},_75d);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_75c,{x:0,y:_75d.distance,sync:true}),new v.Opacity(_75c,{sync:true,to:0})],_75d);
};
MochiKit.Visual.shake=function(_764,_765){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_764=d.getElement(_764);
var _769={top:s.getStyle(_764,"top"),left:s.getStyle(_764,"left")};
_765=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_76a){
s.undoPositioned(_764);
s.setStyle(_764,_769);
}},_765);
return new v.Sequence([new v.Move(_764,{sync:true,duration:0.1*_765.duration,x:20,y:0}),new v.Move(_764,{sync:true,duration:0.2*_765.duration,x:-40,y:0}),new v.Move(_764,{sync:true,duration:0.2*_765.duration,x:40,y:0}),new v.Move(_764,{sync:true,duration:0.2*_765.duration,x:-40,y:0}),new v.Move(_764,{sync:true,duration:0.2*_765.duration,x:40,y:0}),new v.Move(_764,{sync:true,duration:0.1*_765.duration,x:-20,y:0})],_765);
};
MochiKit.Visual.slideDown=function(_76b,_76c){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_76b=d.getElement(_76b);
if(!_76b.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_76b);
var _770=s.getStyle(_76b.firstChild,"bottom")||0;
var _771=s.getElementDimensions(_76b,true);
var _772;
_76c=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_771.h,originalWidth:_771.w},restoreAfterFinish:true,afterSetupInternal:function(_773){
s.makePositioned(_773.element);
s.makePositioned(_773.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_773.element,{top:""});
}
_772=s.makeClipping(_773.element);
s.setStyle(_773.element,{height:"0px"});
s.showElement(_773.element);
},afterUpdateInternal:function(_774){
var _775=s.getElementDimensions(_774.element,true);
s.setStyle(_774.element.firstChild,{bottom:(_774.dims[0]-_775.h)+"px"});
},afterFinishInternal:function(_776){
s.undoClipping(_776.element,_772);
if(/MSIE/.test(navigator.userAgent)){
s.undoPositioned(_776.element);
s.undoPositioned(_776.element.firstChild);
}else{
s.undoPositioned(_776.element.firstChild);
s.undoPositioned(_776.element);
}
s.setStyle(_776.element.firstChild,{bottom:_770});
}},_76c);
return new MochiKit.Visual.Scale(_76b,100,_76c);
};
MochiKit.Visual.slideUp=function(_777,_778){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_777=d.getElement(_777);
if(!_777.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_777);
var _77c=s.getStyle(_777.firstChild,"bottom");
var _77d=s.getElementDimensions(_777,true);
var _77e;
_778=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_77d.h,originalWidth:_77d.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_77f){
s.makePositioned(_77f.element);
s.makePositioned(_77f.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_77f.element,{top:""});
}
_77e=s.makeClipping(_77f.element);
s.showElement(_77f.element);
},afterUpdateInternal:function(_780){
var _781=s.getElementDimensions(_780.element,true);
s.setStyle(_780.element.firstChild,{bottom:(_780.dims[0]-_781.h)+"px"});
},afterFinishInternal:function(_782){
s.hideElement(_782.element);
s.undoClipping(_782.element,_77e);
s.undoPositioned(_782.element.firstChild);
s.undoPositioned(_782.element);
s.setStyle(_782.element.firstChild,{bottom:_77c});
}},_778);
return new MochiKit.Visual.Scale(_777,0,_778);
};
MochiKit.Visual.squish=function(_783,_784){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
var _788=s.getElementDimensions(_783,true);
var _789;
_784=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_788.w,originalWidth:_788.h},beforeSetupInternal:function(_78a){
_789=s.makeClipping(_78a.element);
},afterFinishInternal:function(_78b){
s.hideElement(_78b.element);
s.undoClipping(_78b.element,_789);
}},_784);
return new MochiKit.Visual.Scale(_783,/Opera/.test(navigator.userAgent)?1:0,_784);
};
MochiKit.Visual.grow=function(_78c,_78d){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_78c=d.getElement(_78c);
_78d=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_78d);
var _791={top:_78c.style.top,left:_78c.style.left,height:_78c.style.height,width:_78c.style.width,opacity:s.getStyle(_78c,"opacity")};
var dims=s.getElementDimensions(_78c,true);
var _793,_794;
var _795,_796;
switch(_78d.direction){
case "top-left":
_793=_794=_795=_796=0;
break;
case "top-right":
_793=dims.w;
_794=_796=0;
_795=-dims.w;
break;
case "bottom-left":
_793=_795=0;
_794=dims.h;
_796=-dims.h;
break;
case "bottom-right":
_793=dims.w;
_794=dims.h;
_795=-dims.w;
_796=-dims.h;
break;
case "center":
_793=dims.w/2;
_794=dims.h/2;
_795=-dims.w/2;
_796=-dims.h/2;
break;
}
var _797=MochiKit.Base.update({beforeSetupInternal:function(_798){
s.setStyle(_798.effects[0].element,{height:"0px"});
s.showElement(_798.effects[0].element);
},afterFinishInternal:function(_799){
s.undoClipping(_799.effects[0].element);
s.undoPositioned(_799.effects[0].element);
s.setStyle(_799.effects[0].element,_791);
}},_78d);
return new v.Move(_78c,{x:_793,y:_794,duration:0.01,beforeSetupInternal:function(_79a){
s.hideElement(_79a.element);
s.makeClipping(_79a.element);
s.makePositioned(_79a.element);
},afterFinishInternal:function(_79b){
new v.Parallel([new v.Opacity(_79b.element,{sync:true,to:1,from:0,transition:_78d.opacityTransition}),new v.Move(_79b.element,{x:_795,y:_796,sync:true,transition:_78d.moveTransition}),new v.Scale(_79b.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_78d.scaleTransition,scaleContent:_78d.scaleContent,scaleFromCenter:_78d.scaleFromCenter,restoreAfterFinish:true})],_797);
}});
};
MochiKit.Visual.shrink=function(_79c,_79d){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_79c=d.getElement(_79c);
_79d=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_79d);
var _7a1={top:_79c.style.top,left:_79c.style.left,height:_79c.style.height,width:_79c.style.width,opacity:s.getStyle(_79c,"opacity")};
var dims=s.getElementDimensions(_79c,true);
var _7a3,_7a4;
switch(_79d.direction){
case "top-left":
_7a3=_7a4=0;
break;
case "top-right":
_7a3=dims.w;
_7a4=0;
break;
case "bottom-left":
_7a3=0;
_7a4=dims.h;
break;
case "bottom-right":
_7a3=dims.w;
_7a4=dims.h;
break;
case "center":
_7a3=dims.w/2;
_7a4=dims.h/2;
break;
}
var _7a5;
var _7a6=MochiKit.Base.update({beforeStartInternal:function(_7a7){
s.makePositioned(_7a7.effects[0].element);
_7a5=s.makeClipping(_7a7.effects[0].element);
},afterFinishInternal:function(_7a8){
s.hideElement(_7a8.effects[0].element);
s.undoClipping(_7a8.effects[0].element,_7a5);
s.undoPositioned(_7a8.effects[0].element);
s.setStyle(_7a8.effects[0].element,_7a1);
}},_79d);
return new v.Parallel([new v.Opacity(_79c,{sync:true,to:0,from:1,transition:_79d.opacityTransition}),new v.Scale(_79c,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_79d.scaleTransition,scaleContent:_79d.scaleContent,scaleFromCenter:_79d.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_79c,{x:_7a3,y:_7a4,sync:true,transition:_79d.moveTransition})],_7a6);
};
MochiKit.Visual.pulsate=function(_7a9,_7aa){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _7ae=MochiKit.Style.getStyle(_7a9,"opacity");
_7aa=b.update({duration:3,from:0,afterFinishInternal:function(_7af){
MochiKit.Style.setStyle(_7af.element,{"opacity":_7ae});
}},_7aa);
var _7b0=_7aa.transition||v.Transitions.sinoidal;
_7aa.transition=function(pos){
return _7b0(1-v.Transitions.pulse(pos,_7aa.pulses));
};
return new v.Opacity(_7a9,_7aa);
};
MochiKit.Visual.fold=function(_7b2,_7b3){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7b2=d.getElement(_7b2);
var _7b7=s.getElementDimensions(_7b2,true);
var _7b8={top:_7b2.style.top,left:_7b2.style.left,width:_7b2.style.width,height:_7b2.style.height};
var _7b9=s.makeClipping(_7b2);
_7b3=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7b7.h,originalWidth:_7b7.w},afterFinishInternal:function(_7ba){
new v.Scale(_7b2,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_7b7.h,originalWidth:_7b7.w},afterFinishInternal:function(_7bb){
s.hideElement(_7bb.element);
s.undoClipping(_7bb.element,_7b9);
s.setStyle(_7bb.element,_7b8);
}});
}},_7b3);
return new v.Scale(_7b2,5,_7b3);
};
MochiKit.Base.nameFunctions(MochiKit.Visual);
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
MochiKit.Base.module(MochiKit,"DragAndDrop","1.5",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_7bc){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_7bc);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_7c1){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_7c1)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_7c1);
}
},this.drops);
},findDeepestChild:function(_7c3){
var _7c4=_7c3[0];
for(var i=1;i<_7c3.length;++i){
if(MochiKit.DOM.isChildNode(_7c3[i].element,_7c4.element)){
_7c4=_7c3[i];
}
}
return _7c4;
},show:function(_7c6,_7c7){
if(!this.drops.length){
return;
}
var _7c8=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_7c6,_7c7)){
_7c8.push(drop);
}
});
if(_7c8.length>0){
var drop=this.findDeepestChild(_7c8);
MochiKit.Position.within(drop.element,_7c6.page.x,_7c6.page.y);
drop.options.onhover(_7c7,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_7cb,_7cc){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_7cb.mouse(),_7cc)){
this.last_active.options.ondrop(_7cc,this.last_active.element,_7cb);
}
},reset:function(_7cd){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_7cd);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_7cf,_7d0){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_7cf,_7d0);
}
this.__init__(_7cf,_7d0);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_7d2,_7d3){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_7d2);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_7d3);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
MochiKit.Style.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_7d7){
if(this.options._containers.length){
var _7d8;
if(this.options.tree){
_7d8=_7d7.treeNode;
}else{
_7d8=_7d7.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _7d8==c;
});
}else{
return true;
}
},isAccepted:function(_7da){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_7da,c);
}));
},isAffected:function(_7dc,_7dd){
return ((this.element!=_7dd)&&this.isContained(_7dd)&&this.isAccepted(_7dd)&&MochiKit.Position.within(this.element,_7dc.page.x,_7dc.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_7de){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_7de);
},unregister:function(_7e0){
this.drags=MochiKit.Base.filter(function(d){
return d!=_7e0;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_7e3){
window.focus();
this.activeDraggable=_7e3;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_7e4){
if(!this.activeDraggable){
return;
}
var _7e5=_7e4.mouse();
if(this._lastPointer&&(MochiKit.Base.repr(this._lastPointer.page)==MochiKit.Base.repr(_7e5.page))){
return;
}
this._lastPointer=_7e5;
this.activeDraggable.updateDrag(_7e4,_7e5);
},endDrag:function(_7e6){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_7e6);
this.activeDraggable=null;
},keyPress:function(_7e7){
if(this.activeDraggable){
this.activeDraggable.keyPress(_7e7);
}
},notify:function(_7e8,_7e9,_7ea){
MochiKit.Signal.signal(this,_7e8,_7e9,_7ea);
}};
MochiKit.DragAndDrop.Draggable=function(_7eb,_7ec){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_7eb,_7ec);
}
this.__init__(_7eb,_7ec);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_7ee,_7ef){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_7ef=b.update({handle:false,starteffect:function(_7f2){
this._savedOpacity=MochiKit.Style.getStyle(_7f2,"opacity")||1;
new v.Opacity(_7f2,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_7f3,_7f4,_7f5){
var dur=Math.sqrt(Math.abs(_7f4^2)+Math.abs(_7f5^2))*0.02;
return new v.Move(_7f3,{x:-_7f5,y:-_7f4,duration:dur});
},endeffect:function(_7f7){
new v.Opacity(_7f7,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_7ef);
var d=MochiKit.DOM;
this.element=d.getElement(_7ee);
if(_7ef.handle&&(typeof (_7ef.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_7ef.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_7ef.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_7ef.scroll&&!_7ef.scroll.scrollTo&&!_7ef.scroll.outerHTML){
_7ef.scroll=d.getElement(_7ef.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_7ef.scroll);
}
MochiKit.Style.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_7ef;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0",10),parseInt(s(this.element,"top")||"0",10)];
},initDrag:function(_7fa){
if(!_7fa.mouse().button.left){
return;
}
var src=_7fa.target();
var _7fc=(src.tagName||"").toUpperCase();
if(_7fc==="INPUT"||_7fc==="SELECT"||_7fc==="OPTION"||_7fc==="BUTTON"||_7fc==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _7fd=_7fa.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_7fd.page.x-pos.x,_7fd.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_7fa.stop();
},startDrag:function(_7ff){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=MochiKit.Style.getStyle(this.element,"z-index");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _800=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_800.left;
this.originalScrollTop=_800.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_7ff);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_801,_802){
if(!this.dragging){
this.startDrag(_801);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_802,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_801);
this.draw(_802);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _806=[0,0];
if(_802.page.x>(q.x-this.options.scrollSensitivity)){
_806[0]=_802.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_802.page.x<(p.x+this.options.scrollSensitivity)){
_806[0]=_802.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_802.page.y>(q.y-this.options.scrollSensitivity)){
_806[1]=_802.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_802.page.y<(p.y+this.options.scrollSensitivity)){
_806[1]=_802.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_806);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_801.stop();
},finishDrag:function(_807,_808){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_808){
dr.Droppables.fire(_807,this.element);
}
dr.Draggables.notify("end",this,_807);
var _80a=this.options.revert;
if(_80a&&typeof (_80a)=="function"){
_80a=_80a(this.element);
}
var d=this.currentDelta();
if(_80a&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_80c){
if(_80c.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_80c,false);
_80c.stop();
},endDrag:function(_80d){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_80d,true);
_80d.stop();
},draw:function(_80e){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_80e.page.x-pos.x-this.offset[0],_80e.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _815=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_815.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_815.top=p[1]+"px";
}
if(_815.visibility=="hidden"){
_815.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_816){
if(!_816[0]&&!_816[1]){
return;
}
this.scrollSpeed=[_816[0]*this.options.scrollSpeed,_816[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _817=new Date();
var _818=_817-this.lastScrolled;
this.lastScrolled=_817;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_818/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_818/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_818/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_818/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_818/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
MochiKit.Base.module(MochiKit,"Sortable","1.5",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Base.update(MochiKit.Sortable,{__export__:false,sortables:{},_findRootElement:function(_820){
while(_820.tagName.toUpperCase()!="BODY"){
if(_820.id&&MochiKit.Sortable.sortables[_820.id]){
return _820;
}
_820=_820.parentNode;
}
},_createElementId:function(_821){
if(_821.id==null||_821.id==""){
var d=MochiKit.DOM;
var id;
var _824=1;
while(d.getElement(id="sortable"+_824)!=null){
_824+=1;
}
d.setNodeAttribute(_821,"id",id);
}
},options:function(_825){
_825=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_825));
if(!_825){
return;
}
return MochiKit.Sortable.sortables[_825.id];
},destroy:function(_826){
var s=MochiKit.Sortable.options(_826);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_82c,_82d){
_82c=MochiKit.DOM.getElement(_82c);
var self=MochiKit.Sortable;
self._createElementId(_82c);
_82d=MochiKit.Base.update({element:_82c,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_82c],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_82d);
self.destroy(_82c);
var _82f={revert:true,ghosting:_82d.ghosting,scroll:_82d.scroll,scrollSensitivity:_82d.scrollSensitivity,scrollSpeed:_82d.scrollSpeed,constraint:_82d.constraint,handle:_82d.handle};
if(_82d.starteffect){
_82f.starteffect=_82d.starteffect;
}
if(_82d.reverteffect){
_82f.reverteffect=_82d.reverteffect;
}else{
if(_82d.ghosting){
_82f.reverteffect=function(_830){
_830.style.top=0;
_830.style.left=0;
};
}
}
if(_82d.endeffect){
_82f.endeffect=_82d.endeffect;
}
if(_82d.zindex){
_82f.zindex=_82d.zindex;
}
var _831={overlap:_82d.overlap,containment:_82d.containment,hoverclass:_82d.hoverclass,onhover:self.onHover,tree:_82d.tree,accept:_82d.accept};
var _832={onhover:self.onEmptyHover,overlap:_82d.overlap,containment:_82d.containment,hoverclass:_82d.hoverclass,accept:_82d.accept};
MochiKit.DOM.removeEmptyTextNodes(_82c);
_82d.draggables=[];
_82d.droppables=[];
if(_82d.dropOnEmpty||_82d.tree){
new MochiKit.DragAndDrop.Droppable(_82c,_832);
_82d.droppables.push(_82c);
}
MochiKit.Base.map(function(e){
var _834=_82d.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_82d.handle,e):e;
_82d.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_82f,{handle:_834})));
new MochiKit.DragAndDrop.Droppable(e,_831);
if(_82d.tree){
e.treeNode=_82c;
}
_82d.droppables.push(e);
},(self.findElements(_82c,_82d)||[]));
if(_82d.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_832);
e.treeNode=_82c;
_82d.droppables.push(e);
},(self.findTreeElements(_82c,_82d)||[]));
}
self.sortables[_82c.id]=_82d;
_82d.lastValue=self.serialize(_82c);
_82d.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_82c));
_82d.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_82c));
},onStart:function(_836,_837){
var self=MochiKit.Sortable;
var _839=self.options(_836);
_839.lastValue=self.serialize(_839.element);
},onEnd:function(_83a,_83b){
var self=MochiKit.Sortable;
self.unmark();
var _83d=self.options(_83a);
if(_83d.lastValue!=self.serialize(_83d.element)){
_83d.onUpdate(_83d.element);
}
},findElements:function(_83e,_83f){
return MochiKit.Sortable.findChildren(_83e,_83f.only,_83f.tree,_83f.tag);
},findTreeElements:function(_840,_841){
return MochiKit.Sortable.findChildren(_840,_841.only,_841.tree?true:false,_841.treeTag);
},findChildren:function(_842,only,_844,_845){
if(!_842.hasChildNodes()){
return null;
}
_845=_845.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _846=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_845&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_846.push(e);
}
if(_844){
var _849=MochiKit.Sortable.findChildren(e,only,_844,_845);
if(_849&&_849.length>0){
_846=_846.concat(_849);
}
}
},_842.childNodes);
return _846;
},onHover:function(_84a,_84b,_84c){
if(MochiKit.DOM.isChildNode(_84b,_84a)){
return;
}
var self=MochiKit.Sortable;
if(_84c>0.33&&_84c<0.66&&self.options(_84b).tree){
return;
}else{
if(_84c>0.5){
self.mark(_84b,"before");
if(_84b.previousSibling!=_84a){
var _84e=_84a.parentNode;
_84a.style.visibility="hidden";
_84b.parentNode.insertBefore(_84a,_84b);
if(_84b.parentNode!=_84e){
self.options(_84e).onChange(_84a);
}
self.options(_84b.parentNode).onChange(_84a);
}
}else{
self.mark(_84b,"after");
var _84f=_84b.nextSibling||null;
if(_84f!=_84a){
var _84e=_84a.parentNode;
_84a.style.visibility="hidden";
_84b.parentNode.insertBefore(_84a,_84f);
if(_84b.parentNode!=_84e){
self.options(_84e).onChange(_84a);
}
self.options(_84b.parentNode).onChange(_84a);
}
}
}
},_offsetSize:function(_850,type){
if(type=="vertical"||type=="height"){
return _850.offsetHeight;
}else{
return _850.offsetWidth;
}
},onEmptyHover:function(_852,_853,_854){
var _855=_852.parentNode;
var self=MochiKit.Sortable;
var _857=self.options(_853);
if(!MochiKit.DOM.isChildNode(_853,_852)){
var _858;
var _859=self.findElements(_853,{tag:_857.tag,only:_857.only});
var _85a=null;
if(_859){
var _85b=self._offsetSize(_853,_857.overlap)*(1-_854);
for(_858=0;_858<_859.length;_858+=1){
if(_85b-self._offsetSize(_859[_858],_857.overlap)>=0){
_85b-=self._offsetSize(_859[_858],_857.overlap);
}else{
if(_85b-(self._offsetSize(_859[_858],_857.overlap)/2)>=0){
_85a=_858+1<_859.length?_859[_858+1]:null;
break;
}else{
_85a=_859[_858];
break;
}
}
}
}
_853.insertBefore(_852,_85a);
self.options(_855).onChange(_852);
_857.onChange(_852);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_85d,_85e){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _861=self.options(_85d.parentNode);
if(_861&&!_861.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _862=MochiKit.Position.cumulativeOffset(_85d);
self._marker.style.left=_862.x+"px";
self._marker.style.top=_862.y+"px";
if(_85e=="after"){
if(_861.overlap=="horizontal"){
self._marker.style.left=(_862.x+_85d.clientWidth)+"px";
}else{
self._marker.style.top=(_862.y+_85d.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_863,_864,_865){
var self=MochiKit.Sortable;
var _867=self.findElements(_863,_864)||[];
for(var i=0;i<_867.length;++i){
var _869=_867[i].id.match(_864.format);
if(!_869){
continue;
}
var _86a={id:encodeURIComponent(_869?_869[1]:null),element:_863,parent:_865,children:[],position:_865.children.length,container:self._findChildrenElement(_867[i],_864.treeTag.toUpperCase())};
if(_86a.container){
self._tree(_86a.container,_864,_86a);
}
_865.children.push(_86a);
}
return _865;
},_findChildrenElement:function(_86b,_86c){
if(_86b&&_86b.hasChildNodes){
_86c=_86c.toUpperCase();
for(var i=0;i<_86b.childNodes.length;++i){
if(_86b.childNodes[i].tagName.toUpperCase()==_86c){
return _86b.childNodes[i];
}
}
}
return null;
},tree:function(_86e,_86f){
_86e=MochiKit.DOM.getElement(_86e);
var _870=MochiKit.Sortable.options(_86e);
_86f=MochiKit.Base.update({tag:_870.tag,treeTag:_870.treeTag,only:_870.only,name:_86e.id,format:_870.format},_86f||{});
var root={id:null,parent:null,children:new Array,container:_86e,position:0};
return MochiKit.Sortable._tree(_86e,_86f,root);
},setSequence:function(_872,_873,_874){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_872=MochiKit.DOM.getElement(_872);
_874=b.update(self.options(_872),_874||{});
var _877={};
b.map(function(n){
var m=n.id.match(_874.format);
if(m){
_877[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_872,_874));
b.map(function(_87a){
var n=_877[_87a];
if(n){
n[1].appendChild(n[0]);
delete _877[_87a];
}
},_873);
},_constructIndex:function(node){
var _87d="";
do{
if(node.id){
_87d="["+node.position+"]"+_87d;
}
}while((node=node.parent)!=null);
return _87d;
},sequence:function(_87e,_87f){
_87e=MochiKit.DOM.getElement(_87e);
var self=MochiKit.Sortable;
var _87f=MochiKit.Base.update(self.options(_87e),_87f||{});
return MochiKit.Base.map(function(item){
return item.id.match(_87f.format)?item.id.match(_87f.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_87e,_87f)||[]));
},serialize:function(_882,_883){
_882=MochiKit.DOM.getElement(_882);
var self=MochiKit.Sortable;
_883=MochiKit.Base.update(self.options(_882),_883||{});
var name=encodeURIComponent(_883.name||_882.id);
if(_883.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_882,_883).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_882,_883)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Sortable.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Sortable.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Sortable);


