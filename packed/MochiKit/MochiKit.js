/***

    MochiKit.MochiKit 1.5 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=true;
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
MochiKit.Base._module=function(_1,_2,_3){
if(!(_1 in MochiKit)){
MochiKit[_1]={};
}
var _4=MochiKit[_1];
_4.NAME="MochiKit."+_1;
_4.VERSION=_2;
_4.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
_4.toString=function(){
return this.__repr__();
};
for(var i=0;i<_3.length;i++){
if(!(_3[i] in MochiKit)){
throw "MochiKit."+_1+" depends on MochiKit."+_3[i]+"!";
}
}
};
MochiKit.Base._module("Base","1.5",[]);
MochiKit.Base.update=function(_6,_7){
if(_6===null||_6===undefined){
_6={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_6[k]=o[k];
}
}
}
return _6;
};
MochiKit.Base.update(MochiKit.Base,{camelize:function(_b){
var _c=_b.split("-");
var cc=_c[0];
for(var i=1;i<_c.length;i++){
cc+=_c[i].charAt(0).toUpperCase()+_c[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _1a=m.extend(null,arguments);
while(_1a.length){
var o=_1a.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_1a.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_1d,obj,_1f){
if(!_1f){
_1f=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_1d){
_1d=[];
}
for(var i=_1f;i<l;i++){
_1d.push(obj[i]);
}
}
return _1d;
},updatetree:function(_22,obj){
if(_22===null||_22===undefined){
_22={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_22[k])=="object"&&typeof (v)=="object"){
arguments.callee(_22[k],v);
}else{
_22[k]=v;
}
}
}
}
return _22;
},setdefault:function(_28,obj){
if(_28===null||_28===undefined){
_28={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _28)){
_28[k]=o[k];
}
}
}
return _28;
},keys:function(obj){
var _2e=[];
for(var _2f in obj){
_2e.push(_2f);
}
return _2e;
},values:function(obj){
var _31=[];
for(var _32 in obj){
_31.push(obj[_32]);
}
return _31;
},items:function(obj){
var _34=[];
var e;
for(var _36 in obj){
var v;
try{
v=obj[_36];
}
catch(e){
continue;
}
_34.push([_36,v]);
}
return _34;
},_newNamedError:function(_38,_39,_3a){
_3a.prototype=new MochiKit.Base.NamedError(_38.NAME+"."+_39);
_38[_39]=_3a;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_78){
return function(){
return this[_78].apply(this,arguments);
};
},itemgetter:function(_79){
return function(arg){
return arg[_79];
};
},bool:function(_7b){
if(typeof (_7b)==="boolean"||_7b instanceof Boolean){
return _7b.valueOf();
}else{
if(typeof (_7b)==="string"||_7b instanceof String){
return _7b.length>0&&_7b!="false"&&_7b!="null"&&_7b!="undefined"&&_7b!="0";
}else{
if(typeof (_7b)==="number"||_7b instanceof Number){
return !isNaN(_7b)&&_7b!=0;
}else{
if(_7b!=null&&typeof (_7b.length)==="number"){
return _7b.length!==0;
}else{
return _7b!=null;
}
}
}
}
},typeMatcher:function(){
var _7c={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_7c[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _7c)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _8d=[];
for(var i=1;i<arguments.length;i++){
_8d.push(fn(arguments[i]));
}
return _8d;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _93=m.isArrayLike;
if(arguments.length<=2){
if(!_93(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _94=[];
for(var i=0;i<lst.length;i++){
_94.push(fn(lst[i]));
}
return _94;
}else{
if(fn===null){
fn=Array;
}
var _96=null;
for(var i=1;i<arguments.length;i++){
if(!_93(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_96===null||_96>l){
_96=l;
}
}
_94=[];
for(var i=0;i<_96;i++){
var _98=[];
for(var j=1;j<arguments.length;j++){
_98.push(arguments[j][i]);
}
_94.push(fn.apply(this,_98));
}
return _94;
}
},xfilter:function(fn){
var _9b=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_9b.push(o);
}
}
return _9b;
},filter:function(fn,lst,_a0){
var _a1=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_a0);
}else{
if(typeof (_a0)=="undefined"||_a0===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_a1.push(o);
}
}
}else{
for(var i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_a0,o)){
_a1.push(o);
}
}
}
}
return _a1;
},_wrapDumbFunction:function(_a5){
return function(){
switch(arguments.length){
case 0:
return _a5();
case 1:
return _a5(arguments[0]);
case 2:
return _a5(arguments[0],arguments[1]);
case 3:
return _a5(arguments[0],arguments[1],arguments[2]);
}
var _a6=[];
for(var i=0;i<arguments.length;i++){
_a6.push("arguments["+i+"]");
}
return eval("(func("+_a6.join(",")+"))");
};
},methodcaller:function(_a8){
var _a9=MochiKit.Base.extend(null,arguments,1);
if(typeof (_a8)=="function"){
return function(obj){
return _a8.apply(obj,_a9);
};
}else{
return function(obj){
return obj[_a8].apply(obj,_a9);
};
}
},method:function(_ac,_ad){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_ad,_ac],arguments,2));
},compose:function(f1,f2){
var _b1=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_b1.push(fn);
}
return function(){
var _b5=arguments;
for(var i=_b1.length-1;i>=0;i--){
_b5=[_b1[i].apply(this,_b5)];
}
return _b5[0];
};
},bind:function(_b7,_b8){
if(typeof (_b7)=="string"){
_b7=_b8[_b7];
}
var _b9=_b7.im_func;
var _ba=_b7.im_preargs;
var _bb=_b7.im_self;
var m=MochiKit.Base;
if(typeof (_b7)=="function"&&typeof (_b7.apply)=="undefined"){
_b7=m._wrapDumbFunction(_b7);
}
if(typeof (_b9)!="function"){
_b9=_b7;
}
if(typeof (_b8)!="undefined"){
_bb=_b8;
}
if(typeof (_ba)=="undefined"){
_ba=[];
}else{
_ba=_ba.slice();
}
m.extend(_ba,arguments,2);
var _bd=function(){
var _be=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_be=m.concat(me.im_preargs,_be);
}
var _c0=me.im_self;
if(!_c0){
_c0=this;
}
return me.im_func.apply(_c0,_be);
};
_bd.im_self=_bb;
_bd.im_func=_b9;
_bd.im_preargs=_ba;
if(typeof (_b9.NAME)=="string"){
_bd.NAME="bind("+_b9.NAME+",...)";
}
return _bd;
},bindLate:function(_c1,_c2){
var m=MochiKit.Base;
var _c4=arguments;
if(typeof (_c1)==="string"){
_c4=m.extend([m.forwardCall(_c1)],arguments,1);
return m.bind.apply(this,_c4);
}
return m.bind.apply(this,_c4);
},bindMethods:function(_c5){
var _c6=MochiKit.Base.bind;
for(var k in _c5){
var _c8=_c5[k];
if(typeof (_c8)=="function"){
_c5[k]=_c6(_c8,_c5);
}
}
},registerComparator:function(_c9,_ca,_cb,_cc){
MochiKit.Base.comparatorRegistry.register(_c9,_ca,_cb,_cc);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _cf=(typeof (a)=="undefined"||a===null);
var _d0=(typeof (b)=="undefined"||b===null);
if(_cf&&_d0){
return 0;
}else{
if(_cf){
return -1;
}else{
if(_d0){
return 1;
}
}
}
var m=MochiKit.Base;
var _d2=m._primitives;
if(!(typeof (a) in _d2&&typeof (b) in _d2)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _d3=m.repr;
throw new TypeError(_d3(a)+" and "+_d3(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _d8=MochiKit.Base.compare;
var _d9=a.length;
var _da=0;
if(_d9>b.length){
_da=1;
_d9=b.length;
}else{
if(_d9<b.length){
_da=-1;
}
}
for(var i=0;i<_d9;i++){
var cmp=_d8(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _da;
},registerRepr:function(_dd,_de,_df,_e0){
MochiKit.Base.reprRegistry.register(_dd,_de,_df,_e0);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
try{
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
catch(ignore){
}
}
try{
var _e2=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_e2=_e2.replace(/^\s+/,"").replace(/\s+/g," ");
_e2=_e2.replace(/,(\S)/,", $1");
var idx=_e2.indexOf("{");
if(idx!=-1){
_e2=_e2.substr(0,idx)+"{...}";
}
}
return _e2;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_e8,_e9,_ea,_eb){
MochiKit.Base.jsonRegistry.register(_e8,_e9,_ea,_eb);
},evalJSON:function(_ec){
return eval("("+MochiKit.Base._filterJSON(_ec)+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
return (m)?m[1]:s;
},serializeJSON:function(o){
var _f0=typeof (o);
if(_f0=="number"||_f0=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_f0=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _f6;
if(typeof (o.__json__)=="function"){
_f6=o.__json__();
if(o!==_f6){
return me(_f6);
}
}
if(typeof (o.json)=="function"){
_f6=o.json();
if(o!==_f6){
return me(_f6);
}
}
if(_f0!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_f6=m.jsonRegistry.match(o);
if(o!==_f6){
return me(_f6);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_f0=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_f0=="function"){
return null;
}
res=[];
for(var k in o){
var _fa;
if(typeof (k)=="number"){
_fa="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_fa=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_fa+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_fd,arr){
if(_fd.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_fd,arr)===0);
},concat:function(){
var _ff=[];
var _100=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_100(_ff,arguments[i]);
}
return _ff;
},keyComparator:function(key){
var m=MochiKit.Base;
var _104=m.compare;
if(arguments.length==1){
return function(a,b){
return _104(a[key],b[key]);
};
}
var _107=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_107.length);i++){
var key=_107[i];
rval=_104(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _10e=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _10e(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_113,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _116=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_116(o,cur)==_113){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_11a,_11b,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_11b)=="undefined"||_11b===null){
_11b=0;
}
for(var i=_11b;i<end;i++){
if(lst[i]===_11a){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _121=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_121+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_121<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_121;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(compare);
if(data.length%2==0){
var _125=data.length/2;
return (data[_125]+data[_125-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_127,_128,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_128)=="undefined"||_128===null){
_128=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_128;i<end;i++){
if(cmp(lst[i],_127)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_12d){
var _12e=[node];
var _12f=MochiKit.Base.extend;
while(_12e.length){
var res=_12d(_12e.shift());
if(res){
_12f(_12e,res);
}
}
},nameFunctions:function(_131){
var base=_131.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _131){
var o=_131[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_135,_136){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_135)=="string"||(typeof (_135.nodeType)!="undefined"&&_135.nodeType>0))){
var kv=MochiKit.DOM.formContents(_135);
_135=kv[0];
_136=kv[1];
}else{
if(arguments.length==1){
if(typeof (_135.length)=="number"&&_135.length==2){
return arguments.callee(_135[0],_135[1]);
}
var o=_135;
_135=[];
_136=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_135.push(k);
_136.push(v[i]);
}
}else{
_135.push(k);
_136.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_135.length,_136.length);
var _13e=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_136[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_13e(_135[i])+"="+_13e(v));
}
}
return rval.join("&");
},parseQueryString:function(_13f,_140){
var qstr=(_13f.charAt(0)=="?")?_13f.substring(1):_13f;
var _142=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _144;
if(typeof (decodeURIComponent)!="undefined"){
_144=decodeURIComponent;
}else{
_144=unescape;
}
if(_140){
for(var i=0;i<_142.length;i++){
var pair=_142[i].split("=");
var name=_144(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_144(pair.join("=")));
}
}else{
for(var i=0;i<_142.length;i++){
pair=_142[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_144(name)]=_144(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_14a,wrap,_14c){
if(_14c){
this.pairs.unshift([name,_14a,wrap]);
}else{
this.pairs.push([name,_14a,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base._exportSymbols=function(_152,_153){
if(MochiKit.__export__===false||_153.__export__===false){
return;
}
for(var k in _153){
var v=_153[k];
if(v!=null){
var _156=(k[0]!=="_"&&k!=="toString");
if(v.__export__===true||(v.__export__!==false&&_156)){
_152[k]=_153[k];
}
}
}
};
MochiKit.Base._deprecated=function(_157,name,_159,_15a,_15b){
if(typeof (_157)==="string"){
if(_157.indexOf("MochiKit.")===0){
_157=_157.substring(9);
}
_157=MochiKit[_157];
}
var _15c=_159.split(".")[1];
var _15d=_159.split(".")[2];
var func=function(){
var self=arguments.callee;
var msg=_157.NAME+"."+name+" is deprecated since version "+_15a+". Use "+_159+" instead.";
if(self.logged!==true){
self.logged=true;
if(MochiKit.Logging){
MochiKit.Logging.logDebug(msg);
}else{
if(console&&console.log){
console.log(msg);
}
}
}
if(!MochiKit[_15c]){
throw new Error(msg);
}
return MochiKit[_15c][_15d].apply(this,arguments);
};
func.__export__=(_15b===true);
_157[name]=func;
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m._deprecated(m,"forward","MochiKit.Base.forwardCall","1.3");
m._deprecated(m,"find","MochiKit.Base.findValue","1.3");
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_162){
return encodeURIComponent(_162).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_163){
return escape(_163).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.isValue=m.typeMatcher("boolean","number","string");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
mean=MochiKit.Base.mean;
median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
MochiKit.Base._module("Iter","1.5",["Base"]);
MochiKit.Base.update(MochiKit.Iter,{registerIteratorFactory:function(name,_166,_167,_168){
MochiKit.Iter.iteratorRegistry.register(name,_166,_167,_168);
},isIterable:function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
},iter:function(_16a,_16b){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_16b;
},_16a);
}
if(typeof (_16a.next)=="function"){
return _16a;
}else{
if(typeof (_16a.iter)=="function"){
return _16a.iter();
}
}
try{
return self.iteratorRegistry.match(_16a);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_16a)+": "+m.repr(_16a)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _175=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_175.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_17b){
return _17b.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _181=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_181);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _18d=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_18d=arguments[1];
stop=arguments[2];
}else{
_18d=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_18d,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_18d){
rval=seq.next();
i++;
}
if(_18d>=stop){
throw self.StopIteration;
}
_18d+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _197=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_197));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _1a2=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_1a2.length>1){
try{
var _1a3=_1a2[0].next();
return _1a3;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_1a2.shift();
var _1a3=_1a2[0].next();
return _1a3;
}
}
if(_1a2.length==1){
var arg=_1a2.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_1ae,sync,_1b0){
sync.pos[_1ae]=-1;
var m=MochiKit.Base;
var _1b2=m.listMin;
return {repr:function(){
return "tee("+_1ae+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1ae];
if(i==sync.max){
rval=_1b0.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1ae]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1ae]+=1;
if(i==sync.min&&_1b2(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_1b5,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1b5=self.iter(_1b5);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1b5));
}
return rval;
},list:function(_1bc){
var rval;
if(_1bc instanceof Array){
return _1bc.slice();
}
if(typeof (_1bc)=="function"&&!(_1bc instanceof Function)&&typeof (_1bc.length)=="number"){
rval=[];
for(var i=0;i<_1bc.length;i++){
rval.push(_1bc[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1bc=self.iter(_1bc);
var rval=[];
var _1c0;
try{
while(true){
_1c0=_1bc.next();
rval.push(_1c0);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1c2,_1c3){
var i=0;
var x=_1c3;
var self=MochiKit.Iter;
_1c2=self.iter(_1c2);
if(arguments.length<3){
try{
x=_1c2.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1c2.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1c7=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1c7=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1c7=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1c7>=stop)||(step<0&&_1c7<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1c7;
_1c7+=step;
return rval;
},repr:function(){
return "range("+[_1c7,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1cb,_1cc){
if(typeof (_1cc)=="undefined"||_1cc===null){
_1cc=0;
}
var x=_1cc;
var self=MochiKit.Iter;
_1cb=self.iter(_1cb);
try{
while(true){
x+=_1cb.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1cf){
var self=MochiKit.Iter;
_1cf=self.iter(_1cf);
try{
while(true){
_1cf.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1d1,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_1d1)&&!self.isIterable(_1d1)){
try{
for(var i=0;i<_1d1.length;i++){
func(_1d1[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_1d1));
}
},every:function(_1d7,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_1d7).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_1da,cmp){
var rval=MochiKit.Iter.list(_1da);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_1dd){
var rval=MochiKit.Iter.list(_1dd);
rval.reverse();
return rval;
},some:function(_1df,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_1df).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_1e3){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_1e3)&&!self.isIterable(_1e3)){
for(var i=0;i<_1e3.length;i++){
lst.push(_1e3[i]);
}
}else{
_1e3=self.iter(_1e3);
try{
while(true){
lst.push(_1e3.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_1e7,_1e8){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1e8=m.operator.identity;
}
_1e7=self.iter(_1e7);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_1e7.next();
k=_1e8(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _1ef=true;
var _1f0=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_1f0(k,pk)===0){
fetch();
if(_1ef){
_1ef=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_1f0(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_1f1,_1f2){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1f2=m.operator.identity;
}
_1f1=self.iter(_1f1);
var _1f5=[];
var _1f6=true;
var _1f7;
var _1f8=m.compare;
while(true){
try{
var _1f9=_1f1.next();
var key=_1f2(_1f9);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_1f6||_1f8(key,_1f7)!==0){
var _1fb=[];
_1f5.push([key,_1fb]);
}
_1fb.push(_1f9);
_1f6=false;
_1f7=key;
}
return _1f5;
},arrayLikeIter:function(_1fc){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_1fc.length){
throw MochiKit.Iter.StopIteration;
}
return _1fc[i++];
}};
},hasIterateNext:function(_1fe){
return (_1fe&&typeof (_1fe.iterateNext)=="function");
},iterateNextIter:function(_1ff){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_1ff.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
MochiKit.Base._module("Logging","1.5",["Base"]);
MochiKit.Logging.LogMessage=function(num,_203,info){
this.num=num;
this.level=_203;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_206){
var self=MochiKit.Logging;
if(typeof (_206)=="string"){
_206=self.LogLevel[_206];
}
return function(msg){
var _209=msg.level;
if(typeof (_209)=="string"){
_209=self.LogLevel[_209];
}
return _209>=_206;
};
},isLogMessage:function(){
var _20a=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _20a)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_20f){
this.counter=0;
if(typeof (_20f)=="undefined"||_20f===null){
_20f=-1;
}
this.maxSize=_20f;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_214,_215,_216){
if(typeof (_215)=="string"){
_215=MochiKit.Logging.logLevelAtLeast(_215);
}
var _217=[_215,_216];
_217.ident=_214;
this.listeners[_214]=_217;
},removeListener:function(_218){
delete this.listeners[_218];
},baseLog:function(_219,_21a){
if(typeof (_219)=="number"){
if(_219>=MochiKit.Logging.LogLevel.FATAL){
_219="FATAL";
}else{
if(_219>=MochiKit.Logging.LogLevel.ERROR){
_219="ERROR";
}else{
if(_219>=MochiKit.Logging.LogLevel.WARNING){
_219="WARNING";
}else{
if(_219>=MochiKit.Logging.LogLevel.INFO){
_219="INFO";
}else{
_219="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_219,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_21c){
var _21d=0;
if(!(typeof (_21c)=="undefined"||_21c===null)){
_21d=Math.max(0,this._messages.length-_21c);
}
return this._messages.slice(_21d);
},getMessageText:function(_21e){
if(typeof (_21e)=="undefined"||_21e===null){
_21e=30;
}
var _21f=this.getMessages(_21e);
if(_21f.length){
var lst=MochiKit.Base.map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_21f);
lst.unshift("LAST "+_21f.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_222){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_222||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _224=m.partial;
var _225=this.Logger;
var _226=_225.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_224(_226,"DEBUG"),log:_224(_226,"INFO"),error:_224(_226,"ERROR"),fatal:_224(_226,"FATAL"),warning:_224(_226,"WARNING")});
var self=this;
var _228=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_228("log");
this.logError=_228("error");
this.logDebug=_228("debug");
this.logFatal=_228("fatal");
this.logWarning=_228("warning");
this.logger=new _225();
this.logger.useNativeConsole=true;
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
MochiKit.Base._module("DateTime","1.5",["Base"]);
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var date=new Date(iso[0],iso[1]-1,iso[2]);
date.setFullYear(iso[0]);
date.setMonth(iso[1]-1);
date.setDate(iso[2]);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_230,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_230=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_230,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_230,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_230,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_238){
if(typeof (date)=="undefined"||date===null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_238&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_23e){
if(typeof (date)=="undefined"||date===null){
return null;
}
var sep=_23e?"T":" ";
var foot=_23e?"Z":"";
if(_23e){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_23e)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _242=MochiKit.DateTime._padTwo;
var _243=MochiKit.DateTime._padFour;
return [_243(date.getFullYear()),_242(date.getMonth()+1),_242(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _249=MochiKit.DateTime._padTwo;
return [_249(d.getMonth()+1),_249(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
MochiKit.Base._module("Format","1.5",["Base"]);
MochiKit.Format._numberFormatter=function(_24b,_24c,_24d,_24e,_24f,_250,_251,_252,_253){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _24b;
}
var _255=_24c;
var _256=_24d;
if(num<0){
num=-num;
}else{
_255=_255.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_24e);
if(_24f){
num=num*100;
_256=fmt.percent+_256;
}
num=MochiKit.Format.roundToFixed(num,_250);
var _259=num.split(/\./);
var _25a=_259[0];
var frac=(_259.length==1)?"":_259[1];
var res="";
while(_25a.length<_251){
_25a="0"+_25a;
}
if(_252){
while(_25a.length>_252){
var i=_25a.length-_252;
res=fmt.separator+_25a.substring(i,_25a.length)+res;
_25a=_25a.substring(0,i);
}
}
res=_25a+res;
if(_250>0){
while(frac.length<_253){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _255+res+_256;
};
};
MochiKit.Format.numberFormatter=function(_25e,_25f,_260){
if(typeof (_25f)=="undefined"){
_25f="";
}
var _261=_25e.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_261){
throw TypeError("Invalid pattern");
}
var _262=_25e.substr(0,_261.index);
var _263=_25e.substr(_261.index+_261[0].length);
if(_262.search(/-/)==-1){
_262=_262+"-";
}
var _264=_261[1];
var frac=(typeof (_261[2])=="string"&&_261[2]!="")?_261[2]:"";
var _266=(typeof (_261[3])=="string"&&_261[3]!="");
var tmp=_264.split(/,/);
var _268;
if(typeof (_260)=="undefined"){
_260="default";
}
if(tmp.length==1){
_268=null;
}else{
_268=tmp[1].length;
}
var _269=_264.length-_264.replace(/0/g,"").length;
var _26a=frac.length-frac.replace(/0/g,"").length;
var _26b=frac.length;
var rval=MochiKit.Format._numberFormatter(_25f,_262,_263,_260,_266,_26b,_269,_268,_26a);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",m.map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_270){
if(typeof (_270)=="undefined"||_270===null){
_270="default";
}
if(typeof (_270)=="string"){
var rval=MochiKit.Format.LOCALE[_270];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_270]=rval;
}
return rval;
}else{
return _270;
}
};
MochiKit.Format.twoDigitAverage=function(_272,_273){
if(_273){
var res=_272/_273;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_275){
var res=MochiKit.Format.roundToFixed(_275,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_278){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_278){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_278+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_27a){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_27a){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_27a+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_27c){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_27c),_27c);
};
MochiKit.Format.truncToFixed=function(_27e,_27f){
var _280=MochiKit.Format._numberToFixed(_27e,_27f);
var _281=_280.indexOf(".");
if(_281>0&&_281+_27f+1<_280.length){
_280=_280.substring(0,_281+_27f+1);
_280=MochiKit.Format._shiftNumber(_280,0);
}
return _280;
};
MochiKit.Format.roundToFixed=function(_282,_283){
var _284=MochiKit.Format._numberToFixed(_282,_283);
var _285=_284.indexOf(".");
if(_285>0&&_285+_283+1<_284.length){
var str=MochiKit.Format._shiftNumber(_284,_283);
str=MochiKit.Format._numberToFixed(Math.round(parseFloat(str)),0);
_284=MochiKit.Format._shiftNumber(str,-_283);
}
return _284;
};
MochiKit.Format._numberToFixed=function(_287,_288){
var str=_287.toString();
var _28a=str.split(/[eE]/);
var exp=(_28a.length===1)?0:parseInt(_28a[1])||0;
var _28c=MochiKit.Format._shiftNumber(_28a[0],exp);
_28a=_28c.split(/\./);
var _28d=_28a[0];
var frac=(_28a.length===1)?"":_28a[1];
while(frac.length<_288){
frac+="0";
}
if(frac.length>0){
return _28d+"."+frac;
}else{
return _28d;
}
};
MochiKit.Format._shiftNumber=function(num,exp){
var pos=num.indexOf(".");
if(pos<0){
pos=num.length;
}else{
num=num.substring(0,pos)+num.substring(pos+1);
}
pos+=exp;
while(pos<=0||(pos<=1&&num.charAt(0)==="-")){
if(num.charAt(0)==="-"){
num="-0"+num.substring(1);
}else{
num="0"+num;
}
pos++;
}
while(pos>num.length){
num+="0";
}
if(pos<num.length){
num=num.substring(0,pos)+"."+num.substring(pos);
}
while(/^0[^.]/.test(num)){
num=num.substring(1);
}
while(/^-0[^.]/.test(num)){
num="-"+num.substring(2);
}
return num;
};
MochiKit.Format.percentFormat=function(_292){
return MochiKit.Format.twoDigitFloat(100*_292)+"%";
};
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US",__export__:false};
MochiKit.Format.__new__=function(){
MochiKit.Base.nameFunctions(this);
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
MochiKit.Base._module("Text","1.5",["Base","Format"]);
MochiKit.Text.startsWith=function(_297,str){
return str!=null&&_297!=null&&str.indexOf(_297)==0;
};
MochiKit.Text.endsWith=function(_299,str){
return str!=null&&_299!=null&&str.lastIndexOf(_299)==Math.max(str.length-_299.length,0);
};
MochiKit.Text.contains=function(_29b,str){
return str!=null&&_29b!=null&&str.indexOf(_29b)>=0;
};
MochiKit.Text.padLeft=function(str,_29e,_29f){
str=str||"";
_29f=_29f||" ";
while(str.length<_29e){
str=_29f+str;
}
return str;
};
MochiKit.Text.padRight=function(str,_2a1,_2a2){
str=str||"";
_2a2=_2a2||" ";
while(str.length<_2a1){
str+=_2a2;
}
return str;
};
MochiKit.Text.truncate=function(str,_2a4,tail){
if(str==null||str.length<=_2a4||_2a4<0){
return str;
}else{
if(tail!=null){
str=str.slice(0,Math.max(0,_2a4-tail.length));
if(typeof (str)=="string"){
return str+tail;
}else{
return MochiKit.Base.extend(str,tail);
}
}else{
return str.slice(0,_2a4);
}
}
};
MochiKit.Text.split=function(str,_2a7,max){
if(str==null||str.length==0){
return str;
}
_2a7=_2a7||"\n";
var bits=str.split(_2a7);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(max,bits.length,bits.slice(max,bits.length).join(_2a7));
return bits;
};
MochiKit.Text.rsplit=function(str,_2ab,max){
if(str==null||str.length==0){
return str;
}
_2ab=_2ab||"\n";
var bits=str.split(_2ab);
if((typeof (max)=="undefined")||max>=bits.length-1){
return bits;
}
bits.splice(0,bits.length-max,bits.slice(0,bits.length-max).join(_2ab));
return bits;
};
MochiKit.Text.formatter=function(_2ae,_2af){
if(typeof (_2af)=="undefined"){
_2af=MochiKit.Format.formatLocale();
}else{
if(typeof (_2af)=="string"){
_2af=MochiKit.Format.formatLocale(_2af);
}
}
var _2b0=MochiKit.Text._parsePattern(_2ae);
return function(){
var _2b1=MochiKit.Base.extend([],arguments);
var res=[];
for(var i=0;i<_2b0.length;i++){
if(typeof (_2b0[i])=="string"){
res.push(_2b0[i]);
}else{
res.push(MochiKit.Text.formatValue(_2b0[i],_2b1,_2af));
}
}
return res.join("");
};
};
MochiKit.Text.format=function(_2b4){
var func=MochiKit.Text.formatter(_2b4);
return func.apply(this,MochiKit.Base.extend([],arguments,1));
};
MochiKit.Text.formatValue=function(spec,_2b7,_2b8){
var self=MochiKit.Text;
if(typeof (spec)==="string"){
spec=self._parseFormatFlags(spec,0,spec.length-1);
}
for(var i=0;spec.path!=null&&i<spec.path.length;i++){
if(_2b7!=null){
_2b7=_2b7[spec.path[i]];
}
}
if(typeof (_2b8)=="undefined"){
_2b8=MochiKit.Format.formatLocale();
}else{
if(typeof (_2b8)=="string"){
_2b8=MochiKit.Format.formatLocale(_2b8);
}
}
var str="";
if(spec.numeric){
if(typeof (_2b7)!="number"||isNaN(_2b7)){
str="";
}else{
if(_2b7===Number.POSITIVE_INFINITY){
str="\u221e";
}else{
if(_2b7===Number.NEGATIVE_INFINITY){
str="-\u221e";
}else{
var sign=(spec.sign==="-")?"":spec.sign;
sign=(_2b7<0)?"-":sign;
_2b7=Math.abs(_2b7);
if(spec.format==="%"){
str=self._truncToPercent(_2b7,spec.precision);
}else{
if(spec.format==="d"){
str=MochiKit.Format.roundToFixed(_2b7,0);
}else{
if(spec.radix!=10){
str=Math.floor(_2b7).toString(spec.radix);
if(spec.format==="x"){
str=str.toLowerCase();
}else{
if(spec.format==="X"){
str=str.toUpperCase();
}
}
}else{
if(spec.precision>=0){
str=MochiKit.Format.roundToFixed(_2b7,spec.precision);
}else{
str=_2b7.toString();
}
}
}
}
if(spec.padding==="0"&&spec.format==="%"){
str=self.padLeft(str,spec.width-sign.length-1,"0");
}else{
if(spec.padding=="0"){
str=self.padLeft(str,spec.width-sign.length,"0");
}
}
str=self._localizeNumber(str,_2b8,spec.grouping);
str=sign+str;
}
}
}
if(str!==""&&spec.format==="%"){
str=str+_2b8.percent;
}
}else{
if(spec.format=="r"){
str=MochiKit.Base.repr(_2b7);
}else{
str=(_2b7==null)?"null":_2b7.toString();
}
str=self.truncate(str,spec.precision);
}
if(spec.align=="<"){
str=self.padRight(str,spec.width);
}else{
str=self.padLeft(str,spec.width);
}
return str;
};
MochiKit.Text._localizeNumber=function(num,_2be,_2bf){
var _2c0=num.split(/\./);
var _2c1=_2c0[0];
var frac=(_2c0.length==1)?"":_2c0[1];
var res=(frac.length>0)?_2be.decimal:"";
while(_2bf&&frac.length>3){
res=res+frac.substring(0,3)+_2be.separator;
frac=frac.substring(3);
if(_2c1.charAt(0)=="0"){
_2c1=_2c1.substring(1);
}
}
if(frac.length>0){
res+=frac;
}
while(_2bf&&_2c1.length>3){
var pos=_2c1.length-3;
res=_2be.separator+_2c1.substring(pos)+res;
_2c1=_2c1.substring((_2c1.charAt(0)=="0")?1:0,pos);
}
return _2c1+res;
};
MochiKit.Text._parsePattern=function(_2c5){
var self=MochiKit.Text;
var _2c7=[];
var _2c8=0;
var pos=0;
for(pos=0;pos<_2c5.length;pos++){
if(_2c5.charAt(pos)=="{"){
if(pos+1>=_2c5.length){
var msg="unescaped { char, should be escaped as {{";
throw new self.FormatPatternError(_2c5,pos,msg);
}else{
if(_2c5.charAt(pos+1)=="{"){
_2c7.push(_2c5.substring(_2c8,pos+1));
_2c8=pos+2;
pos++;
}else{
if(_2c8<pos){
_2c7.push(_2c5.substring(_2c8,pos));
}
_2c8=_2c5.indexOf("}",pos)+1;
if(_2c8<=0){
var msg="unmatched { char, not followed by a } char";
throw new self.FormatPatternError(_2c5,pos,msg);
}
_2c7.push(self._parseFormat(_2c5,pos+1,_2c8-1));
pos=_2c8-1;
}
}
}else{
if(_2c5.charAt(pos)=="}"){
if(pos+1>=_2c5.length||_2c5.charAt(pos+1)!="}"){
var msg="unescaped } char, should be escaped as }}";
throw new self.FormatPatternError(_2c5,pos,msg);
}
_2c7.push(_2c5.substring(_2c8,pos+1));
_2c8=pos+2;
pos++;
}
}
}
if(_2c8<pos){
_2c7.push(_2c5.substring(_2c8,pos));
}
return _2c7;
};
MochiKit.Text._parseFormat=function(_2cb,_2cc,_2cd){
var self=MochiKit.Text;
var text=_2cb.substring(_2cc,_2cd);
var info;
var pos=text.indexOf(":");
if(pos==0){
info=self._parseFormatFlags(_2cb,_2cc+1,_2cd);
info.path=[];
}else{
if(pos>0){
info=self._parseFormatFlags(_2cb,_2cc+pos+1,_2cd);
info.path=text.substring(0,pos).split(".");
}else{
info=self._parseFormatFlags(_2cb,_2cd,_2cd);
info.path=text.split(".");
}
}
var _2d2=/^\d+$/;
for(var i=0;i<info.path.length;i++){
var e=info.path[i];
e=e.replace(/^\s+/,"").replace(/\s+$/,"");
if(e==""&&info.path.length==1){
e=0;
}else{
if(e==""){
var msg="format value path contains blanks";
throw new self.FormatPatternError(_2cb,_2cc,msg);
}else{
if(_2d2.test(e)){
e=parseInt(e);
}
}
}
info.path[i]=e;
}
if(info.path.length<0||typeof (info.path[0])!="number"){
info.path.unshift(0);
}
return info;
};
MochiKit.Text._parseFormatFlags=function(_2d6,_2d7,_2d8){
var _2d9=MochiKit.Base.update;
var info={numeric:false,format:"s",width:0,precision:-1,align:">",sign:"-",padding:" ",grouping:false};
var _2db=_2d6.substring(_2d7,_2d8).replace(/\s+$/,"");
while(_2db.length>0){
var chr=_2db.charAt(0);
var _2dd=1;
switch(chr){
case ">":
case "<":
_2d9(info,{align:chr});
break;
case "+":
case "-":
case " ":
_2d9(info,{sign:chr});
break;
case ",":
_2d9(info,{grouping:true});
break;
case ".":
var _2de=/^\d*/.exec(_2db.substring(1))[0];
_2d9(info,{precision:parseInt(_2de)});
_2dd=1+_2de.length;
break;
case "0":
_2d9(info,{padding:chr});
break;
case "1":
case "2":
case "3":
case "4":
case "5":
case "6":
case "7":
case "8":
case "9":
var _2de=/^\d*/.exec(_2db)[0];
_2d9(info,{width:parseInt(_2de)});
_2dd=_2de.length;
break;
case "s":
case "r":
_2d9(info,{format:chr});
break;
case "b":
_2d9(info,{numeric:true,format:chr,radix:2});
break;
case "o":
_2d9(info,{numeric:true,format:chr,radix:8});
break;
case "x":
case "X":
_2d9(info,{numeric:true,format:chr,radix:16});
break;
case "d":
case "f":
case "%":
_2d9(info,{numeric:true,format:chr,radix:10});
break;
default:
var msg="unsupported format flag: "+chr;
throw new MochiKit.Text.FormatPatternError(_2d6,_2d7,msg);
}
_2db=_2db.substring(_2dd);
}
return info;
};
MochiKit.Text._truncToPercent=function(_2e0,_2e1){
var str;
if(_2e1>=0){
str=MochiKit.Format.roundToFixed(_2e0,_2e1+2);
}else{
str=(_2e0==null)?"0":_2e0.toString();
}
var arr=MochiKit.Text.split(str,".",2);
var frac=MochiKit.Text.padRight(arr[1],2,"0");
var _2e5=arr[0]+frac.substring(0,2);
frac=frac.substring(2);
while(/^0[0-9]/.test(_2e5)){
_2e5=_2e5.substring(1);
}
return (frac.length<=0)?_2e5:_2e5+"."+frac;
};
MochiKit.Text.FormatPatternError=function(_2e6,pos,_2e8){
this.pattern=_2e6;
this.pos=pos;
this.message=_2e8;
};
MochiKit.Text.FormatPatternError.prototype=new MochiKit.Base.NamedError("MochiKit.Text.FormatPatternError");
if(MochiKit.__export__){
formatter=MochiKit.Text.formatter;
format=MochiKit.Text.format;
formatValue=MochiKit.Text.formatValue;
}
MochiKit.Base.nameFunctions(MochiKit.Text);
MochiKit.Base._exportSymbols(this,MochiKit.Text);
MochiKit.Base._module("Async","1.5",["Base"]);
MochiKit.Async.Deferred=function(_2e9){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_2e9;
this.silentlyCancelled=false;
this.chained=false;
this.finalized=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _2ea;
if(this.fired==-1){
_2ea="unfired";
}else{
if(this.fired===0){
_2ea="success";
}else{
_2ea="error";
}
}
return "Deferred("+this.id+", "+_2ea+")";
},toString:MochiKit.Base.forwardCall("repr"),_nextId:MochiKit.Base.counter(),cancel:function(e){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
if(typeof (e)==="string"){
e=new self.GenericError(e);
}else{
if(!(e instanceof Error)){
e=new self.CancelledError(this);
}
}
this.errback(e);
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel(e);
}
}
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
if(this.paused===0){
this._fire();
}
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
},errback:function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},setFinalizer:function(fn){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
if(this.finalized){
throw new Error("Finalized Deferreds can not be re-used");
}
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
this._finalizer=fn;
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _2f7=this.chain;
var _2f8=this.fired;
var res=this.results[_2f8];
var self=this;
var cb=null;
while(_2f7.length>0&&this.paused===0){
var pair=_2f7.shift();
var f=pair[_2f8];
if(f===null){
continue;
}
try{
res=f(res);
_2f8=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self.paused--;
self._resback(res);
};
this.paused++;
}
}
catch(err){
_2f8=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_2f8;
this.results[_2f8]=res;
if(this.chain.length==0&&this.paused===0&&this._finalizer){
this.finalized=true;
this._finalizer(res);
}
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_300){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_302){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _305=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_305.length;i++){
var func=_305[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e){
}
}
var _30a=null;
try{
_30a=this.status;
if(!_30a&&m.isNotEmpty(this.responseText)){
_30a=304;
}
}
catch(e){
}
if(_30a==200||_30a==201||_30a==204||_30a==304||_30a==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_30e){
if(typeof (_30e)=="undefined"||_30e===null){
_30e="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_30e);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var self=MochiKit.Async;
return self.callLater(0,self._doXHR,url,opts);
},_doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:""},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,true,opts.username,opts.password);
}else{
req.open(opts.method,url,true);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _31b=opts.headers;
if(!m.isArrayLike(_31b)){
_31b=m.items(_31b);
}
for(var i=0;i<_31b.length;i++){
var _31d=_31b[i];
var name=_31d[0];
var _31f=_31d[1];
req.setRequestHeader(name,_31f);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},loadScript:function(url){
var d=new MochiKit.Async.Deferred();
var head=document.getElementsByTagName("head")[0];
var _32b=document.createElement("script");
_32b.type="text/javascript";
_32b.src=url;
_32b.onload=function(){
_32b.onload=null;
_32b.onerror=null;
_32b.onreadystatechange=null;
d.callback();
};
_32b.onerror=function(msg){
_32b.onload=null;
_32b.onerror=null;
_32b.onreadystatechange=null;
msg="Failed to load script at "+url+": "+msg;
d.errback(new URIError(msg,url));
};
_32b.onreadystatechange=function(){
if(_32b.readyState=="loaded"||_32b.readyState=="complete"){
_32b.onload();
}else{
MochiKit.Async.callLater(10,_32b.onerror,"Script loading timed out");
}
};
head.appendChild(_32b);
return d;
},wait:function(_32d,_32e){
var d=new MochiKit.Async.Deferred();
var cb=MochiKit.Base.bind("callback",d,_32e);
var _331=setTimeout(cb,Math.floor(_32d*1000));
d.canceller=function(){
try{
clearTimeout(_331);
}
catch(e){
}
};
return d;
},callLater:function(_332,func){
var m=MochiKit.Base;
var _335=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_332).addCallback(function(res){
return _335();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _338;
if(this.locked){
_338="locked, "+this.waiting.length+" waiting";
}else{
_338="unlocked";
}
return "DeferredLock("+this.id+", "+_338+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Async.DeferredList=function(list,_33a,_33b,_33c,_33d){
MochiKit.Async.Deferred.apply(this,[_33d]);
this.list=list;
var _33e=[];
this.resultList=_33e;
this.finishedCount=0;
this.fireOnOneCallback=_33a;
this.fireOnOneErrback=_33b;
this.consumeErrors=_33c;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_33e.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_33a){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_342,_343,_344){
this.resultList[_342]=[_343,_344];
this.finishedCount+=1;
if(this.fired==-1){
if(_343&&this.fireOnOneCallback){
this.callback([_342,_344]);
}else{
if(!_343&&this.fireOnOneErrback){
this.errback(_344);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_343&&this.consumeErrors){
_344=null;
}
return _344;
};
MochiKit.Async.gatherResults=function(_345){
var d=new MochiKit.Async.DeferredList(_345,false,true,false);
d.addCallback(function(_347){
var ret=[];
for(var i=0;i<_347.length;i++){
ret.push(_347[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _34c;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_34c=r;
}else{
if(r instanceof Error){
_34c=self.fail(r);
}else{
_34c=self.succeed(r);
}
}
}
catch(e){
_34c=self.fail(e);
}
return _34c;
};
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_350){
this.deferred=_350;
});
ne("CancelledError",function(_351){
this.deferred=_351;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
MochiKit.Base._module("DOM","1.5",["Base"]);
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _359=self._document;
var _35a=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_35a;
self._document=_359;
throw e;
}
self._window=_35a;
self._document=_359;
return rval;
},formContents:function(elem){
var _35d=[];
var _35e=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _363=elem.tagName.toUpperCase();
if(_363==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_363==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_35d.push(name);
_35e.push(v);
return null;
}
_35d.push(name);
_35e.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_35d.push(name);
_35e.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_35d.push(name);
_35e.push(v);
}
return null;
}
}
if(_363==="FORM"||_363==="P"||_363==="SPAN"||_363==="DIV"){
return elem.childNodes;
}
_35d.push(name);
_35e.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_35d,_35e];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _36c=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_36c;
throw e;
}
self._document=_36c;
return rval;
},registerDOMConverter:function(name,_36f,wrap,_371){
MochiKit.DOM.domConverters.register(name,_36f,wrap,_371);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _378=im.repeat;
}
var map=m.map;
var _37a=self.domConverters;
var _37b=arguments.callee;
var _37c=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im?im.list(node):m.extend(null,node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _37d=null;
try{
_37d=iter(node);
}
catch(e){
}
if(_37d){
return map(_37b,_37d,_378(ctx));
}
}else{
if(m.isArrayLike(node)){
var func=function(n){
return _37b(n,ctx);
};
return map(func,node);
}
}
try{
node=_37a.match(node,ctx);
continue;
}
catch(e){
if(e!=_37c){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_381){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_381)=="string"){
_381=self.getElement(_381);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_381){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_385){
var o={};
o[attr]=_385;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _38a=self.attributeArray.renames[attr];
var _38b=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_38a){
return node[_38a];
}
var _38c=node.getAttribute(attr);
if(_38c!=_38b){
return _38c;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _390=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_390){
return node[_390];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_392){
var elem=node;
var self=MochiKit.DOM;
var base=MochiKit.Base;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_392){
if(self.attributeArray.compliant){
for(var k in _392){
var v=_392[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _398=self.attributeArray.renames;
for(var k in _392){
v=_392[k];
var _399=_398[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_399)=="string"){
elem[_399]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
base.updatetree(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(base.isValue(elem[k])&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _39d=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _39e=MochiKit.Base.concat;
while(_39d.length){
var n=_39d.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_39d=_39e(n,_39d);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3a3=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _3a4=elem.parentNode;
var _3a5=MochiKit.Base.concat;
while(_3a3.length){
var n=_3a3.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_3a4.insertBefore(n,elem);
}else{
_3a3=_3a5(n,_3a3);
}
}
}
return _3a4;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _3aa=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_3aa);
}else{
return self.appendChildNodes(elem.parentNode,_3aa);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _3ae;
while((_3ae=elem.firstChild)){
elem.removeChild(_3ae);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_3b0){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_3b0)=="string"||typeof (_3b0)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _3b5=self._xhtml;
if(_3b0&&!self.attributeArray.compliant){
var _3b6="";
if("name" in _3b0){
_3b6+=" name=\""+self.escapeHTML(_3b0.name)+"\"";
}
if(name=="input"&&"type" in _3b0){
_3b6+=" type=\""+self.escapeHTML(_3b0.type)+"\"";
}
if(_3b6){
name="<"+name+_3b6+">";
_3b5=false;
}
}
var d=self._document;
if(_3b5&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_3b0){
self.updateNodeAttributes(elem,_3b0);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
if(typeof (elem)=="string"){
elem=self.getElement(elem);
}
var e=self.coerceToDOM(elem);
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _3bf=dest.parentNode;
if(src){
if(typeof (src)=="string"){
src=self.getElement(src);
}
src=self.coerceToDOM(src,_3bf);
_3bf.replaceChild(src,dest);
}else{
_3bf.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_3c2,_3c3,_3c4){
var self=MochiKit.DOM;
if(typeof (_3c2)=="undefined"||_3c2===null){
_3c2="*";
}
if(typeof (_3c4)=="undefined"||_3c4===null){
_3c4=self._document;
}
_3c4=self.getElement(_3c4);
if(_3c4==null){
return [];
}
var _3c6=(_3c4.getElementsByTagName(_3c2)||self._document.all);
if(typeof (_3c3)=="undefined"||_3c3===null){
return MochiKit.Base.extend(null,_3c6);
}
var _3c7=[];
for(var i=0;i<_3c6.length;i++){
var _3c9=_3c6[i];
var cls=_3c9.className;
if(typeof (cls)!="string"){
cls=_3c9.getAttribute("class");
}
if(typeof (cls)=="string"){
var _3cb=cls.split(" ");
for(var j=0;j<_3cb.length;j++){
if(_3cb[j]==_3c3){
_3c7.push(_3c9);
break;
}
}
}
}
return _3c7;
},_newCallStack:function(path,once){
var rval=function(){
var _3d0=arguments.callee.callStack;
for(var i=0;i<_3d0.length;i++){
if(_3d0[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_3d2,path,func,once){
var self=MochiKit.DOM;
var _3d7=_3d2[path];
var _3d8=_3d7;
if(!(typeof (_3d7)=="function"&&typeof (_3d7.callStack)=="object"&&_3d7.callStack!==null)){
_3d8=self._newCallStack(path,once);
if(typeof (_3d7)=="function"){
_3d8.callStack.push(_3d7);
}
_3d2[path]=_3d8;
}
_3d8.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_3db){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_3db=self.getElement(_3db);
if(_3db){
_3db.focus();
}
});
},setElementClass:function(_3dd,_3de){
var self=MochiKit.DOM;
var obj=self.getElement(_3dd);
if(self.attributeArray.compliant){
obj.setAttribute("class",_3de);
}else{
obj.setAttribute("className",_3de);
}
},toggleElementClass:function(_3e1){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_3e1)){
self.removeElementClass(obj,_3e1);
}
}
},addElementClass:function(_3e5,_3e6){
var self=MochiKit.DOM;
var obj=self.getElement(_3e5);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_3e6);
return true;
}
if(cls==_3e6){
return false;
}
var _3ea=cls.split(" ");
for(var i=0;i<_3ea.length;i++){
if(_3ea[i]==_3e6){
return false;
}
}
self.setElementClass(obj,cls+" "+_3e6);
return true;
},removeElementClass:function(_3ec,_3ed){
var self=MochiKit.DOM;
var obj=self.getElement(_3ec);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_3ed){
self.setElementClass(obj,"");
return true;
}
var _3f1=cls.split(" ");
for(var i=0;i<_3f1.length;i++){
if(_3f1[i]==_3ed){
_3f1.splice(i,1);
self.setElementClass(obj,_3f1.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_3f3,_3f4,_3f5){
var obj=MochiKit.DOM.getElement(_3f3);
var res=MochiKit.DOM.removeElementClass(obj,_3f4);
if(res){
MochiKit.DOM.addElementClass(obj,_3f5);
}
return res;
},hasElementClass:function(_3f8,_3f9){
var obj=MochiKit.DOM.getElement(_3f8);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"&&typeof (obj.getAttribute)=="function"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _3fc=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_3fc.length;j++){
if(_3fc[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _404=[dom];
var self=MochiKit.DOM;
var _406=self.escapeHTML;
var _407=self.attributeArray;
while(_404.length){
dom=_404.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _408=[];
var _409=_407(dom);
for(var i=0;i<_409.length;i++){
var a=_409[i];
_408.push([" ",a.name,"=\"",_406(a.value),"\""]);
}
_408.sort();
for(i=0;i<_408.length;i++){
var _40c=_408[i];
for(var j=0;j<_40c.length;j++){
lst.push(_40c[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_404.push("</"+dom.tagName.toLowerCase()+">");
var _40e=dom.childNodes;
for(i=_40e.length-1;i>=0;i--){
_404.push(_40e[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_406(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_410){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _415=node.nodeValue;
if(typeof (_415)=="string"){
rval.push(_415);
}
})(MochiKit.DOM.getElement(node));
if(_410){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_416){
_416=MochiKit.DOM.getElement(_416);
for(var i=0;i<_416.childNodes.length;i++){
var node=_416.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},getFirstElementByTagAndClassName:function(_419,_41a,_41b){
var self=MochiKit.DOM;
if(typeof (_419)=="undefined"||_419===null){
_419="*";
}
if(typeof (_41b)=="undefined"||_41b===null){
_41b=self._document;
}
_41b=self.getElement(_41b);
if(_41b==null){
return null;
}
var _41d=(_41b.getElementsByTagName(_419)||self._document.all);
if(_41d.length<=0){
return null;
}else{
if(typeof (_41a)=="undefined"||_41a===null){
return _41d[0];
}
}
for(var i=0;i<_41d.length;i++){
var _41f=_41d[i];
var cls=_41f.className;
if(typeof (cls)!="string"){
cls=_41f.getAttribute("class");
}
if(typeof (cls)=="string"){
var _421=cls.split(" ");
for(var j=0;j<_421.length;j++){
if(_421[j]==_41a){
return _41f;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_424,_425){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_424)=="undefined"||_424===null){
_424="*";
}else{
_424=_424.toUpperCase();
}
if(typeof (_425)=="undefined"||_425===null){
_425=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _427=elem.tagName.toUpperCase();
if((_424==="*"||_424==_427)&&(_425===null||self.hasElementClass(elem,_425))){
return elem;
}
elem=elem.parentNode;
}
return null;
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _42a="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_42a);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _42b=this._document.createElement("span");
var _42c;
if(_42b&&_42b.attributes&&_42b.attributes.length>0){
var _42d=m.filter;
_42c=function(node){
return _42d(_42c.ignoreAttrFilter,node.attributes);
};
_42c.ignoreAttr={};
var _42f=_42b.attributes;
var _430=_42c.ignoreAttr;
for(var i=0;i<_42f.length;i++){
var a=_42f[i];
_430[a.name]=a.value;
}
_42c.ignoreAttrFilter=function(a){
return (_42c.ignoreAttr[a.name]!=a.value);
};
_42c.compliant=false;
_42c.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","rowspan":"rowSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_42c=function(node){
return node.attributes;
};
_42c.compliant=true;
_42c.ignoreAttr={};
_42c.renames={};
}
_42c.__export__=false;
this.attributeArray=_42c;
m._deprecated(this,"computedStyle","MochiKit.Style.getStyle","1.4",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.4");
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.4");
m._deprecated(this,"getViewportDimensions","MochiKit.Style.getViewportDimensions","1.4");
m._deprecated(this,"hideElement","MochiKit.Style.hideElement","1.4");
m._deprecated(this,"makeClipping","MochiKit.Style.makeClipping","1.4.1");
m._deprecated(this,"makePositioned","MochiKit.Style.makePositioned","1.4.1");
m._deprecated(this,"setElementDimensions","MochiKit.Style.setElementDimensions","1.4");
m._deprecated(this,"setElementPosition","MochiKit.Style.setElementPosition","1.4");
m._deprecated(this,"setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4");
m._deprecated(this,"setOpacity","MochiKit.Style.setOpacity","1.4");
m._deprecated(this,"showElement","MochiKit.Style.showElement","1.4");
m._deprecated(this,"undoClipping","MochiKit.Style.undoClipping","1.4.1");
m._deprecated(this,"undoPositioned","MochiKit.Style.undoPositioned","1.4.1");
m._deprecated(this,"Coordinates","MochiKit.Style.Coordinates","1.4");
m._deprecated(this,"Dimensions","MochiKit.Style.Dimensions","1.4");
var _435=this.createDOMFunc;
this.UL=_435("ul");
this.OL=_435("ol");
this.LI=_435("li");
this.DL=_435("dl");
this.DT=_435("dt");
this.DD=_435("dd");
this.TD=_435("td");
this.TR=_435("tr");
this.TBODY=_435("tbody");
this.THEAD=_435("thead");
this.TFOOT=_435("tfoot");
this.TABLE=_435("table");
this.TH=_435("th");
this.INPUT=_435("input");
this.SPAN=_435("span");
this.A=_435("a");
this.DIV=_435("div");
this.IMG=_435("img");
this.BUTTON=_435("button");
this.TT=_435("tt");
this.PRE=_435("pre");
this.H1=_435("h1");
this.H2=_435("h2");
this.H3=_435("h3");
this.H4=_435("h4");
this.H5=_435("h5");
this.H6=_435("h6");
this.BR=_435("br");
this.HR=_435("hr");
this.LABEL=_435("label");
this.TEXTAREA=_435("textarea");
this.FORM=_435("form");
this.P=_435("p");
this.SELECT=_435("select");
this.OPTION=_435("option");
this.OPTGROUP=_435("optgroup");
this.LEGEND=_435("legend");
this.FIELDSET=_435("fieldset");
this.STRONG=_435("strong");
this.CANVAS=_435("canvas");
this.$=this.getElement;
this.NBSP="\xa0";
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
MochiKit.Base._module("Selector","1.5",["Base","DOM","Iter"]);
MochiKit.Selector.Selector=function(_436){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_436.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_437){
throw "Parse error in selector: "+_437;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _439=this.params;
var expr=this.expression;
var _43b,_43c,_43d,rest;
while(_43b=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_439.attributes=_439.attributes||[];
_439.attributes.push({name:_43b[2],operator:_43b[3],value:_43b[4]||_43b[5]||""});
expr=_43b[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_43b=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_43c=_43b[1];
_43d=_43b[2];
rest=_43b[3];
switch(_43c){
case "#":
_439.id=_43d;
break;
case ".":
_439.classNames.push(_43d);
break;
case ":":
_439.pseudoClassNames.push(_43d);
break;
case "":
case undefined:
_439.tagName=_43d.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _440=this.params;
var _441=[];
var _442,i;
function childElements(_444){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_444+".childNodes)";
}
if(_440.wildcard){
_441.push("true");
}
if(_442=_440.id){
_441.push("element.id == "+repr(_442));
}
if(_442=_440.tagName){
_441.push("element.tagName.toUpperCase() == "+repr(_442));
}
if((_442=_440.classNames).length>0){
for(i=0;i<_442.length;i++){
_441.push("MochiKit.DOM.hasElementClass(element, "+repr(_442[i])+")");
}
}
if((_442=_440.pseudoClassNames).length>0){
for(i=0;i<_442.length;i++){
var _445=_442[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _446=_445[1];
var _447=_445[2];
switch(_446){
case "root":
_441.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_445=_447.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_445){
throw "Invalid argument to pseudo element nth-child: "+_447;
}
var a,b;
if(_445[0]=="odd"){
a=2;
b=1;
}else{
if(_445[0]=="even"){
a=2;
b=0;
}else{
a=_445[2]&&parseInt(_445)||null;
b=parseInt(_445[3]);
}
}
_441.push("this.nthChild(element,"+a+","+b+","+!!_446.match("^nth-last")+","+!!_446.match("of-type$")+")");
break;
case "first-child":
_441.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_441.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_441.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_441.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_441.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_441.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_441.push("element.childNodes.length == 0");
break;
case "enabled":
_441.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_441.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_441.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _44a=new MochiKit.Selector.Selector(_447);
_441.push("!( "+_44a.buildMatchExpression()+")");
break;
}
}
}
if(_442=_440.attributes){
MochiKit.Base.map(function(_44b){
var _44c="MochiKit.DOM.getNodeAttribute(element, "+repr(_44b.name)+")";
var _44d=function(_44e){
return _44c+".split("+repr(_44e)+")";
};
_441.push(_44c+" != null");
switch(_44b.operator){
case "=":
_441.push(_44c+" == "+repr(_44b.value));
break;
case "~=":
_441.push("MochiKit.Base.findValue("+_44d(" ")+", "+repr(_44b.value)+") > -1");
break;
case "^=":
_441.push(_44c+".substring(0, "+_44b.value.length+") == "+repr(_44b.value));
break;
case "$=":
_441.push(_44c+".substring("+_44c+".length - "+_44b.value.length+") == "+repr(_44b.value));
break;
case "*=":
_441.push(_44c+".match("+repr(_44b.value)+")");
break;
case "|=":
_441.push(_44d("-")+"[0].toUpperCase() == "+repr(_44b.value.toUpperCase()));
break;
case "!=":
_441.push(_44c+" != "+repr(_44b.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_44b.operator+" in selector";
}
},_442);
}
return _441.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_450,a,b,_453,_454){
var _455=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_450.parentNode.childNodes);
if(_454){
_455=MochiKit.Base.filter(function(node){
return node.tagName==_450.tagName;
},_455);
}
if(_453){
_455=MochiKit.Iter.reversed(_455);
}
if(a){
var _458=MochiKit.Base.findIdentical(_455,_450);
return ((_458+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_455,_450)+1;
}
},isUIElement:function(_459){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_459.tagName.toLowerCase())>-1;
},findElements:function(_45a,axis){
var _45c;
if(axis==undefined){
axis="";
}
function inScope(_45d,_45e){
if(axis==""){
return MochiKit.DOM.isChildNode(_45d,_45e);
}else{
if(axis==">"){
return _45d.parentNode===_45e;
}else{
if(axis=="+"){
return _45d===nextSiblingElement(_45e);
}else{
if(axis=="~"){
var _45f=_45e;
while(_45f=nextSiblingElement(_45f)){
if(_45d===_45f){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_45c=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_45c)){
if(!_45a||inScope(_45c,_45a)){
return [_45c];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_45a=(_45a||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_45a){
throw "> combinator not allowed without preceeding expression";
}
_45a=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_45a.childNodes);
}else{
if(axis=="+"){
if(!_45a){
throw "+ combinator not allowed without preceeding expression";
}
_45a=nextSiblingElement(_45a)&&[nextSiblingElement(_45a)];
}else{
if(axis=="~"){
if(!_45a){
throw "~ combinator not allowed without preceeding expression";
}
var _462=[];
while(nextSiblingElement(_45a)){
_45a=nextSiblingElement(_45a);
_462.push(_45a);
}
_45a=_462;
}
}
}
}
if(!_45a){
return [];
}
var _463=MochiKit.Base.filter(MochiKit.Base.bind(function(_464){
return this.match(_464);
},this),_45a);
return _463;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_465,_466){
_465=MochiKit.DOM.getElement(_465);
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_46b){
var _46c="";
var _46d=function(_46e,expr){
var _470=expr.match(/^[>+~]$/);
if(_470){
_46c=_470[0];
return _46e;
}else{
var _471=new MochiKit.Selector.Selector(expr);
var _472=MochiKit.Iter.reduce(function(_473,_474){
return MochiKit.Base.extend(_473,_471.findElements(_474||_465,_46c));
},_46e,[]);
_46c="";
return _472;
}
};
var _475=_46b.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_46d,_475,[null]));
},_466));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
this.$$=this.findDocElements;
MochiKit.Base.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
MochiKit.Base._module("Style","1.5",["Base","DOM"]);
MochiKit.Style.Dimensions=function(w,h){
if(!(this instanceof MochiKit.Style.Dimensions)){
return new MochiKit.Style.Dimensions(w,h);
}
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
if(!(this instanceof MochiKit.Style.Coordinates)){
return new MochiKit.Style.Coordinates(x,y);
}
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_47d){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_47d=MochiKit.Base.camelize(_47d);
if(!elem||elem==d){
return undefined;
}
if(_47d=="opacity"&&typeof (elem.filters)!="undefined"){
var _480=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_480&&_480[1]){
return parseFloat(_480[1])/100;
}
return 1;
}
if(_47d=="float"||_47d=="cssFloat"||_47d=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _481=elem.style?elem.style[_47d]:null;
if(!_481){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_47d=_47d.replace(/([A-Z])/g,"-$1").toLowerCase();
_481=css?css.getPropertyValue(_47d):null;
}else{
if(elem.currentStyle){
_481=elem.currentStyle[_47d];
if(/^\d/.test(_481)&&!/px$/.test(_481)&&_47d!="fontWeight"){
var left=elem.style.left;
var _484=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_481||0;
_481=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_484;
}
}
}
}
if(_47d=="opacity"){
_481=parseFloat(_481);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_47d)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_481="auto";
}
}
return _481=="auto"?null:_481;
},setStyle:function(elem,_486){
elem=MochiKit.DOM.getElement(elem);
for(var name in _486){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_486[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_486[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_486[name];
}else{
elem.style.styleFloat=_486[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_486[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _48b=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_48b?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_48d){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
var _490=function(o){
return o!=null&&o.nodeType==null&&typeof (o.x)=="number"&&typeof (o.y)=="number";
};
if(typeof (elem)=="string"){
elem=dom.getElement(elem);
}
if(elem==null||(!_490(elem)&&self.getStyle(elem,"display")=="none")){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _494=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_494=elem.offsetParent;
if(_494!=elem){
while(_494){
c.x+=parseInt(_494.style.borderLeftWidth)||0;
c.y+=parseInt(_494.style.borderTopWidth)||0;
c.x+=_494.offsetLeft;
c.y+=_494.offsetTop;
_494=_494.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_494=elem.parentNode;
}else{
_494=null;
}
while(_494){
var _499=_494.tagName.toUpperCase();
if(_499==="BODY"||_499==="HTML"){
break;
}
var disp=self.getStyle(_494,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_494.scrollLeft;
c.y-=_494.scrollTop;
}
if(_494.parentNode){
_494=_494.parentNode;
}else{
_494=null;
}
}
}
}
}
if(_48d){
_48d=arguments.callee(_48d);
if(_48d){
c.x-=(_48d.x||0);
c.y-=(_48d.y||0);
}
}
return c;
},setElementPosition:function(elem,_49c,_49d){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_49d)=="undefined"){
_49d="px";
}
var _49e={};
var _49f=MochiKit.Base.isUndefinedOrNull;
if(!_49f(_49c.x)){
_49e["left"]=_49c.x+_49d;
}
if(!_49f(_49c.y)){
_49e["top"]=_49c.y+_49d;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_49e});
},makePositioned:function(_4a0){
_4a0=MochiKit.DOM.getElement(_4a0);
var pos=MochiKit.Style.getStyle(_4a0,"position");
if(pos=="static"||!pos){
_4a0.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_4a0.style.top=0;
_4a0.style.left=0;
}
}
},undoPositioned:function(_4a2){
_4a2=MochiKit.DOM.getElement(_4a2);
if(_4a2.style.position=="relative"){
_4a2.style.position=_4a2.style.top=_4a2.style.left=_4a2.style.bottom=_4a2.style.right="";
}
},makeClipping:function(_4a3){
_4a3=MochiKit.DOM.getElement(_4a3);
var s=_4a3.style;
var _4a5={"overflow":s.overflow,"overflow-x":s.overflowX,"overflow-y":s.overflowY};
if((MochiKit.Style.getStyle(_4a3,"overflow")||"visible")!="hidden"){
_4a3.style.overflow="hidden";
_4a3.style.overflowX="hidden";
_4a3.style.overflowY="hidden";
}
return _4a5;
},undoClipping:function(_4a6,_4a7){
_4a6=MochiKit.DOM.getElement(_4a6);
if(typeof (_4a7)=="string"){
_4a6.style.overflow=_4a7;
}else{
if(_4a7!=null){
_4a6.style.overflow=_4a7["overflow"];
_4a6.style.overflowX=_4a7["overflow-x"];
_4a6.style.overflowY=_4a7["overflow-y"];
}
}
},getElementDimensions:function(elem,_4a9){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _4ae=s.visibility;
var _4af=s.position;
var _4b0=s.display;
s.visibility="hidden";
s.position="absolute";
s.display=self._getDefaultDisplay(elem);
var _4b1=elem.offsetWidth;
var _4b2=elem.offsetHeight;
s.display=_4b0;
s.position=_4af;
s.visibility=_4ae;
}else{
_4b1=elem.offsetWidth||0;
_4b2=elem.offsetHeight||0;
}
if(_4a9){
var _4b3="colSpan" in elem&&"rowSpan" in elem;
var _4b4=(_4b3&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_4b4){
if(/MSIE/.test(navigator.userAgent)){
var _4b5=elem.previousSibling?0.5:1;
var _4b6=elem.nextSibling?0.5:1;
}else{
var _4b5=0.5;
var _4b6=0.5;
}
}else{
var _4b5=1;
var _4b6=1;
}
_4b1-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_4b5*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_4b6*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_4b3){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _4b7=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _4b7=1;
}else{
var _4b7=_4b4?0.5:1;
}
}
}else{
var _4b7=1;
}
_4b2-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_4b7*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_4b1,_4b2);
},setElementDimensions:function(elem,_4b9,_4ba){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_4ba)=="undefined"){
_4ba="px";
}
var _4bb={};
var _4bc=MochiKit.Base.isUndefinedOrNull;
if(!_4bc(_4b9.w)){
_4bb["width"]=_4b9.w+_4ba;
}
if(!_4bc(_4b9.h)){
_4bb["height"]=_4b9.h+_4ba;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_4bb});
},_getDefaultDisplay:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var _4c0=elem.tagName.toUpperCase();
return self._defaultDisplay[_4c0]||"block";
},setDisplayForElement:function(_4c1,_4c2){
var _4c3=MochiKit.Base.extend(null,arguments,1);
var _4c4=MochiKit.DOM.getElement;
for(var i=0;i<_4c3.length;i++){
_4c2=_4c4(_4c3[i]);
if(_4c2){
_4c2.style.display=_4c1;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b&&b.parentElement&&b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
var _4ce=["A","ABBR","ACRONYM","B","BASEFONT","BDO","BIG","BR","CITE","CODE","DFN","EM","FONT","I","IMG","KBD","LABEL","Q","S","SAMP","SMALL","SPAN","STRIKE","STRONG","SUB","SUP","TEXTAREA","TT","U","VAR"];
this._defaultDisplay={"TABLE":"table","THEAD":"table-header-group","TBODY":"table-row-group","TFOOT":"table-footer-group","COLGROUP":"table-column-group","COL":"table-column","TR":"table-row","TD":"table-cell","TH":"table-cell","CAPTION":"table-caption","LI":"list-item","INPUT":"inline-block","SELECT":"inline-block"};
if(/MSIE/.test(navigator.userAgent)){
for(var k in this._defaultDisplay){
var v=this._defaultDisplay[k];
if(v.indexOf("table")==0){
this._defaultDisplay[k]="block";
}
}
}
for(var i=0;i<_4ce.length;i++){
this._defaultDisplay[_4ce[i]]="inline";
}
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.3",true);
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.3",true);
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
MochiKit.Base._module("LoggingPane","1.5",["Base","Logging"]);
MochiKit.LoggingPane.createLoggingPane=function(_4d2){
var m=MochiKit.LoggingPane;
_4d2=!(!_4d2);
if(m._loggingPane&&m._loggingPane.inline!=_4d2){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_4d2,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_4d4,_4d5){
if(typeof (_4d5)=="undefined"||_4d5===null){
_4d5=MochiKit.Logging.logger;
}
this.logger=_4d5;
var _4d6=MochiKit.Base.update;
var _4d7=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _4d9=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_4d4){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _4e0=doc.getElementById(uid);
var _4e1=!!_4e0;
if(_4e0&&typeof (_4e0.loggingPane)!="undefined"){
_4e0.loggingPane.logger=this.logger;
_4e0.loggingPane.buildAndApplyFilter();
return _4e0.loggingPane;
}
if(_4e1){
var _4e2;
while((_4e2=_4e0.firstChild)){
_4e0.removeChild(_4e2);
}
}else{
_4e0=doc.createElement("div");
_4e0.id=uid;
}
_4e0.loggingPane=this;
var _4e3=doc.createElement("input");
var _4e4=doc.createElement("input");
var _4e5=doc.createElement("button");
var _4e6=doc.createElement("button");
var _4e7=doc.createElement("button");
var _4e8=doc.createElement("button");
var _4e9=doc.createElement("div");
var _4ea=doc.createElement("div");
var _4eb=uid+"_Listener";
this.colorTable=_4d9(this.colorTable);
var _4ec=[];
var _4ed=null;
var _4ee=function(msg){
var _4f0=msg.level;
if(typeof (_4f0)=="number"){
_4f0=MochiKit.Logging.LogLevel[_4f0];
}
return _4f0;
};
var _4f1=function(msg){
return msg.info.join(" ");
};
var _4f3=bind(function(msg){
var _4f5=_4ee(msg);
var text=_4f1(msg);
var c=this.colorTable[_4f5];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_4f5;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_4f5+": "+text));
_4ea.appendChild(p);
_4ea.appendChild(doc.createElement("br"));
if(_4e9.offsetHeight>_4e9.scrollHeight){
_4e9.scrollTop=0;
}else{
_4e9.scrollTop=_4e9.scrollHeight;
}
},this);
var _4f9=function(msg){
_4ec[_4ec.length]=msg;
_4f3(msg);
};
var _4fb=function(){
var _4fc,_4fd;
try{
_4fc=new RegExp(_4e3.value);
_4fd=new RegExp(_4e4.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_4fc.test(_4ee(msg))&&_4fd.test(_4f1(msg)));
};
};
var _4ff=function(){
while(_4ea.firstChild){
_4ea.removeChild(_4ea.firstChild);
}
};
var _500=function(){
_4ec=[];
_4ff();
};
var _501=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_4eb);
try{
try{
_4e0.loggingPane=null;
}
catch(e){
logFatal("Bookmarklet was closed incorrectly.");
}
if(_4d4){
_4e0.parentNode.removeChild(_4e0);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _502=function(){
_4ff();
for(var i=0;i<_4ec.length;i++){
var msg=_4ec[i];
if(_4ed===null||_4ed(msg)){
_4f3(msg);
}
}
};
this.buildAndApplyFilter=function(){
_4ed=_4fb();
_502();
this.logger.removeListener(_4eb);
this.logger.addListener(_4eb,_4ed,_4f9);
};
var _505=bind(function(){
_4ec=this.logger.getMessages();
_502();
},this);
var _506=bind(function(_507){
_507=_507||window.event;
var key=_507.which||_507.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _509="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_4d4){
_509+="; height: 10em; border-top: 2px solid black";
}else{
_509+="; height: 100%;";
}
_4e0.style.cssText=_509;
if(!_4e1){
doc.body.appendChild(_4e0);
}
_509={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_4d7(_4e3,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_506,"style":_509});
_4e0.appendChild(_4e3);
_4d7(_4e4,{"value":".*","onkeypress":_506,"style":_509});
_4e0.appendChild(_4e4);
_509="width: 8%; display:inline; font: "+this.logFont;
_4e5.appendChild(doc.createTextNode("Filter"));
_4e5.onclick=bind("buildAndApplyFilter",this);
_4e5.style.cssText=_509;
_4e0.appendChild(_4e5);
_4e6.appendChild(doc.createTextNode("Load"));
_4e6.onclick=_505;
_4e6.style.cssText=_509;
_4e0.appendChild(_4e6);
_4e7.appendChild(doc.createTextNode("Clear"));
_4e7.onclick=_500;
_4e7.style.cssText=_509;
_4e0.appendChild(_4e7);
_4e8.appendChild(doc.createTextNode("Close"));
_4e8.onclick=_501;
_4e8.style.cssText=_509;
_4e0.appendChild(_4e8);
_4e9.style.cssText="overflow: auto; width: 100%";
_4ea.style.cssText="width: 100%; height: "+(_4d4?"8em":"100%");
_4e9.appendChild(_4ea);
_4e0.appendChild(_4e9);
this.buildAndApplyFilter();
_505();
if(_4d4){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_4d4;
this.closePane=_501;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.__new__=function(){
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
MochiKit.Base._module("Color","1.5",["Base","DOM","Style"]);
MochiKit.Color.Color=function(red,_50b,blue,_50d){
if(typeof (_50d)=="undefined"||_50d===null){
_50d=1;
}
this.rgb={r:red,g:_50b,b:blue,a:_50d};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_50e){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_50e);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_514){
var hsl=this.asHSL();
hsl.s=_514;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_517){
var hsl=this.asHSL();
hsl.l=_517;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_51a){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_51a,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_51d){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_51d,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_520,_521){
if(typeof (_521)=="undefined"||_521===null){
_521=0.5;
}
var sf=1-_521;
var s=this.rgb;
var d=_520.rgb;
var df=_521;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_526){
var a=this.asRGB();
var b=_526.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().l>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_53d,blue,_53f){
var _540=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_53d=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_53f=undefined;
}else{
_53f=rgb.a;
}
}
return new _540(red,_53d,blue,_53f);
},fromHSL:function(hue,_543,_544,_545){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_548,_549,_54a){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _54d=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _54e=_54d._namedColors[name.toLowerCase()];
if(typeof (_54e)=="string"){
return _54d.fromHexString(_54e);
}else{
if(name=="transparent"){
return _54d.transparentColor();
}
}
return null;
},fromString:function(_54f){
var self=MochiKit.Color.Color;
var _551=_54f.substr(0,3);
if(_551=="rgb"){
return self.fromRGBString(_54f);
}else{
if(_551=="hsl"){
return self.fromHSLString(_54f);
}else{
if(_54f.charAt(0)=="#"){
return self.fromHexString(_54f);
}
}
}
return self.fromName(_54f);
},fromHexString:function(_552){
if(_552.charAt(0)=="#"){
_552=_552.substring(1);
}
var _553=[];
var i,hex;
if(_552.length==3){
for(i=0;i<3;i++){
hex=_552.substr(i,1);
_553.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_552.substr(i,2);
_553.push(parseInt(hex,16)/255);
}
}
var _556=MochiKit.Color.Color;
return _556.fromRGB.apply(_556,_553);
},_fromColorString:function(pre,_558,_559,_55a){
if(_55a.indexOf(pre)===0){
_55a=_55a.substring(_55a.indexOf("(",3)+1,_55a.length-1);
}
var _55b=_55a.split(/\s*,\s*/);
var _55c=[];
for(var i=0;i<_55b.length;i++){
var c=_55b[i];
var val;
var _560=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_560=="deg"){
val=parseFloat(c)/360;
}else{
if(_560=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_559[i]*parseFloat(c);
}
}
}
_55c.push(val);
}
return this[_558].apply(this,_55c);
},fromComputedStyle:function(elem,_562){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _565=MochiKit.Style.getStyle.apply(d,arguments);
if(!_565){
continue;
}
var _566=cls.fromString(_565);
if(!_566){
break;
}
if(_566.asRGB().a>0){
return _566;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_56c){
v*=_56c;
if(v<0){
return 0;
}else{
if(v>_56c){
return _56c;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_572,_573,_574){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_572=hsv.s;
_573=hsv.v;
_574=hsv.a;
}
var red;
var _577;
var blue;
if(_572===0){
red=_573;
_577=_573;
blue=_573;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_573*(1-_572);
var q=_573*(1-(_572*f));
var t=_573*(1-(_572*(1-f)));
switch(i){
case 1:
red=q;
_577=_573;
blue=p;
break;
case 2:
red=p;
_577=_573;
blue=t;
break;
case 3:
red=p;
_577=q;
blue=_573;
break;
case 4:
red=t;
_577=p;
blue=_573;
break;
case 5:
red=_573;
_577=p;
blue=q;
break;
case 6:
case 0:
red=_573;
_577=t;
blue=p;
break;
}
}
return {r:red,g:_577,b:blue,a:_574};
},hslToRGB:function(hue,_57f,_580,_581){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_57f=hsl.s;
_580=hsl.l;
_581=hsl.a;
}
var red;
var _584;
var blue;
if(_57f===0){
red=_580;
_584=_580;
blue=_580;
}else{
var m2;
if(_580<=0.5){
m2=_580*(1+_57f);
}else{
m2=_580+_57f-(_580*_57f);
}
var m1=(2*_580)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_584=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_584,b:blue,a:_581};
},rgbToHSV:function(red,_58b,blue,_58d){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_58b=rgb.g;
blue=rgb.b;
_58d=rgb.a;
}
var max=Math.max(Math.max(red,_58b),blue);
var min=Math.min(Math.min(red,_58b),blue);
var hue;
var _592;
var _593=max;
if(min==max){
hue=0;
_592=0;
}else{
var _594=(max-min);
_592=_594/max;
if(red==max){
hue=(_58b-blue)/_594;
}else{
if(_58b==max){
hue=2+((blue-red)/_594);
}else{
hue=4+((red-_58b)/_594);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_592,v:_593,a:_58d};
},rgbToHSL:function(red,_596,blue,_598){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_596=rgb.g;
blue=rgb.b;
_598=rgb.a;
}
var max=Math.max(red,Math.max(_596,blue));
var min=Math.min(red,Math.min(_596,blue));
var hue;
var _59d;
var _59e=(max+min)/2;
var _59f=max-min;
if(_59f===0){
hue=0;
_59d=0;
}else{
if(_59e<=0.5){
_59d=_59f/(max+min);
}else{
_59d=_59f/(2-max-min);
}
if(red==max){
hue=(_596-blue)/_59f;
}else{
if(_596==max){
hue=2+((blue-red)/_59f);
}else{
hue=4+((red-_596)/_59f);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_59d,l:_59e,a:_598};
},toColorPart:function(num){
num=Math.round(num);
var _5a1=num.toString(16);
if(num<16){
return "0"+_5a1;
}
return _5a1;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _5a3=1/3;
var _5a4={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_5a3,_5a3,_5a3],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_5a3,2*_5a3,2*_5a3],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
for(var k in _5a4){
var name=k+"Color";
var _5a7=this.Color.fromRGB.apply(this.Color,_5a4[k]);
this.Color[name]=m.partial(m.operator.identity,_5a7);
}
var _5a8=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _5aa=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_5a8,_5aa);
}});
MochiKit.Color.__new__();
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Base._module("Signal","1.5",["Base","DOM","Style"]);
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Signal.Event.__export__=false;
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
try{
if(elem!==null&&elem.nodeType!==null){
this._relatedTarget=elem;
return elem;
}
}
catch(ignore){
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("drag")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel=new MochiKit.Style.Coordinates(0,0);
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _5b9=MochiKit.Signal._specialMacKeys;
for(var i=63236;i<=63242;i++){
_5b9[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _5bb=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_5bb[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_5bb[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_5bb[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_5bb[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_5bd){
this.source=_5bd.source;
this.signal=_5bd.signal;
this.listener=_5bd.listener;
this.isDOM=_5bd.isDOM;
this.objOrFunc=_5bd.objOrFunc;
this.funcOrStr=_5bd.funcOrStr;
this.connected=_5bd.connected;
};
MochiKit.Signal.Ident.__export__=false;
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{_unloadCache:function(){
var self=MochiKit.Signal;
var _5bf=self._observers;
for(var i=0;i<_5bf.length;i++){
if(_5bf[i].signal!=="onload"&&_5bf[i].signal!=="onunload"){
self._disconnect(_5bf[i]);
}
}
},_listener:function(src,sig,func,obj,_5c5){
var self=MochiKit.Signal;
var E=self.Event;
if(!_5c5){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_5c8){
obj[func].apply(obj,[new E(src,_5c8)]);
var _5c9=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_5c9);
};
}else{
return function(_5ca){
obj[func].apply(obj,[new E(src,_5ca)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_5cb){
func.apply(obj,[new E(src,_5cb)]);
var _5cc=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_5cc);
};
}else{
return function(_5cd){
func.apply(obj,[new E(src,_5cd)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_5d3){
var e=new E(src,_5d3);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_5d5,_5d6){
var obj=null;
var func=null;
if(typeof (_5d6)!="undefined"){
obj=_5d5;
func=_5d6;
if(typeof (_5d6)=="string"){
if(typeof (_5d5[_5d6])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_5d6)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_5d5)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_5d5;
}
}
return [obj,func];
},connect:function(src,sig,_5db,_5dc){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _5de=self._getDestPair(_5db,_5dc);
var obj=_5de[0];
var func=_5de[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _5e1=!!(src.addEventListener||src.attachEvent);
if(_5e1&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _5e2=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_5e1&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _5e2=self._listener(src,sig,func,obj,_5e1);
sig="onDOMMouseScroll";
}else{
var _5e2=self._listener(src,sig,func,obj,_5e1);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_5e2,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_5e2);
}
}
var _5e3=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_5e2,isDOM:_5e1,objOrFunc:_5db,funcOrStr:_5dc,connected:true});
self._observers.push(_5e3);
if(!_5e1&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_5e3],arguments,1);
src.__connect__.apply(src,args);
}
return _5e3;
},connectOnce:function(src,sig,_5e7,_5e8){
var self=MochiKit.Signal;
var _5ea=self.connect(src,sig,_5e7,_5e8);
var _5eb;
_5eb=self.connect(src,sig,function(){
self.disconnect(_5ea);
self.disconnect(_5eb);
});
return _5ea;
},_disconnect:function(_5ec){
if(!_5ec.connected){
return;
}
_5ec.connected=false;
var src=_5ec.source;
var sig=_5ec.signal;
var _5ef=_5ec.listener;
if(!_5ec.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_5ec,sig,_5ec.objOrFunc,_5ec.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_5ef,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_5ef);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_5f0){
var self=MochiKit.Signal;
var _5f2=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=arguments[0];
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_5f2.length-1;i>=0;i--){
var o=_5f2[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(self._lock===0){
_5f2.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_5f2,_5f0);
if(idx>=0){
self._disconnect(_5f0);
if(self._lock===0){
_5f2.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_5fb,_5fc){
var self=MochiKit.Signal;
var _5fe=self._observers;
var _5ff=self._disconnect;
var lock=self._lock;
var _601=self._dirty;
if(typeof (_5fc)==="undefined"){
_5fc=null;
}
for(var i=_5fe.length-1;i>=0;i--){
var _603=_5fe[i];
if(_603.objOrFunc===_5fb&&(_5fc===null||_603.funcOrStr===_5fc)){
_5ff(_603);
if(lock===0){
_5fe.splice(i,1);
}else{
_601=true;
}
}
}
self._dirty=_601;
},disconnectAll:function(src,sig){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var m=MochiKit.Base;
var _607=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _609=self._disconnect;
var _60a=self._observers;
var i,_60c;
var lock=self._lock;
var _60e=self._dirty;
if(_607.length===0){
for(i=_60a.length-1;i>=0;i--){
_60c=_60a[i];
if(_60c.source===src){
_609(_60c);
if(lock===0){
_60a.splice(i,1);
}else{
_60e=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_607.length;i++){
sigs[_607[i]]=true;
}
for(i=_60a.length-1;i>=0;i--){
_60c=_60a[i];
if(_60c.source===src&&_60c.signal in sigs){
_609(_60c);
if(lock===0){
_60a.splice(i,1);
}else{
_60e=true;
}
}
}
}
self._dirty=_60e;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _613=self._observers;
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var args=MochiKit.Base.extend(null,arguments,2);
var _615=[];
self._lock++;
for(var i=0;i<_613.length;i++){
var _617=_613[i];
if(_617.source===src&&_617.signal===sig&&_617.connected){
try{
if(_617.isDOM&&_617.funcOrStr!=null){
var obj=_617.objOrFunc;
obj[_617.funcOrStr].apply(obj,args);
}else{
if(_617.isDOM){
_617.objOrFunc.apply(src,args);
}else{
_617.listener.apply(src,args);
}
}
}
catch(e){
_615.push(e);
}
}
}
self._lock--;
if(self._lock===0&&self._dirty){
self._dirty=false;
for(var i=_613.length-1;i>=0;i--){
if(!_613[i].connected){
_613.splice(i,1);
}
}
}
if(_615.length==1){
throw _615[0];
}else{
if(_615.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_615;
throw e;
}
}
}});
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=0;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
MochiKit.Base._module("Position","1.5",["Base","DOM","Style"]);
MochiKit.Base.update(MochiKit.Position,{__export__:false,includeScrollOffsets:false,prepare:function(){
var _61c=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _61d=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_61c,_61d);
},cumulativeOffset:function(_61e){
var _61f=0;
var _620=0;
do{
_61f+=_61e.offsetTop||0;
_620+=_61e.offsetLeft||0;
_61e=_61e.offsetParent;
}while(_61e);
return new MochiKit.Style.Coordinates(_620,_61f);
},realOffset:function(_621){
var _622=0;
var _623=0;
do{
_622+=_621.scrollTop||0;
_623+=_621.scrollLeft||0;
_621=_621.parentNode;
}while(_621);
return new MochiKit.Style.Coordinates(_623,_622);
},within:function(_624,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_624,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_624);
if(_624.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_624.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_624.offsetWidth);
},withinIncludingScrolloffsets:function(_627,x,y){
var _62a=this.realOffset(_627);
this.xcomp=x+_62a.x-this.windowOffset.x;
this.ycomp=y+_62a.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_627);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_627.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_627.offsetWidth);
},overlap:function(mode,_62c){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_62c.offsetHeight)-this.ycomp)/_62c.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_62c.offsetWidth)-this.xcomp)/_62c.offsetWidth;
}
},absolutize:function(_62d){
_62d=MochiKit.DOM.getElement(_62d);
if(_62d.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _62e=MochiKit.Position.positionedOffset(_62d);
var _62f=_62d.clientWidth;
var _630=_62d.clientHeight;
var _631={"position":_62d.style.position,"left":_62e.x-parseFloat(_62d.style.left||0),"top":_62e.y-parseFloat(_62d.style.top||0),"width":_62d.style.width,"height":_62d.style.height};
_62d.style.position="absolute";
_62d.style.top=_62e.y+"px";
_62d.style.left=_62e.x+"px";
_62d.style.width=_62f+"px";
_62d.style.height=_630+"px";
return _631;
},positionedOffset:function(_632){
var _633=0,_634=0;
do{
_633+=_632.offsetTop||0;
_634+=_632.offsetLeft||0;
_632=_632.offsetParent;
if(_632){
var p=MochiKit.Style.getStyle(_632,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_632);
return new MochiKit.Style.Coordinates(_634,_633);
},relativize:function(_636,_637){
_636=MochiKit.DOM.getElement(_636);
if(_636.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_636.style.top||0)-(_637["top"]||0);
var left=parseFloat(_636.style.left||0)-(_637["left"]||0);
_636.style.position=_637["position"];
_636.style.top=top+"px";
_636.style.left=left+"px";
_636.style.width=_637["width"];
_636.style.height=_637["height"];
},clone:function(_63a,_63b){
_63a=MochiKit.DOM.getElement(_63a);
_63b=MochiKit.DOM.getElement(_63b);
_63b.style.position="absolute";
var _63c=this.cumulativeOffset(_63a);
_63b.style.top=_63c.y+"px";
_63b.style.left=_63c.x+"px";
_63b.style.width=_63a.offsetWidth+"px";
_63b.style.height=_63a.offsetHeight+"px";
},page:function(_63d){
var _63e=0;
var _63f=0;
var _640=_63d;
do{
_63e+=_640.offsetTop||0;
_63f+=_640.offsetLeft||0;
if(_640.offsetParent==document.body&&MochiKit.Style.getStyle(_640,"position")=="absolute"){
break;
}
}while(_640=_640.offsetParent);
_640=_63d;
do{
_63e-=_640.scrollTop||0;
_63f-=_640.scrollLeft||0;
}while(_640=_640.parentNode);
return new MochiKit.Style.Coordinates(_63f,_63e);
}});
MochiKit.Position.__new__=function(win){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Position);
MochiKit.Base._module("Visual","1.5",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual._RoundCorners=function(e,_643){
e=MochiKit.DOM.getElement(e);
this._setOptions(_643);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _644=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_644=C.fromBackground(e);
}else{
if(!(_644 instanceof C)){
_644=C.fromString(_644);
}
}
this.isTransparent=(_644.asRGB().a<=0);
var _646=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_646=C.fromBackground(e.offsetParent);
}else{
if(!(_646 instanceof C)){
_646=C.fromString(_646);
}
}
this._roundCornersImpl(e,_644,_646);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _648=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _64a=doc.defaultView.getComputedStyle(e,null);
if(typeof (_64a)==="undefined"||_64a===null){
return e;
}
var _64b=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_64a.getPropertyValue("padding-top"),marginRight:_64a.getPropertyValue("padding-right"),marginBottom:_64a.getPropertyValue("padding-bottom"),marginLeft:_64a.getPropertyValue("padding-left"),padding:"0px"}});
_64b.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_64b);
return e;
},_roundCornersImpl:function(e,_64d,_64e){
if(this.options.border){
this._renderBorder(e,_64e);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_64d,_64e);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_64d,_64e);
}
},_renderBorder:function(el,_650){
var _651="1px solid "+this._borderColor(_650);
var _652="border-left: "+_651;
var _653="border-right: "+_651;
var _654="style='"+_652+";"+_653+"'";
el.innerHTML="<div "+_654+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_656,_657){
var _658=this._createCorner(_657);
for(var i=0;i<this.options.numSlices;i++){
_658.appendChild(this._createCornerSlice(_656,_657,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_658,el.firstChild);
},_roundBottomCorners:function(el,_65b,_65c){
var _65d=this._createCorner(_65c);
for(var i=(this.options.numSlices-1);i>=0;i--){
_65d.appendChild(this._createCornerSlice(_65b,_65c,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_65d);
},_createCorner:function(_65f){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_65f.toString()}});
},_createCornerSlice:function(_661,_662,n,_664){
var _665=MochiKit.DOM.SPAN();
var _666=_665.style;
_666.backgroundColor=_661.toString();
_666.display="block";
_666.height="1px";
_666.overflow="hidden";
_666.fontSize="1px";
var _667=this._borderColor(_661,_662);
if(this.options.border&&n===0){
_666.borderTopStyle="solid";
_666.borderTopWidth="1px";
_666.borderLeftWidth="0px";
_666.borderRightWidth="0px";
_666.borderBottomWidth="0px";
_666.height="0px";
_666.borderColor=_667.toString();
}else{
if(_667){
_666.borderColor=_667.toString();
_666.borderStyle="solid";
_666.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_666.height="2px";
}
this._setMargin(_665,n,_664);
this._setBorder(_665,n,_664);
return _665;
},_setOptions:function(_668){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_668);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _669=this.options.corners;
if(this._hasString(_669,"all","top")){
return "";
}
var _66a=(_669.indexOf("tl")!=-1);
var _66b=(_669.indexOf("tr")!=-1);
if(_66a&&_66b){
return "";
}
if(_66a){
return "left";
}
if(_66b){
return "right";
}
return "";
},_whichSideBottom:function(){
var _66c=this.options.corners;
if(this._hasString(_66c,"all","bottom")){
return "";
}
var _66d=(_66c.indexOf("bl")!=-1);
var _66e=(_66c.indexOf("br")!=-1);
if(_66d&&_66e){
return "";
}
if(_66d){
return "left";
}
if(_66e){
return "right";
}
return "";
},_borderColor:function(_66f,_670){
if(_66f=="transparent"){
return _670;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _670.blendedColor(_66f);
}
}
}
return "";
},_setMargin:function(el,n,_673){
var _674=this._marginSize(n)+"px";
var _675=(_673=="top"?this._whichSideTop():this._whichSideBottom());
var _676=el.style;
if(_675=="left"){
_676.marginLeft=_674;
_676.marginRight="0px";
}else{
if(_675=="right"){
_676.marginRight=_674;
_676.marginLeft="0px";
}else{
_676.marginLeft=_674;
_676.marginRight=_674;
}
}
},_setBorder:function(el,n,_679){
var _67a=this._borderSize(n)+"px";
var _67b=(_679=="top"?this._whichSideTop():this._whichSideBottom());
var _67c=el.style;
if(_67b=="left"){
_67c.borderLeftWidth=_67a;
_67c.borderRightWidth="0px";
}else{
if(_67b=="right"){
_67c.borderRightWidth=_67a;
_67c.borderLeftWidth="0px";
}else{
_67c.borderLeftWidth=_67a;
_67c.borderRightWidth=_67a;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _67f=[1,0];
return _67f[n];
}else{
if(o.compact){
var _680=[2,1];
return _680[n];
}else{
if(o.blend){
var _681=[3,2,1,0];
return _681[n];
}else{
var _682=[5,3,2,1];
return _682[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _685;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_685=[1,0];
}else{
if(o.blend){
_685=[2,1,1,1];
}else{
if(o.border){
_685=[0,2,0,0];
}else{
if(this.isTransparent){
_685=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _685[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_68a){
new MochiKit.Visual._RoundCorners(e,_68a);
};
MochiKit.Visual.roundClass=function(_68b,_68c,_68d){
var _68e=MochiKit.DOM.getElementsByTagAndClassName(_68b,_68c);
for(var i=0;i<_68e.length;i++){
MochiKit.Visual.roundElement(_68e[i],_68d);
}
};
MochiKit.Visual.tagifyText=function(_690,_691){
_691=_691||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_691+=";zoom:1";
}
_690=MochiKit.DOM.getElement(_690);
var ma=MochiKit.Base.map;
ma(function(_693){
if(_693.nodeType==3){
ma(function(_694){
_690.insertBefore(MochiKit.DOM.SPAN({style:_691},_694==" "?String.fromCharCode(160):_694),_693);
},_693.nodeValue.split(""));
MochiKit.DOM.removeElement(_693);
}
},_690.childNodes);
};
MochiKit.Visual._forceRerendering=function(_695){
try{
_695=MochiKit.DOM.getElement(_695);
var n=document.createTextNode(" ");
_695.appendChild(n);
_695.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_697,_698,_699){
_699=MochiKit.Base.update({speed:0.1,delay:0},_699);
var _69a=_699.delay;
var _69b=0;
MochiKit.Base.map(function(_69c){
_699.delay=_69b*_699.speed+_69a;
new _698(_69c,_699);
_69b+=1;
},_697);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_69d,_69e,_69f){
_69d=MochiKit.DOM.getElement(_69d);
_69e=(_69e||"appear").toLowerCase();
_69f=MochiKit.Base.update({queue:{position:"end",scope:(_69d.id||"global"),limit:1}},_69f);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_69d,"display")!="none"?v.PAIRS[_69e][1]:v.PAIRS[_69e][0]](_69d,_69f);
};
MochiKit.Visual.Transitions={__export__:false};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_6a7){
if(_6a7){
pos*=2*_6a7;
}else{
pos*=10;
}
var _6a8=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_6a8:1-_6a8;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.spring=function(pos){
return 1-(Math.cos(pos*2.5*Math.PI)*Math.exp(-pos*6));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Visual.ScopedQueue.__export__=false;
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_6ae){
var _6af=new Date().getTime();
var _6b0=(typeof (_6ae.options.queue)=="string")?_6ae.options.queue:_6ae.options.queue.position;
var ma=MochiKit.Base.map;
switch(_6b0){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_6ae.finishOn;
e.finishOn+=_6ae.finishOn;
}
},this.effects);
break;
case "end":
var _6b3;
ma(function(e){
var i=e.finishOn;
if(i>=(_6b3||i)){
_6b3=i;
}
},this.effects);
_6af=_6b3||_6af;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
case "replace":
ma(function(e){
e.cancel();
},this.effects);
break;
}
_6ae.startOn+=_6af;
_6ae.finishOn+=_6af;
if(!_6ae.options.queue.limit||this.effects.length<_6ae.options.queue.limit){
this.effects.push(_6ae);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_6b9){
return setInterval(func,_6b9);
},remove:function(_6ba){
this.effects=MochiKit.Base.filter(function(e){
return e!=_6ba;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_6bc){
clearInterval(_6bc);
},loop:function(){
var _6bd=new Date().getTime();
MochiKit.Base.map(function(_6be){
_6be.loop(_6bd);
},this.effects);
}});
MochiKit.Visual.Queues={__export__:false,instances:{},get:function(_6bf){
if(typeof (_6bf)!="string"){
return _6bf;
}
if(!this.instances[_6bf]){
this.instances[_6bf]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_6bf];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.Queue.__export__=false;
MochiKit.Visual.DefaultOptions={__export__:false,transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_6c0){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_6c0,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_6c2){
if(_6c2>=this.startOn){
if(_6c2>=this.finishOn){
return this.finalize();
}
var pos=(_6c2-this.startOn)/(this.finishOn-this.startOn);
var _6c4=Math.round(pos*this.options.fps*this.options.duration);
if(_6c4>this.currentFrame){
this.render(pos);
this.currentFrame=_6c4;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
var _6c6=this.options.transition;
if(typeof (_6c6)=="string"){
_6c6=MochiKit.Visual.Transitions[_6c6];
}
if(typeof (_6c6)=="function"){
pos=_6c6(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_6c7){
},event:function(_6c8){
if(this.options[_6c8+"Internal"]){
this.options[_6c8+"Internal"](this);
}
if(this.options[_6c8]){
this.options[_6c8](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_6c9,_6ca){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6c9,_6ca);
}
this.__init__(_6c9,_6ca);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_6cc,_6cd){
this.effects=_6cc||[];
this.start(_6cd);
},update:function(_6ce){
MochiKit.Base.map(function(_6cf){
_6cf.render(_6ce);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_6d0){
_6d0.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_6d1,_6d2){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6d1,_6d2);
}
this.__init__(_6d1,_6d2);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_6d4,_6d5){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_6d4||[];
MochiKit.Base.map(function(_6d7){
defs.duration+=_6d7.options.duration;
},this.effects);
MochiKit.Base.setdefault(_6d5,defs);
this.start(_6d5);
},update:function(_6d8){
var time=_6d8*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _6db=this.effects[i];
if(time<=_6db.options.duration){
_6db.render(time/_6db.options.duration);
break;
}else{
time-=_6db.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_6dc){
_6dc.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_6dd,_6de){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6dd,_6de);
}
this.__init__(_6dd,_6de);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_6e0,_6e1){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_6e0);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_6e1=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_6e1);
this.start(_6e1);
},update:function(_6e4){
MochiKit.Style.setStyle(this.element,{"opacity":_6e4});
}});
MochiKit.Visual.Move=function(_6e5,_6e6){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6e5,_6e6);
}
this.__init__(_6e5,_6e6);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_6e8,_6e9){
this.element=MochiKit.DOM.getElement(_6e8);
_6e9=MochiKit.Base.update({x:0,y:0,mode:"relative"},_6e9);
this.start(_6e9);
},setup:function(){
MochiKit.Style.makePositioned(this.element);
var s=this.element.style;
var _6eb=s.visibility;
var _6ec=s.display;
if(_6ec=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_6ec=="none"){
s.visibility=_6eb;
s.display=_6ec;
}
},update:function(_6ed){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_6ed+this.originalLeft)+"px",top:Math.round(this.options.y*_6ed+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_6ee,_6ef,_6f0){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6ee,_6ef,_6f0);
}
this.__init__(_6ee,_6ef,_6f0);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_6f2,_6f3,_6f4){
this.element=MochiKit.DOM.getElement(_6f2);
_6f4=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_6f3},_6f4);
this.start(_6f4);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _6f8=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_6f9){
if(_6f8.indexOf(_6f9)>0){
this.fontSize=parseFloat(_6f8);
this.fontSizeType=_6f9;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_6fa){
var _6fb=(this.options.scaleFrom/100)+(this.factor*_6fa);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_6fb+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_6fb,this.dims[1]*_6fb);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_6fc,_6fd){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_6fd)+"px";
}
if(this.options.scaleY){
d.height=r(_6fc)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_6fc-this.dims[0])/2;
var _701=(_6fd-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_701+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_701+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_702,_703){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_702,_703);
}
this.__init__(_702,_703);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_705,_706){
this.element=MochiKit.DOM.getElement(_705);
_706=MochiKit.Base.update({startcolor:"#ffff99"},_706);
this.start(_706);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_70b){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_70b));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_70e,_70f){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_70e,_70f);
}
this.__init__(_70e,_70f);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_711,_712){
this.element=MochiKit.DOM.getElement(_711);
this.start(_712);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _714=p.cumulativeOffset(this.element);
if(this.options.offset){
_714.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_714.y>max?max:_714.y)-this.scrollStart;
},update:function(_716){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_716*this.delta));
}});
MochiKit.Visual._CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_718,_719){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_718,_719);
}
this.__init__(_718,_719);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_71b,_71c){
this.element=MochiKit.DOM.getElement(_71b);
this.start(_71c);
},setup:function(){
var b=MochiKit.Base;
var _71e=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _71f,unit;
for(var s in _71e){
_71f=_71e[s];
s=b.camelize(s);
if(MochiKit.Visual._CSS_LENGTH.test(_71f)){
var _722=_71f.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_71f=parseFloat(_722[1]);
unit=(_722.length==3)?_722[2]:null;
this.styleEnd[s]=_71f;
this.units[s]=unit;
_71f=MochiKit.Style.getStyle(this.element,s);
_722=_71f.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_71f=parseFloat(_722[1]);
this.styleStart[s]=_71f;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_71f=c.fromString(_71f);
if(_71f){
this.units[s]="color";
this.styleEnd[s]=_71f.toHexString();
_71f=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_71f).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_71f;
}
}
}
},update:function(_726){
var _727;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _72a=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_72a[i]+(end[i]-_72a[i])*_726));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_727=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_726*1000)/1000+this.units[s];
this.element.style[s]=_727;
}
}
}});
MochiKit.Visual.fade=function(_72d,_72e){
var s=MochiKit.Style;
var _730=s.getStyle(_72d,"opacity");
_72e=MochiKit.Base.update({from:s.getStyle(_72d,"opacity")||1,to:0,afterFinishInternal:function(_731){
if(_731.options.to!==0){
return;
}
s.hideElement(_731.element);
s.setStyle(_731.element,{"opacity":_730});
}},_72e);
return new MochiKit.Visual.Opacity(_72d,_72e);
};
MochiKit.Visual.appear=function(_732,_733){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_733=MochiKit.Base.update({from:(s.getStyle(_732,"display")=="none"?0:s.getStyle(_732,"opacity")||0),to:1,afterFinishInternal:function(_736){
v._forceRerendering(_736.element);
},beforeSetupInternal:function(_737){
s.setStyle(_737.element,{"opacity":_737.options.from});
s.showElement(_737.element);
}},_733);
return new v.Opacity(_732,_733);
};
MochiKit.Visual.puff=function(_738,_739){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_738=MochiKit.DOM.getElement(_738);
var _73c=MochiKit.Style.getElementDimensions(_738,true);
var _73d={position:s.getStyle(_738,"position"),top:_738.style.top,left:_738.style.left,width:_738.style.width,height:_738.style.height,opacity:s.getStyle(_738,"opacity")};
_739=MochiKit.Base.update({beforeSetupInternal:function(_73e){
MochiKit.Position.absolutize(_73e.effects[0].element);
},afterFinishInternal:function(_73f){
s.hideElement(_73f.effects[0].element);
s.setStyle(_73f.effects[0].element,_73d);
},scaleContent:true,scaleFromCenter:true},_739);
return new v.Parallel([new v.Scale(_738,200,{sync:true,scaleFromCenter:_739.scaleFromCenter,scaleMode:{originalHeight:_73c.h,originalWidth:_73c.w},scaleContent:_739.scaleContent,restoreAfterFinish:true}),new v.Opacity(_738,{sync:true,to:0})],_739);
};
MochiKit.Visual.blindUp=function(_740,_741){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_740=d.getElement(_740);
var _744=s.getElementDimensions(_740,true);
var _745=s.makeClipping(_740);
_741=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_744.h,originalWidth:_744.w},restoreAfterFinish:true,afterFinishInternal:function(_746){
s.hideElement(_746.element);
s.undoClipping(_746.element,_745);
}},_741);
return new MochiKit.Visual.Scale(_740,0,_741);
};
MochiKit.Visual.blindDown=function(_747,_748){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_747=d.getElement(_747);
var _74b=s.getElementDimensions(_747,true);
var _74c;
_748=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_74b.h,originalWidth:_74b.w},restoreAfterFinish:true,afterSetupInternal:function(_74d){
_74c=s.makeClipping(_74d.element);
s.setStyle(_74d.element,{height:"0px"});
s.showElement(_74d.element);
},afterFinishInternal:function(_74e){
s.undoClipping(_74e.element,_74c);
}},_748);
return new MochiKit.Visual.Scale(_747,100,_748);
};
MochiKit.Visual.switchOff=function(_74f,_750){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_74f=d.getElement(_74f);
var _753=s.getElementDimensions(_74f,true);
var _754=s.getStyle(_74f,"opacity");
var _755;
_750=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_756){
s.makePositioned(_74f);
_755=s.makeClipping(_74f);
},afterFinishInternal:function(_757){
s.hideElement(_74f);
s.undoClipping(_74f,_755);
s.undoPositioned(_74f);
s.setStyle(_74f,{"opacity":_754});
}},_750);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_74f,{sync:true,duration:0.57*_750.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_74f,1,{sync:true,duration:0.43*_750.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_753.h,originalWidth:_753.w},scaleContent:false,restoreAfterFinish:true})],_750);
};
MochiKit.Visual.dropOut=function(_759,_75a){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_759=d.getElement(_759);
var _75d={top:s.getStyle(_759,"top"),left:s.getStyle(_759,"left"),opacity:s.getStyle(_759,"opacity")};
_75a=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_75e){
s.makePositioned(_75e.effects[0].element);
},afterFinishInternal:function(_75f){
s.hideElement(_75f.effects[0].element);
s.undoPositioned(_75f.effects[0].element);
s.setStyle(_75f.effects[0].element,_75d);
}},_75a);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_759,{x:0,y:_75a.distance,sync:true}),new v.Opacity(_759,{sync:true,to:0})],_75a);
};
MochiKit.Visual.shake=function(_761,_762){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_761=d.getElement(_761);
var _766={top:s.getStyle(_761,"top"),left:s.getStyle(_761,"left")};
_762=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_767){
s.undoPositioned(_761);
s.setStyle(_761,_766);
}},_762);
return new v.Sequence([new v.Move(_761,{sync:true,duration:0.1*_762.duration,x:20,y:0}),new v.Move(_761,{sync:true,duration:0.2*_762.duration,x:-40,y:0}),new v.Move(_761,{sync:true,duration:0.2*_762.duration,x:40,y:0}),new v.Move(_761,{sync:true,duration:0.2*_762.duration,x:-40,y:0}),new v.Move(_761,{sync:true,duration:0.2*_762.duration,x:40,y:0}),new v.Move(_761,{sync:true,duration:0.1*_762.duration,x:-20,y:0})],_762);
};
MochiKit.Visual.slideDown=function(_768,_769){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_768=d.getElement(_768);
if(!_768.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_768);
var _76d=s.getStyle(_768.firstChild,"bottom")||0;
var _76e=s.getElementDimensions(_768,true);
var _76f;
_769=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_76e.h,originalWidth:_76e.w},restoreAfterFinish:true,afterSetupInternal:function(_770){
s.makePositioned(_770.element);
s.makePositioned(_770.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_770.element,{top:""});
}
_76f=s.makeClipping(_770.element);
s.setStyle(_770.element,{height:"0px"});
s.showElement(_770.element);
},afterUpdateInternal:function(_771){
var _772=s.getElementDimensions(_771.element,true);
s.setStyle(_771.element.firstChild,{bottom:(_771.dims[0]-_772.h)+"px"});
},afterFinishInternal:function(_773){
s.undoClipping(_773.element,_76f);
if(/MSIE/.test(navigator.userAgent)){
s.undoPositioned(_773.element);
s.undoPositioned(_773.element.firstChild);
}else{
s.undoPositioned(_773.element.firstChild);
s.undoPositioned(_773.element);
}
s.setStyle(_773.element.firstChild,{bottom:_76d});
}},_769);
return new MochiKit.Visual.Scale(_768,100,_769);
};
MochiKit.Visual.slideUp=function(_774,_775){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_774=d.getElement(_774);
if(!_774.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_774);
var _779=s.getStyle(_774.firstChild,"bottom");
var _77a=s.getElementDimensions(_774,true);
var _77b;
_775=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_77a.h,originalWidth:_77a.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_77c){
s.makePositioned(_77c.element);
s.makePositioned(_77c.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_77c.element,{top:""});
}
_77b=s.makeClipping(_77c.element);
s.showElement(_77c.element);
},afterUpdateInternal:function(_77d){
var _77e=s.getElementDimensions(_77d.element,true);
s.setStyle(_77d.element.firstChild,{bottom:(_77d.dims[0]-_77e.h)+"px"});
},afterFinishInternal:function(_77f){
s.hideElement(_77f.element);
s.undoClipping(_77f.element,_77b);
s.undoPositioned(_77f.element.firstChild);
s.undoPositioned(_77f.element);
s.setStyle(_77f.element.firstChild,{bottom:_779});
}},_775);
return new MochiKit.Visual.Scale(_774,0,_775);
};
MochiKit.Visual.squish=function(_780,_781){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
var _785=s.getElementDimensions(_780,true);
var _786;
_781=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_785.w,originalWidth:_785.h},beforeSetupInternal:function(_787){
_786=s.makeClipping(_787.element);
},afterFinishInternal:function(_788){
s.hideElement(_788.element);
s.undoClipping(_788.element,_786);
}},_781);
return new MochiKit.Visual.Scale(_780,/Opera/.test(navigator.userAgent)?1:0,_781);
};
MochiKit.Visual.grow=function(_789,_78a){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_789=d.getElement(_789);
_78a=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_78a);
var _78e={top:_789.style.top,left:_789.style.left,height:_789.style.height,width:_789.style.width,opacity:s.getStyle(_789,"opacity")};
var dims=s.getElementDimensions(_789,true);
var _790,_791;
var _792,_793;
switch(_78a.direction){
case "top-left":
_790=_791=_792=_793=0;
break;
case "top-right":
_790=dims.w;
_791=_793=0;
_792=-dims.w;
break;
case "bottom-left":
_790=_792=0;
_791=dims.h;
_793=-dims.h;
break;
case "bottom-right":
_790=dims.w;
_791=dims.h;
_792=-dims.w;
_793=-dims.h;
break;
case "center":
_790=dims.w/2;
_791=dims.h/2;
_792=-dims.w/2;
_793=-dims.h/2;
break;
}
var _794=MochiKit.Base.update({beforeSetupInternal:function(_795){
s.setStyle(_795.effects[0].element,{height:"0px"});
s.showElement(_795.effects[0].element);
},afterFinishInternal:function(_796){
s.undoClipping(_796.effects[0].element);
s.undoPositioned(_796.effects[0].element);
s.setStyle(_796.effects[0].element,_78e);
}},_78a);
return new v.Move(_789,{x:_790,y:_791,duration:0.01,beforeSetupInternal:function(_797){
s.hideElement(_797.element);
s.makeClipping(_797.element);
s.makePositioned(_797.element);
},afterFinishInternal:function(_798){
new v.Parallel([new v.Opacity(_798.element,{sync:true,to:1,from:0,transition:_78a.opacityTransition}),new v.Move(_798.element,{x:_792,y:_793,sync:true,transition:_78a.moveTransition}),new v.Scale(_798.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_78a.scaleTransition,scaleContent:_78a.scaleContent,scaleFromCenter:_78a.scaleFromCenter,restoreAfterFinish:true})],_794);
}});
};
MochiKit.Visual.shrink=function(_799,_79a){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_799=d.getElement(_799);
_79a=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_79a);
var _79e={top:_799.style.top,left:_799.style.left,height:_799.style.height,width:_799.style.width,opacity:s.getStyle(_799,"opacity")};
var dims=s.getElementDimensions(_799,true);
var _7a0,_7a1;
switch(_79a.direction){
case "top-left":
_7a0=_7a1=0;
break;
case "top-right":
_7a0=dims.w;
_7a1=0;
break;
case "bottom-left":
_7a0=0;
_7a1=dims.h;
break;
case "bottom-right":
_7a0=dims.w;
_7a1=dims.h;
break;
case "center":
_7a0=dims.w/2;
_7a1=dims.h/2;
break;
}
var _7a2;
var _7a3=MochiKit.Base.update({beforeStartInternal:function(_7a4){
s.makePositioned(_7a4.effects[0].element);
_7a2=s.makeClipping(_7a4.effects[0].element);
},afterFinishInternal:function(_7a5){
s.hideElement(_7a5.effects[0].element);
s.undoClipping(_7a5.effects[0].element,_7a2);
s.undoPositioned(_7a5.effects[0].element);
s.setStyle(_7a5.effects[0].element,_79e);
}},_79a);
return new v.Parallel([new v.Opacity(_799,{sync:true,to:0,from:1,transition:_79a.opacityTransition}),new v.Scale(_799,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_79a.scaleTransition,scaleContent:_79a.scaleContent,scaleFromCenter:_79a.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_799,{x:_7a0,y:_7a1,sync:true,transition:_79a.moveTransition})],_7a3);
};
MochiKit.Visual.pulsate=function(_7a6,_7a7){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _7ab=MochiKit.Style.getStyle(_7a6,"opacity");
_7a7=b.update({duration:3,from:0,afterFinishInternal:function(_7ac){
MochiKit.Style.setStyle(_7ac.element,{"opacity":_7ab});
}},_7a7);
var _7ad=_7a7.transition||v.Transitions.sinoidal;
_7a7.transition=function(pos){
return _7ad(1-v.Transitions.pulse(pos,_7a7.pulses));
};
return new v.Opacity(_7a6,_7a7);
};
MochiKit.Visual.fold=function(_7af,_7b0){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_7af=d.getElement(_7af);
var _7b4=s.getElementDimensions(_7af,true);
var _7b5={top:_7af.style.top,left:_7af.style.left,width:_7af.style.width,height:_7af.style.height};
var _7b6=s.makeClipping(_7af);
_7b0=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_7b4.h,originalWidth:_7b4.w},afterFinishInternal:function(_7b7){
new v.Scale(_7af,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_7b4.h,originalWidth:_7b4.w},afterFinishInternal:function(_7b8){
s.hideElement(_7b8.element);
s.undoClipping(_7b8.element,_7b6);
s.setStyle(_7b8.element,_7b5);
}});
}},_7b0);
return new v.Scale(_7af,5,_7b0);
};
MochiKit.Base.nameFunctions(MochiKit.Visual);
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
MochiKit.Base._module("DragAndDrop","1.5",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_7b9){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_7b9);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_7be){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_7be)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_7be);
}
},this.drops);
},findDeepestChild:function(_7c0){
var _7c1=_7c0[0];
for(var i=1;i<_7c0.length;++i){
if(MochiKit.DOM.isChildNode(_7c0[i].element,_7c1.element)){
_7c1=_7c0[i];
}
}
return _7c1;
},show:function(_7c3,_7c4){
if(!this.drops.length){
return;
}
var _7c5=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_7c3,_7c4)){
_7c5.push(drop);
}
});
if(_7c5.length>0){
var drop=this.findDeepestChild(_7c5);
MochiKit.Position.within(drop.element,_7c3.page.x,_7c3.page.y);
drop.options.onhover(_7c4,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_7c8,_7c9){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_7c8.mouse(),_7c9)){
this.last_active.options.ondrop(_7c9,this.last_active.element,_7c8);
}
},reset:function(_7ca){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_7ca);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_7cc,_7cd){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_7cc,_7cd);
}
this.__init__(_7cc,_7cd);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_7cf,_7d0){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_7cf);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_7d0);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
MochiKit.Style.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_7d4){
if(this.options._containers.length){
var _7d5;
if(this.options.tree){
_7d5=_7d4.treeNode;
}else{
_7d5=_7d4.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _7d5==c;
});
}else{
return true;
}
},isAccepted:function(_7d7){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_7d7,c);
}));
},isAffected:function(_7d9,_7da){
return ((this.element!=_7da)&&this.isContained(_7da)&&this.isAccepted(_7da)&&MochiKit.Position.within(this.element,_7d9.page.x,_7d9.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_7db){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_7db);
},unregister:function(_7dd){
this.drags=MochiKit.Base.filter(function(d){
return d!=_7dd;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_7e0){
window.focus();
this.activeDraggable=_7e0;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_7e1){
if(!this.activeDraggable){
return;
}
var _7e2=_7e1.mouse();
if(this._lastPointer&&(MochiKit.Base.repr(this._lastPointer.page)==MochiKit.Base.repr(_7e2.page))){
return;
}
this._lastPointer=_7e2;
this.activeDraggable.updateDrag(_7e1,_7e2);
},endDrag:function(_7e3){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_7e3);
this.activeDraggable=null;
},keyPress:function(_7e4){
if(this.activeDraggable){
this.activeDraggable.keyPress(_7e4);
}
},notify:function(_7e5,_7e6,_7e7){
MochiKit.Signal.signal(this,_7e5,_7e6,_7e7);
}};
MochiKit.DragAndDrop.Draggable=function(_7e8,_7e9){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_7e8,_7e9);
}
this.__init__(_7e8,_7e9);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_7eb,_7ec){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_7ec=b.update({handle:false,starteffect:function(_7ef){
this._savedOpacity=MochiKit.Style.getStyle(_7ef,"opacity")||1;
new v.Opacity(_7ef,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_7f0,_7f1,_7f2){
var dur=Math.sqrt(Math.abs(_7f1^2)+Math.abs(_7f2^2))*0.02;
return new v.Move(_7f0,{x:-_7f2,y:-_7f1,duration:dur});
},endeffect:function(_7f4){
new v.Opacity(_7f4,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_7ec);
var d=MochiKit.DOM;
this.element=d.getElement(_7eb);
if(_7ec.handle&&(typeof (_7ec.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_7ec.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_7ec.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_7ec.scroll&&!_7ec.scroll.scrollTo&&!_7ec.scroll.outerHTML){
_7ec.scroll=d.getElement(_7ec.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_7ec.scroll);
}
MochiKit.Style.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_7ec;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0"),parseInt(s(this.element,"top")||"0")];
},initDrag:function(_7f7){
if(!_7f7.mouse().button.left){
return;
}
var src=_7f7.target();
var _7f9=(src.tagName||"").toUpperCase();
if(_7f9==="INPUT"||_7f9==="SELECT"||_7f9==="OPTION"||_7f9==="BUTTON"||_7f9==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _7fa=_7f7.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_7fa.page.x-pos.x,_7fa.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_7f7.stop();
},startDrag:function(_7fc){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=MochiKit.Style.getStyle(this.element,"z-index");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _7fd=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_7fd.left;
this.originalScrollTop=_7fd.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_7fc);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_7fe,_7ff){
if(!this.dragging){
this.startDrag(_7fe);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_7ff,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_7fe);
this.draw(_7ff);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _803=[0,0];
if(_7ff.page.x>(q.x-this.options.scrollSensitivity)){
_803[0]=_7ff.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_7ff.page.x<(p.x+this.options.scrollSensitivity)){
_803[0]=_7ff.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_7ff.page.y>(q.y-this.options.scrollSensitivity)){
_803[1]=_7ff.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_7ff.page.y<(p.y+this.options.scrollSensitivity)){
_803[1]=_7ff.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_803);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_7fe.stop();
},finishDrag:function(_804,_805){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_805){
dr.Droppables.fire(_804,this.element);
}
dr.Draggables.notify("end",this,_804);
var _807=this.options.revert;
if(_807&&typeof (_807)=="function"){
_807=_807(this.element);
}
var d=this.currentDelta();
if(_807&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_809){
if(_809.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_809,false);
_809.stop();
},endDrag:function(_80a){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_80a,true);
_80a.stop();
},draw:function(_80b){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_80b.page.x-pos.x-this.offset[0],_80b.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _812=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_812.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_812.top=p[1]+"px";
}
if(_812.visibility=="hidden"){
_812.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_813){
if(!_813[0]&&!_813[1]){
return;
}
this.scrollSpeed=[_813[0]*this.options.scrollSpeed,_813[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _814=new Date();
var _815=_814-this.lastScrolled;
this.lastScrolled=_814;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_815/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_815/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_815/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_815/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_815/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
MochiKit.Base._module("Sortable","1.5",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Base.update(MochiKit.Sortable,{__export__:false,sortables:{},_findRootElement:function(_81d){
while(_81d.tagName.toUpperCase()!="BODY"){
if(_81d.id&&MochiKit.Sortable.sortables[_81d.id]){
return _81d;
}
_81d=_81d.parentNode;
}
},_createElementId:function(_81e){
if(_81e.id==null||_81e.id==""){
var d=MochiKit.DOM;
var id;
var _821=1;
while(d.getElement(id="sortable"+_821)!=null){
_821+=1;
}
d.setNodeAttribute(_81e,"id",id);
}
},options:function(_822){
_822=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_822));
if(!_822){
return;
}
return MochiKit.Sortable.sortables[_822.id];
},destroy:function(_823){
var s=MochiKit.Sortable.options(_823);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_829,_82a){
_829=MochiKit.DOM.getElement(_829);
var self=MochiKit.Sortable;
self._createElementId(_829);
_82a=MochiKit.Base.update({element:_829,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_829],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_82a);
self.destroy(_829);
var _82c={revert:true,ghosting:_82a.ghosting,scroll:_82a.scroll,scrollSensitivity:_82a.scrollSensitivity,scrollSpeed:_82a.scrollSpeed,constraint:_82a.constraint,handle:_82a.handle};
if(_82a.starteffect){
_82c.starteffect=_82a.starteffect;
}
if(_82a.reverteffect){
_82c.reverteffect=_82a.reverteffect;
}else{
if(_82a.ghosting){
_82c.reverteffect=function(_82d){
_82d.style.top=0;
_82d.style.left=0;
};
}
}
if(_82a.endeffect){
_82c.endeffect=_82a.endeffect;
}
if(_82a.zindex){
_82c.zindex=_82a.zindex;
}
var _82e={overlap:_82a.overlap,containment:_82a.containment,hoverclass:_82a.hoverclass,onhover:self.onHover,tree:_82a.tree,accept:_82a.accept};
var _82f={onhover:self.onEmptyHover,overlap:_82a.overlap,containment:_82a.containment,hoverclass:_82a.hoverclass,accept:_82a.accept};
MochiKit.DOM.removeEmptyTextNodes(_829);
_82a.draggables=[];
_82a.droppables=[];
if(_82a.dropOnEmpty||_82a.tree){
new MochiKit.DragAndDrop.Droppable(_829,_82f);
_82a.droppables.push(_829);
}
MochiKit.Base.map(function(e){
var _831=_82a.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_82a.handle,e):e;
_82a.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_82c,{handle:_831})));
new MochiKit.DragAndDrop.Droppable(e,_82e);
if(_82a.tree){
e.treeNode=_829;
}
_82a.droppables.push(e);
},(self.findElements(_829,_82a)||[]));
if(_82a.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_82f);
e.treeNode=_829;
_82a.droppables.push(e);
},(self.findTreeElements(_829,_82a)||[]));
}
self.sortables[_829.id]=_82a;
_82a.lastValue=self.serialize(_829);
_82a.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_829));
_82a.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_829));
},onStart:function(_833,_834){
var self=MochiKit.Sortable;
var _836=self.options(_833);
_836.lastValue=self.serialize(_836.element);
},onEnd:function(_837,_838){
var self=MochiKit.Sortable;
self.unmark();
var _83a=self.options(_837);
if(_83a.lastValue!=self.serialize(_83a.element)){
_83a.onUpdate(_83a.element);
}
},findElements:function(_83b,_83c){
return MochiKit.Sortable.findChildren(_83b,_83c.only,_83c.tree,_83c.tag);
},findTreeElements:function(_83d,_83e){
return MochiKit.Sortable.findChildren(_83d,_83e.only,_83e.tree?true:false,_83e.treeTag);
},findChildren:function(_83f,only,_841,_842){
if(!_83f.hasChildNodes()){
return null;
}
_842=_842.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _843=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_842&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_843.push(e);
}
if(_841){
var _846=MochiKit.Sortable.findChildren(e,only,_841,_842);
if(_846&&_846.length>0){
_843=_843.concat(_846);
}
}
},_83f.childNodes);
return _843;
},onHover:function(_847,_848,_849){
if(MochiKit.DOM.isChildNode(_848,_847)){
return;
}
var self=MochiKit.Sortable;
if(_849>0.33&&_849<0.66&&self.options(_848).tree){
return;
}else{
if(_849>0.5){
self.mark(_848,"before");
if(_848.previousSibling!=_847){
var _84b=_847.parentNode;
_847.style.visibility="hidden";
_848.parentNode.insertBefore(_847,_848);
if(_848.parentNode!=_84b){
self.options(_84b).onChange(_847);
}
self.options(_848.parentNode).onChange(_847);
}
}else{
self.mark(_848,"after");
var _84c=_848.nextSibling||null;
if(_84c!=_847){
var _84b=_847.parentNode;
_847.style.visibility="hidden";
_848.parentNode.insertBefore(_847,_84c);
if(_848.parentNode!=_84b){
self.options(_84b).onChange(_847);
}
self.options(_848.parentNode).onChange(_847);
}
}
}
},_offsetSize:function(_84d,type){
if(type=="vertical"||type=="height"){
return _84d.offsetHeight;
}else{
return _84d.offsetWidth;
}
},onEmptyHover:function(_84f,_850,_851){
var _852=_84f.parentNode;
var self=MochiKit.Sortable;
var _854=self.options(_850);
if(!MochiKit.DOM.isChildNode(_850,_84f)){
var _855;
var _856=self.findElements(_850,{tag:_854.tag,only:_854.only});
var _857=null;
if(_856){
var _858=self._offsetSize(_850,_854.overlap)*(1-_851);
for(_855=0;_855<_856.length;_855+=1){
if(_858-self._offsetSize(_856[_855],_854.overlap)>=0){
_858-=self._offsetSize(_856[_855],_854.overlap);
}else{
if(_858-(self._offsetSize(_856[_855],_854.overlap)/2)>=0){
_857=_855+1<_856.length?_856[_855+1]:null;
break;
}else{
_857=_856[_855];
break;
}
}
}
}
_850.insertBefore(_84f,_857);
self.options(_852).onChange(_84f);
_854.onChange(_84f);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_85a,_85b){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _85e=self.options(_85a.parentNode);
if(_85e&&!_85e.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _85f=MochiKit.Position.cumulativeOffset(_85a);
self._marker.style.left=_85f.x+"px";
self._marker.style.top=_85f.y+"px";
if(_85b=="after"){
if(_85e.overlap=="horizontal"){
self._marker.style.left=(_85f.x+_85a.clientWidth)+"px";
}else{
self._marker.style.top=(_85f.y+_85a.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_860,_861,_862){
var self=MochiKit.Sortable;
var _864=self.findElements(_860,_861)||[];
for(var i=0;i<_864.length;++i){
var _866=_864[i].id.match(_861.format);
if(!_866){
continue;
}
var _867={id:encodeURIComponent(_866?_866[1]:null),element:_860,parent:_862,children:[],position:_862.children.length,container:self._findChildrenElement(_864[i],_861.treeTag.toUpperCase())};
if(_867.container){
self._tree(_867.container,_861,_867);
}
_862.children.push(_867);
}
return _862;
},_findChildrenElement:function(_868,_869){
if(_868&&_868.hasChildNodes){
_869=_869.toUpperCase();
for(var i=0;i<_868.childNodes.length;++i){
if(_868.childNodes[i].tagName.toUpperCase()==_869){
return _868.childNodes[i];
}
}
}
return null;
},tree:function(_86b,_86c){
_86b=MochiKit.DOM.getElement(_86b);
var _86d=MochiKit.Sortable.options(_86b);
_86c=MochiKit.Base.update({tag:_86d.tag,treeTag:_86d.treeTag,only:_86d.only,name:_86b.id,format:_86d.format},_86c||{});
var root={id:null,parent:null,children:new Array,container:_86b,position:0};
return MochiKit.Sortable._tree(_86b,_86c,root);
},setSequence:function(_86f,_870,_871){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_86f=MochiKit.DOM.getElement(_86f);
_871=b.update(self.options(_86f),_871||{});
var _874={};
b.map(function(n){
var m=n.id.match(_871.format);
if(m){
_874[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_86f,_871));
b.map(function(_877){
var n=_874[_877];
if(n){
n[1].appendChild(n[0]);
delete _874[_877];
}
},_870);
},_constructIndex:function(node){
var _87a="";
do{
if(node.id){
_87a="["+node.position+"]"+_87a;
}
}while((node=node.parent)!=null);
return _87a;
},sequence:function(_87b,_87c){
_87b=MochiKit.DOM.getElement(_87b);
var self=MochiKit.Sortable;
var _87c=MochiKit.Base.update(self.options(_87b),_87c||{});
return MochiKit.Base.map(function(item){
return item.id.match(_87c.format)?item.id.match(_87c.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_87b,_87c)||[]));
},serialize:function(_87f,_880){
_87f=MochiKit.DOM.getElement(_87f);
var self=MochiKit.Sortable;
_880=MochiKit.Base.update(self.options(_87f),_880||{});
var name=encodeURIComponent(_880.name||_87f.id);
if(_880.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_87f,_880).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_87f,_880)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Sortable.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Sortable.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Sortable);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.5";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Text","Async","DOM","Selector","Style","LoggingPane","Color","Signal","Position","Visual","DragAndDrop","Sortable"];
(function(){
if(typeof (document)=="undefined"){
return;
}
var _885=document.getElementsByTagName("script");
var _886="http://www.w3.org/1999/xhtml";
var _887="http://www.w3.org/2000/svg";
var _888="http://www.w3.org/1999/xlink";
var _889="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _88b=null;
var _88c={};
var i;
var src;
for(i=0;i<_885.length;i++){
src=null;
switch(_885[i].namespaceURI){
case _887:
src=_885[i].getAttributeNS(_888,"href");
break;
default:
src=_885[i].getAttribute("src");
break;
}
if(!src){
continue;
}
_88c[src]=true;
if(src.match(/MochiKit.js(\?.*)?$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_88b=_885[i];
}
}
if(base===null){
return;
}
var _88f=MochiKit.MochiKit.SUBMODULES;
for(var i=0;i<_88f.length;i++){
if(MochiKit[_88f[i]]){
continue;
}
var uri=base+_88f[i]+".js";
if(uri in _88c){
continue;
}
if(_88b.namespaceURI==_887||_88b.namespaceURI==_889){
var s=document.createElementNS(_88b.namespaceURI,"script");
s.setAttribute("id","MochiKit_"+base+_88f[i]);
if(_88b.namespaceURI==_887){
s.setAttributeNS(_888,"href",uri);
}else{
s.setAttribute("src",uri);
}
s.setAttribute("type","application/x-javascript");
_88b.parentNode.appendChild(s);
}else{
document.write("<"+_88b.nodeName+" src=\""+uri+"\" type=\"text/javascript\"></script>");
}
}
})();


